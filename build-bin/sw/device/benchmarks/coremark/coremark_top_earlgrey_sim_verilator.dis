
sw/device/benchmarks/coremark/coremark_top_earlgrey_sim_verilator.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .flash_header 00000004  20000000  20000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .crt          000000e0  20000004  20000004  00001004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .vectors      00000080  20000100  20000100  00001100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .init_array   00000000  20000180  20000180  00005020  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .text         00002fb6  20000180  20000180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .rodata       00000a5f  20003138  20003138  00004138  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         00000020  10000000  20003b98  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0000001c  10000020  20003bb8  00005020  2**2
                  ALLOC
  8 .logs.fields  000000c8  00010000  00010000  00005020  2**2
                  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  000050e8  2**0
                  CONTENTS, READONLY
 10 .debug_info   00007f8a  00000000  00000000  0000510e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001b1a  00000000  00000000  0000d098  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000098  00000000  00000000  0000ebb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00005f90  00000000  00000000  0000ec4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000059b1  00000000  00000000  00014bda  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000308  00000000  00000000  0001a58b  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    0000220b  00000000  00000000  0001a893  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  00000a20  00000000  00000000  0001caa0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .crt:

20000004 <_start>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:38
_start:
  .globl _start

  // Set up the stack. We have no expectation that the rom that
  // jumps here will have the correct stack start linked in.
  la sp, _stack_end
20000004:	f0020117          	auipc	sp,0xf0020
20000008:	ffc10113          	addi	sp,sp,-4 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:44

  // Set up the global pointer. This requires that we disable linker relaxations
  // (or it will be relaxed to `mv gp, gp`).
  .option push
  .option norelax
  la gp, __global_pointer$
2000000c:	f0000197          	auipc	gp,0xf0000
20000010:	7f418193          	addi	gp,gp,2036 # 10000800 <__global_pointer$>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:48
  .option pop

  // Set up the new interrupt vector.
  la   t0, crt_interrupt_vector
20000014:	00000297          	auipc	t0,0x0
20000018:	0ec28293          	addi	t0,t0,236 # 20000100 <crt_interrupt_vector>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:49
  csrw mtvec, t0
2000001c:	30529073          	csrw	mtvec,t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:52

  // Zero out the `.bss` segment.
  la   a0, _bss_start
20000020:	f0000517          	auipc	a0,0xf0000
20000024:	00050513          	mv	a0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:53
  la   a1, _bss_end
20000028:	f0000597          	auipc	a1,0xf0000
2000002c:	01458593          	addi	a1,a1,20 # 1000003c <_bss_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:54
  call crt_section_clear
20000030:	2899                	jal	20000086 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:57

  // Zero out the stack
  la   a0, _stack_start
20000032:	f001e517          	auipc	a0,0xf001e
20000036:	fce50513          	addi	a0,a0,-50 # 1001e000 <_stack_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:58
  la   a1, _stack_end
2000003a:	f0020597          	auipc	a1,0xf0020
2000003e:	fc658593          	addi	a1,a1,-58 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:59
  call crt_section_clear
20000042:	2091                	jal	20000086 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:62

  // Initialize the `.data` segment from the `.idata` segment.
  la   a0, _data_start
20000044:	f0000517          	auipc	a0,0xf0000
20000048:	fbc50513          	addi	a0,a0,-68 # 10000000 <seed3_volatile>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:63
  la   a1, _data_end
2000004c:	82018593          	addi	a1,gp,-2016 # 10000020 <_data_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:64
  la   a2, _data_init_start
20000050:	00004617          	auipc	a2,0x4
20000054:	b4860613          	addi	a2,a2,-1208 # 20003b98 <_data_init_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:65
  call crt_section_copy
20000058:	2889                	jal	200000aa <crt_section_copy>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:77
  // functions must be called before the instrumented functions in the program.
  //
  // We use `s0` and `s1` to represent the start and end pointers of
  // `.init_array`, respectively, and `t0` to store the addresses of the
  // functions to be called.
  la   s0, _init_array_start
2000005a:	00000417          	auipc	s0,0x0
2000005e:	12640413          	addi	s0,s0,294 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:78
  la   s1, _init_array_end
20000062:	00000497          	auipc	s1,0x0
20000066:	11e48493          	addi	s1,s1,286 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:79
  bgeu s0, s1, init_array_loop_end
2000006a:	00947863          	bgeu	s0,s1,2000007a <init_array_loop_end>

2000006e <init_array_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:81
init_array_loop:
  lw   t0, 0(s0)
2000006e:	00042283          	lw	t0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:82
  jalr t0
20000072:	9282                	jalr	t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:83
  addi s0, s0, 0x4
20000074:	0411                	addi	s0,s0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:84
  bltu s0, s1, init_array_loop
20000076:	fe946ce3          	bltu	s0,s1,2000006e <init_array_loop>

2000007a <init_array_loop_end>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:89
init_array_loop_end:

  // Jump into the C program entry point. This is your standard
  // C `main()`, so we need to pass dummy values for `argc` and `argv`.
  li   a0, 0x0  // argc = 0
2000007a:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:90
  li   a1, 0x0  // argv = NULL
2000007c:	4581                	li	a1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:91
  call main
2000007e:	0ae010ef          	jal	ra,2000112c <main>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:94

  // Halt the core (wfi loop)
  tail abort
20000082:	5490206f          	j	20002dca <abort>

20000086 <crt_section_clear>:
crt_section_clear():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:36
crt_section_clear:
  .globl crt_section_clear
  .type crt_section_clear, @function

  // Check that start is before end.
  bgeu a0, a1, L_clear_nothing
20000086:	00b57e63          	bgeu	a0,a1,200000a2 <L_clear_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:39

  // Check that start and end are word aligned.
  or   t0, a0, a1
2000008a:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:40
  andi t0, t0, 0x3
2000008e:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:41
  bnez t0, L_clear_error
20000092:	00029b63          	bnez	t0,200000a8 <L_clear_error>

20000096 <L_clear_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:46

L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
20000096:	00052023          	sw	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:47
  addi a0, a0, 4
2000009a:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:48
  bltu a0, a1, L_clear_loop
2000009c:	feb56de3          	bltu	a0,a1,20000096 <L_clear_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:49
  ret
200000a0:	8082                	ret

200000a2 <L_clear_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:54

L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_clear_error
200000a2:	00b51363          	bne	a0,a1,200000a8 <L_clear_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:55
  ret
200000a6:	8082                	ret

200000a8 <L_clear_error>:
	...

200000aa <crt_section_copy>:
crt_section_copy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:87
crt_section_copy:
  .global crt_section_copy
  .type crt_section_copy, @function

  // Check that start is before end.
  bgeu a0, a1, L_copy_nothing
200000aa:	02b57963          	bgeu	a0,a1,200000dc <L_copy_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:90

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
200000ae:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:91
  or   t0, t0, a2
200000b2:	00c2e2b3          	or	t0,t0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:92
  andi t0, t0, 0x3
200000b6:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:93
  bnez t0, L_copy_error
200000ba:	02029463          	bnez	t0,200000e2 <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:110
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
200000be:	40c502b3          	sub	t0,a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:111
  sub  t1, a1, a0           // end - start
200000c2:	40a58333          	sub	t1,a1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:112
  bltu t0, t1, L_copy_error
200000c6:	0062ee63          	bltu	t0,t1,200000e2 <L_copy_error>

200000ca <L_copy_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:117

L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
200000ca:	00062283          	lw	t0,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:118
  addi a2, a2, 4
200000ce:	0611                	addi	a2,a2,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:119
  sw   t0, 0(a0)
200000d0:	00552023          	sw	t0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:120
  addi a0, a0, 4
200000d4:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:121
  bltu a0, a1, L_copy_loop
200000d6:	feb56ae3          	bltu	a0,a1,200000ca <L_copy_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:122
  ret
200000da:	8082                	ret

200000dc <L_copy_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:127

L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_copy_error
200000dc:	00b51363          	bne	a0,a1,200000e2 <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:128
  ret
200000e0:	8082                	ret

200000e2 <L_copy_error>:
	...

Disassembly of section .vectors:

20000100 <crt_interrupt_vector>:
crt_interrupt_vector():
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:49
  .balign 256
crt_interrupt_vector:
  .global crt_interrupt_vector

  // exception Handler and user software interrupt
  j handler_exception
20000100:	3500206f          	j	20002450 <handler_exception>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:51
  // supervisor software interrupt
  unimp
20000104:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:53
  // reserved
  unimp
20000108:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:55
  // machine software interrupt handler
  j handler_irq_software
2000010c:	4840206f          	j	20002590 <handler_irq_software>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:58

  // user timer interrupt
  unimp
20000110:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:60
  // supervisor timer interrupt
  unimp
20000114:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:62
  // reserved
  unimp
20000118:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:64
  // machine timer interrupt handler
  j handler_irq_timer
2000011c:	4c80206f          	j	200025e4 <handler_irq_timer>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:67

  // user external interrupt
  unimp
20000120:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:69
  // supervisor external interrupt
  unimp
20000124:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:71
  // reserved
  unimp
20000128:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:73
  // machine external interrupt handler
  j handler_irq_external
2000012c:	50c0206f          	j	20002638 <handler_irq_external>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:76

  // reserved
  unimp
20000130:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:77
  unimp
20000134:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:78
  unimp
20000138:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:79
  unimp
2000013c:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:82

  // vendor interrupts: on Ibex interrupt ids 30-16 are the "fast" interrupts
  .rept 15
20000140:	c0001073          	unimp
20000144:	c0001073          	unimp
20000148:	c0001073          	unimp
2000014c:	c0001073          	unimp
20000150:	c0001073          	unimp
20000154:	c0001073          	unimp
20000158:	c0001073          	unimp
2000015c:	c0001073          	unimp
20000160:	c0001073          	unimp
20000164:	c0001073          	unimp
20000168:	c0001073          	unimp
2000016c:	c0001073          	unimp
20000170:	c0001073          	unimp
20000174:	c0001073          	unimp
20000178:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:87
  unimp
  .endr

  // vendor interrupts: on Ibex interrupt id 31 is for non-maskable interrupts
  unimp
2000017c:	c0001073          	unimp

Disassembly of section .text:

20000180 <barebones_clock>:
barebones_clock():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:44
   cpu clock cycles performance counter etc. Sample implementation for standard
   time.h and windows.h definitions included.
*/
CORETIMETYPE barebones_clock() {
  ee_u32 result;
  asm volatile("csrr %0, mcycle;" : "=r"(result));
20000180:	b0002573          	csrr	a0,mcycle
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:45
  return result;
20000184:	8082                	ret

20000186 <start_time>:
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:44
  asm volatile("csrr %0, mcycle;" : "=r"(result));
20000186:	b0002573          	csrr	a0,mcycle
start_time():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:73

        Implementation may be capturing a system timer (as implemented in the
   example code) or zeroing some system parameters - e.g. setting the cpu clocks
   cycles to 0.
*/
void start_time(void) { GETMYTIME(&start_time_val); }
2000018a:	f0000597          	auipc	a1,0xf0000
2000018e:	ea258593          	addi	a1,a1,-350 # 1000002c <start_time_val>
20000192:	c188                	sw	a0,0(a1)
20000194:	8082                	ret

20000196 <stop_time>:
barebones_clock():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:44
  asm volatile("csrr %0, mcycle;" : "=r"(result));
20000196:	b0002573          	csrr	a0,mcycle
stop_time():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:82

        Implementation may be capturing a system timer (as implemented in the
   example code) or other system parameters - e.g. reading the current value of
   cpu cycles counter.
*/
void stop_time(void) { GETMYTIME(&stop_time_val); }
2000019a:	f0000597          	auipc	a1,0xf0000
2000019e:	e9658593          	addi	a1,a1,-362 # 10000030 <stop_time_val>
200001a2:	c188                	sw	a0,0(a1)
200001a4:	8082                	ret

200001a6 <get_time>:
get_time():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:93
   methodology is taken to accomodate any hardware or simulated platform. The
   sample implementation returns millisecs by default, and the resolution is
   controlled by <TIMER_RES_DIVIDER>
*/
CORE_TICKS get_time(void) {
  CORE_TICKS elapsed = (CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
200001a6:	f0000517          	auipc	a0,0xf0000
200001aa:	e8a50513          	addi	a0,a0,-374 # 10000030 <stop_time_val>
200001ae:	4108                	lw	a0,0(a0)
200001b0:	f0000597          	auipc	a1,0xf0000
200001b4:	e7c58593          	addi	a1,a1,-388 # 1000002c <start_time_val>
200001b8:	418c                	lw	a1,0(a1)
200001ba:	8d0d                	sub	a0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:94
  return elapsed;
200001bc:	8082                	ret

200001be <time_in_secs>:
time_in_secs():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:103

        The <secs_ret> type is used to accomodate systems with no support for
   floating point. Default implementation implemented by the EE_TICKS_PER_SEC
   macro above.
*/
secs_ret time_in_secs(CORE_TICKS ticks) {
200001be:	431be5b7          	lui	a1,0x431be
200001c2:	e8358593          	addi	a1,a1,-381 # 431bde83 <_data_init_start+0x231ba2eb>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:104
  secs_ret retval = ((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
200001c6:	02b53533          	mulhu	a0,a0,a1
200001ca:	8145                	srli	a0,a0,0x11
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:105
  return retval;
200001cc:	8082                	ret

200001ce <portable_init>:
portable_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:116

/* Function : portable_init
        Target specific initialization code
        Test for some common mistakes.
*/
void portable_init(core_portable *p, int *argc, char *argv[]) {
200001ce:	7179                	addi	sp,sp,-48
200001d0:	d606                	sw	ra,44(sp)
200001d2:	d422                	sw	s0,40(sp)
200001d4:	d226                	sw	s1,36(sp)
200001d6:	d04a                	sw	s2,32(sp)
200001d8:	ce4e                	sw	s3,28(sp)
200001da:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:117
  CHECK(
200001dc:	f0000597          	auipc	a1,0xf0000
200001e0:	e5858593          	addi	a1,a1,-424 # 10000034 <uart>
200001e4:	40000537          	lui	a0,0x40000
200001e8:	60d010ef          	jal	ra,20001ff4 <dif_uart_init>
200001ec:	00003497          	auipc	s1,0x3
200001f0:	11448493          	addi	s1,s1,276 # 20003300 <kDeviceLogBypassUartAddress>
200001f4:	cd0d                	beqz	a0,2000022e <portable_init+0x60>
200001f6:	4088                	lw	a0,0(s1)
200001f8:	c909                	beqz	a0,2000020a <portable_init+0x3c>
200001fa:	e0010517          	auipc	a0,0xe0010
200001fe:	e0650513          	addi	a0,a0,-506 # 10000 <_dv_log_offset>
20000202:	4581                	li	a1,0
20000204:	596020ef          	jal	ra,2000279a <base_log_internal_dv>
20000208:	a831                	j	20000224 <portable_init+0x56>
2000020a:	00003597          	auipc	a1,0x3
2000020e:	f2e58593          	addi	a1,a1,-210 # 20003138 <__udivdi3+0x368>
20000212:	00810913          	addi	s2,sp,8
20000216:	4651                	li	a2,20
20000218:	854a                	mv	a0,s2
2000021a:	1aa020ef          	jal	ra,200023c4 <memcpy>
2000021e:	854a                	mv	a0,s2
20000220:	4d4020ef          	jal	ra,200026f4 <base_log_internal_core>
20000224:	6531                	lui	a0,0xc
20000226:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
2000022a:	263020ef          	jal	ra,20002c8c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:124
          (dif_uart_params_t){
              .base_addr = mmio_region_from_addr(TOP_EARLGREY_UART0_BASE_ADDR),
          },
          &uart) == kDifUartOk,
      "failed to init UART");
  CHECK(dif_uart_configure(&uart,
2000022e:	00003517          	auipc	a0,0x3
20000232:	0c250513          	addi	a0,a0,194 # 200032f0 <kUartBaudrate>
20000236:	4108                	lw	a0,0(a0)
20000238:	00003597          	auipc	a1,0x3
2000023c:	0a858593          	addi	a1,a1,168 # 200032e0 <kClockFreqPeripheralHz>
20000240:	418c                	lw	a1,0(a1)
20000242:	c42a                	sw	a0,8(sp)
20000244:	c62e                	sw	a1,12(sp)
20000246:	4405                	li	s0,1
20000248:	c822                	sw	s0,16(sp)
2000024a:	ca22                	sw	s0,20(sp)
2000024c:	f0000517          	auipc	a0,0xf0000
20000250:	de850513          	addi	a0,a0,-536 # 10000034 <uart>
20000254:	002c                	addi	a1,sp,8
20000256:	5ad010ef          	jal	ra,20002002 <dif_uart_configure>
2000025a:	cd05                	beqz	a0,20000292 <portable_init+0xc4>
2000025c:	4088                	lw	a0,0(s1)
2000025e:	c909                	beqz	a0,20000270 <portable_init+0xa2>
20000260:	e0010517          	auipc	a0,0xe0010
20000264:	db450513          	addi	a0,a0,-588 # 10014 <portable_init.kLogFields.2>
20000268:	4581                	li	a1,0
2000026a:	530020ef          	jal	ra,2000279a <base_log_internal_dv>
2000026e:	a829                	j	20000288 <portable_init+0xba>
20000270:	00003597          	auipc	a1,0x3
20000274:	edc58593          	addi	a1,a1,-292 # 2000314c <__udivdi3+0x37c>
20000278:	0024                	addi	s1,sp,8
2000027a:	4651                	li	a2,20
2000027c:	8526                	mv	a0,s1
2000027e:	146020ef          	jal	ra,200023c4 <memcpy>
20000282:	8526                	mv	a0,s1
20000284:	470020ef          	jal	ra,200026f4 <base_log_internal_core>
20000288:	6531                	lui	a0,0xc
2000028a:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
2000028e:	1ff020ef          	jal	ra,20002c8c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:140
        "ERROR! Please define ee_ptr_int to a type that holds a pointer!\n");
  }
  if (sizeof(ee_u32) != 4) {
    ee_printf("ERROR! Please define ee_u32 to a 32b unsigned type!\n");
  }
  p->portable_id = 1;
20000292:	00898023          	sb	s0,0(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:141
}
20000296:	49f2                	lw	s3,28(sp)
20000298:	5902                	lw	s2,32(sp)
2000029a:	5492                	lw	s1,36(sp)
2000029c:	5422                	lw	s0,40(sp)
2000029e:	50b2                	lw	ra,44(sp)
200002a0:	6145                	addi	sp,sp,48
200002a2:	8082                	ret

200002a4 <portable_fini>:
portable_fini():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:145
/* Function : portable_fini
        Target specific final code
*/
void portable_fini(core_portable *p) {
200002a4:	65a5                	lui	a1,0x9
200002a6:	05b5                	addi	a1,a1,13
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:146
  p->portable_id = 0;
200002a8:	00050023          	sb	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/core_portme.c:147
  test_status_set(kTestStatusPassed);
200002ac:	852e                	mv	a0,a1
200002ae:	1df0206f          	j	20002c8c <test_status_set>
	...

200002b4 <ee_printf>:
ee_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:660

  *str = '\0';
  return str - buf;
}

int ee_printf(const char *fmt, ...) {
200002b4:	7109                	addi	sp,sp,-384
200002b6:	14112e23          	sw	ra,348(sp)
200002ba:	14812c23          	sw	s0,344(sp)
200002be:	14912a23          	sw	s1,340(sp)
200002c2:	15212823          	sw	s2,336(sp)
200002c6:	15312623          	sw	s3,332(sp)
200002ca:	15412423          	sw	s4,328(sp)
200002ce:	15512223          	sw	s5,324(sp)
200002d2:	15612023          	sw	s6,320(sp)
200002d6:	13712e23          	sw	s7,316(sp)
200002da:	13812c23          	sw	s8,312(sp)
200002de:	13912a23          	sw	s9,308(sp)
200002e2:	13a12823          	sw	s10,304(sp)
200002e6:	13b12623          	sw	s11,300(sp)
200002ea:	842a                	mv	s0,a0
200002ec:	17112e23          	sw	a7,380(sp)
200002f0:	17012c23          	sw	a6,376(sp)
200002f4:	16f12a23          	sw	a5,372(sp)
200002f8:	16e12823          	sw	a4,368(sp)
200002fc:	16d12623          	sw	a3,364(sp)
20000300:	16c12423          	sw	a2,360(sp)
20000304:	16b12223          	sw	a1,356(sp)
20000308:	01410b13          	addi	s6,sp,20
2000030c:	16410b93          	addi	s7,sp,356
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:664
  char buf[256];
  va_list args;

  va_start(args, fmt);
20000310:	c85e                	sw	s7,16(sp)
20000312:	02500d13          	li	s10,37
20000316:	02a00a93          	li	s5,42
2000031a:	02000493          	li	s1,32
2000031e:	02300293          	li	t0,35
20000322:	4325                	li	t1,9
20000324:	4ca9                	li	s9,10
20000326:	02e00393          	li	t2,46
2000032a:	11410d93          	addi	s11,sp,276
2000032e:	03a00e13          	li	t3,58
20000332:	4e91                	li	t4,4
20000334:	06400f13          	li	t5,100
20000338:	51eb8537          	lui	a0,0x51eb8
2000033c:	51f50513          	addi	a0,a0,1311 # 51eb851f <_data_init_start+0x31eb4987>
20000340:	c42a                	sw	a0,8(sp)
20000342:	ccccd537          	lui	a0,0xccccd
20000346:	ccd50513          	addi	a0,a0,-819 # cccccccd <_data_init_start+0xaccc9135>
2000034a:	c62a                	sw	a0,12(sp)
2000034c:	02b00c13          	li	s8,43
20000350:	03000a13          	li	s4,48
20000354:	02d00f93          	li	t6,45
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:483
  for (str = buf; *fmt; fmt++) {
20000358:	00044503          	lbu	a0,0(s0)
2000035c:	01a50963          	beq	a0,s10,2000036e <ee_printf+0xba>
20000360:	5a050363          	beqz	a0,20000906 <ee_printf+0x652>
20000364:	001b0913          	addi	s2,s6,1
20000368:	00ab0023          	sb	a0,0(s6)
2000036c:	ab89                	j	200008be <ee_printf+0x60a>
2000036e:	4781                	li	a5,0
20000370:	0405                	addi	s0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:493
    switch (*fmt) {
20000372:	00044503          	lbu	a0,0(s0)
20000376:	00aada63          	bge	s5,a0,2000038a <ee_printf+0xd6>
2000037a:	01850f63          	beq	a0,s8,20000398 <ee_printf+0xe4>
2000037e:	01450f63          	beq	a0,s4,2000039c <ee_printf+0xe8>
20000382:	03f51263          	bne	a0,t6,200003a6 <ee_printf+0xf2>
20000386:	4541                	li	a0,16
20000388:	a829                	j	200003a2 <ee_printf+0xee>
2000038a:	00950b63          	beq	a0,s1,200003a0 <ee_printf+0xec>
2000038e:	00551c63          	bne	a0,t0,200003a6 <ee_printf+0xf2>
20000392:	02000513          	li	a0,32
20000396:	a031                	j	200003a2 <ee_printf+0xee>
20000398:	4511                	li	a0,4
2000039a:	a021                	j	200003a2 <ee_printf+0xee>
2000039c:	4505                	li	a0,1
2000039e:	a011                	j	200003a2 <ee_printf+0xee>
200003a0:	4521                	li	a0,8
200003a2:	8fc9                	or	a5,a5,a0
200003a4:	b7f1                	j	20000370 <ee_printf+0xbc>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:515
    if (is_digit(*fmt)) {
200003a6:	fd050593          	addi	a1,a0,-48
200003aa:	0ff5f593          	andi	a1,a1,255
200003ae:	02b36463          	bltu	t1,a1,200003d6 <ee_printf+0x122>
200003b2:	4981                	li	s3,0
skip_atoi():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
200003b4:	0ff57593          	andi	a1,a0,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
200003b8:	00144503          	lbu	a0,1(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
200003bc:	03998633          	mul	a2,s3,s9
200003c0:	0405                	addi	s0,s0,1
200003c2:	95b2                	add	a1,a1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
200003c4:	fd050613          	addi	a2,a0,-48
200003c8:	0ff67613          	andi	a2,a2,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
200003cc:	fd058993          	addi	s3,a1,-48 # 8fd0 <_stack_size+0x6fd0>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
200003d0:	ff9662e3          	bltu	a2,s9,200003b4 <ee_printf+0x100>
200003d4:	a00d                	j	200003f6 <ee_printf+0x142>
200003d6:	59fd                	li	s3,-1
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:517
    } else if (*fmt == '*') {
200003d8:	01551d63          	bne	a0,s5,200003f2 <ee_printf+0x13e>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:519
      field_width = va_arg(args, int);
200003dc:	000ba983          	lw	s3,0(s7)
200003e0:	0405                	addi	s0,s0,1
200003e2:	0b91                	addi	s7,s7,4
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:520
      if (field_width < 0) {
200003e4:	557d                	li	a0,-1
200003e6:	01354663          	blt	a0,s3,200003f2 <ee_printf+0x13e>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:521
        field_width = -field_width;
200003ea:	413009b3          	neg	s3,s3
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:522
        flags |= LEFT;
200003ee:	0107e793          	ori	a5,a5,16
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:528
    if (*fmt == '.') {
200003f2:	00044503          	lbu	a0,0(s0)
200003f6:	56fd                	li	a3,-1
200003f8:	04751063          	bne	a0,t2,20000438 <ee_printf+0x184>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:530
      if (is_digit(*fmt)) {
200003fc:	00144583          	lbu	a1,1(s0)
20000400:	fd058513          	addi	a0,a1,-48
20000404:	0ff57613          	andi	a2,a0,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:529
      ++fmt;
20000408:	00140513          	addi	a0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:530
      if (is_digit(*fmt)) {
2000040c:	02c36863          	bltu	t1,a2,2000043c <ee_printf+0x188>
20000410:	4701                	li	a4,0
skip_atoi():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
20000412:	0ff5f613          	andi	a2,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
20000416:	00154583          	lbu	a1,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
2000041a:	03970733          	mul	a4,a4,s9
2000041e:	0505                	addi	a0,a0,1
20000420:	963a                	add	a2,a2,a4
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
20000422:	fd058713          	addi	a4,a1,-48
20000426:	0ff77493          	andi	s1,a4,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:64
    i = i * 10 + *((*s)++) - '0';
2000042a:	fd060713          	addi	a4,a2,-48
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:63
  while (is_digit(**s)) {
2000042e:	ff94e2e3          	bltu	s1,s9,20000412 <ee_printf+0x15e>
20000432:	02000493          	li	s1,32
20000436:	a811                	j	2000044a <ee_printf+0x196>
20000438:	577d                	li	a4,-1
2000043a:	a015                	j	2000045e <ee_printf+0x1aa>
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:532
      } else if (*fmt == '*') {
2000043c:	01559d63          	bne	a1,s5,20000456 <ee_printf+0x1a2>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:534
        precision = va_arg(args, int);
20000440:	000ba703          	lw	a4,0(s7)
20000444:	0b91                	addi	s7,s7,4
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:533
        ++fmt;
20000446:	00240513          	addi	a0,s0,2
2000044a:	842a                	mv	s0,a0
2000044c:	865e                	mv	a2,s7
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:536
      if (precision < 0) {
2000044e:	55fd                	li	a1,-1
20000450:	00e5c763          	blt	a1,a4,2000045e <ee_printf+0x1aa>
20000454:	a011                	j	20000458 <ee_printf+0x1a4>
20000456:	865e                	mv	a2,s7
20000458:	4701                	li	a4,0
2000045a:	842a                	mv	s0,a0
2000045c:	8bb2                	mv	s7,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:543
    if (*fmt == 'l' || *fmt == 'L') {
2000045e:	00044503          	lbu	a0,0(s0)
20000462:	02056593          	ori	a1,a0,32
20000466:	06c00613          	li	a2,108
2000046a:	00c59663          	bne	a1,a2,20000476 <ee_printf+0x1c2>
2000046e:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:551
    switch (*fmt) {
20000470:	00144503          	lbu	a0,1(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:545
      fmt++;
20000474:	0405                	addi	s0,s0,1
20000476:	4629                	li	a2,10
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:551
    switch (*fmt) {
20000478:	06800593          	li	a1,104
2000047c:	02a5c363          	blt	a1,a0,200004a2 <ee_printf+0x1ee>
20000480:	06000593          	li	a1,96
20000484:	04a5cf63          	blt	a1,a0,200004e2 <ee_printf+0x22e>
20000488:	eda50ee3          	beq	a0,s10,20000364 <ee_printf+0xb0>
2000048c:	04100593          	li	a1,65
20000490:	10b50263          	beq	a0,a1,20000594 <ee_printf+0x2e0>
20000494:	05800593          	li	a1,88
20000498:	30b51863          	bne	a0,a1,200007a8 <ee_printf+0x4f4>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:611
        flags |= UPPERCASE;
2000049c:	0407e793          	ori	a5,a5,64
200004a0:	a895                	j	20000514 <ee_printf+0x260>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:551
    switch (*fmt) {
200004a2:	07200593          	li	a1,114
200004a6:	04a5cb63          	blt	a1,a0,200004fc <ee_printf+0x248>
200004aa:	06900593          	li	a1,105
200004ae:	04b50463          	beq	a0,a1,200004f6 <ee_printf+0x242>
200004b2:	06f00593          	li	a1,111
200004b6:	28b50263          	beq	a0,a1,2000073a <ee_printf+0x486>
200004ba:	07000593          	li	a1,112
200004be:	2eb51563          	bne	a0,a1,200007a8 <ee_printf+0x4f4>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:584
        if (field_width == -1) {
200004c2:	00198513          	addi	a0,s3,1
200004c6:	00153513          	seqz	a0,a0
200004ca:	8fc9                	or	a5,a5,a0
200004cc:	46a1                	li	a3,8
200004ce:	557d                	li	a0,-1
200004d0:	00a98363          	beq	s3,a0,200004d6 <ee_printf+0x222>
200004d4:	86ce                	mv	a3,s3
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:588
        str = number(str, (unsigned long)va_arg(args, void *), 16, field_width,
200004d6:	000ba583          	lw	a1,0(s7)
200004da:	0b91                	addi	s7,s7,4
200004dc:	4641                	li	a2,16
200004de:	855a                	mv	a0,s6
200004e0:	a49d                	j	20000746 <ee_printf+0x492>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:551
    switch (*fmt) {
200004e2:	06100593          	li	a1,97
200004e6:	0ab50963          	beq	a0,a1,20000598 <ee_printf+0x2e4>
200004ea:	06300593          	li	a1,99
200004ee:	26b50b63          	beq	a0,a1,20000764 <ee_printf+0x4b0>
200004f2:	2be51b63          	bne	a0,t5,200007a8 <ee_printf+0x4f4>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:619
        flags |= SIGN;
200004f6:	0027e793          	ori	a5,a5,2
200004fa:	a489                	j	2000073c <ee_printf+0x488>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:551
    switch (*fmt) {
200004fc:	07300593          	li	a1,115
20000500:	00b50c63          	beq	a0,a1,20000518 <ee_printf+0x264>
20000504:	07500593          	li	a1,117
20000508:	22b50a63          	beq	a0,a1,2000073c <ee_printf+0x488>
2000050c:	07800593          	li	a1,120
20000510:	28b51c63          	bne	a0,a1,200007a8 <ee_printf+0x4f4>
20000514:	4641                	li	a2,16
20000516:	a41d                	j	2000073c <ee_printf+0x488>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:565
        s = va_arg(args, char *);
20000518:	000ba483          	lw	s1,0(s7)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:566
        if (!s) {
2000051c:	e489                	bnez	s1,20000526 <ee_printf+0x272>
2000051e:	00003497          	auipc	s1,0x3
20000522:	f9248493          	addi	s1,s1,-110 # 200034b0 <__clz_tab+0x184>
20000526:	8d26                	mv	s10,s1
strnlen():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:56
  for (sc = s; *sc != '\0' && count--; ++sc) {
20000528:	c305                	beqz	a4,20000548 <ee_printf+0x294>
2000052a:	0004c503          	lbu	a0,0(s1)
2000052e:	8d26                	mv	s10,s1
20000530:	cd01                	beqz	a0,20000548 <ee_printf+0x294>
20000532:	fff70513          	addi	a0,a4,-1
20000536:	85a6                	mv	a1,s1
20000538:	00158d13          	addi	s10,a1,1
2000053c:	c511                	beqz	a0,20000548 <ee_printf+0x294>
2000053e:	0015c603          	lbu	a2,1(a1)
20000542:	157d                	addi	a0,a0,-1
20000544:	85ea                	mv	a1,s10
20000546:	fa6d                	bnez	a2,20000538 <ee_printf+0x284>
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:570
        if (!(flags & LEFT)) {
20000548:	0107f513          	andi	a0,a5,16
strnlen():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:58
  return sc - s;
2000054c:	409d0733          	sub	a4,s10,s1
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:570
        if (!(flags & LEFT)) {
20000550:	26051a63          	bnez	a0,200007c4 <ee_printf+0x510>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:571
          while (len < field_width--) {
20000554:	27375763          	bge	a4,s3,200007c2 <ee_printf+0x50e>
20000558:	00998533          	add	a0,s3,s1
2000055c:	41a50933          	sub	s2,a0,s10
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:572
            *str++ = ' ';
20000560:	02000593          	li	a1,32
20000564:	855a                	mv	a0,s6
20000566:	864a                	mv	a2,s2
20000568:	89ba                	mv	s3,a4
2000056a:	671010ef          	jal	ra,200023da <memset>
2000056e:	874e                	mv	a4,s3
20000570:	02d00f93          	li	t6,45
20000574:	06400f13          	li	t5,100
20000578:	4e91                	li	t4,4
2000057a:	03a00e13          	li	t3,58
2000057e:	02e00393          	li	t2,46
20000582:	4325                	li	t1,9
20000584:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:571
          while (len < field_width--) {
20000588:	9b4a                	add	s6,s6,s2
2000058a:	fff4c513          	not	a0,s1
2000058e:	00ad09b3          	add	s3,s10,a0
20000592:	ac0d                	j	200007c4 <ee_printf+0x510>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:593
        flags |= UPPERCASE;
20000594:	0407e793          	ori	a5,a5,64
20000598:	000ba883          	lw	a7,0(s7)
2000059c:	0b91                	addi	s7,s7,4
2000059e:	00003617          	auipc	a2,0x3
200005a2:	f1960613          	addi	a2,a2,-231 # 200034b7 <__clz_tab+0x18b>
200005a6:	0107f813          	andi	a6,a5,16
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:596
        if (qualifier == 'l') {
200005aa:	06c00513          	li	a0,108
200005ae:	08a69c63          	bne	a3,a0,20000646 <ee_printf+0x392>
200005b2:	c25e                	sw	s7,4(sp)
eaddr():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:166
  if (type & UPPERCASE) {
200005b4:	0407f693          	andi	a3,a5,64
200005b8:	c689                	beqz	a3,200005c2 <ee_printf+0x30e>
200005ba:	00003617          	auipc	a2,0x3
200005be:	f2260613          	addi	a2,a2,-222 # 200034dc <__clz_tab+0x1b0>
200005c2:	4481                	li	s1,0
200005c4:	4681                	li	a3,0
200005c6:	4519                	li	a0,6
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:171
    if (i != 0) {
200005c8:	ca81                	beqz	a3,200005d8 <ee_printf+0x324>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:172
      tmp[len++] = ':';
200005ca:	00148d13          	addi	s10,s1,1
200005ce:	009d8733          	add	a4,s11,s1
200005d2:	01c70023          	sb	t3,0(a4)
200005d6:	a011                	j	200005da <ee_printf+0x326>
200005d8:	8d26                	mv	s10,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:174
    tmp[len++] = dig[addr[i] >> 4];
200005da:	00d88733          	add	a4,a7,a3
200005de:	00074703          	lbu	a4,0(a4)
200005e2:	00475793          	srli	a5,a4,0x4
200005e6:	97b2                	add	a5,a5,a2
200005e8:	00078783          	lb	a5,0(a5)
200005ec:	001d0b93          	addi	s7,s10,1
200005f0:	01ad84b3          	add	s1,s11,s10
200005f4:	00f48023          	sb	a5,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:175
    tmp[len++] = dig[addr[i] & 0x0F];
200005f8:	8b3d                	andi	a4,a4,15
200005fa:	9732                	add	a4,a4,a2
200005fc:	00070703          	lb	a4,0(a4)
20000600:	002d0493          	addi	s1,s10,2
20000604:	017d87b3          	add	a5,s11,s7
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:170
  for (i = 0; i < 6; i++) {
20000608:	0685                	addi	a3,a3,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:175
    tmp[len++] = dig[addr[i] & 0x0F];
2000060a:	00e78023          	sb	a4,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:170
  for (i = 0; i < 6; i++) {
2000060e:	faa69de3          	bne	a3,a0,200005c8 <ee_printf+0x314>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:178
  if (!(type & LEFT)) {
20000612:	1a081463          	bnez	a6,200007ba <ee_printf+0x506>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:179
    while (len < size--) {
20000616:	2134d763          	bge	s1,s3,20000824 <ee_printf+0x570>
2000061a:	40998933          	sub	s2,s3,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:180
      *str++ = ' ';
2000061e:	02000593          	li	a1,32
20000622:	855a                	mv	a0,s6
20000624:	864a                	mv	a2,s2
20000626:	5b5010ef          	jal	ra,200023da <memset>
2000062a:	02d00f93          	li	t6,45
2000062e:	06400f13          	li	t5,100
20000632:	4e91                	li	t4,4
20000634:	03a00e13          	li	t3,58
20000638:	02e00393          	li	t2,46
2000063c:	4325                	li	t1,9
2000063e:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:179
    while (len < size--) {
20000642:	9b4a                	add	s6,s6,s2
20000644:	a2d5                	j	20000828 <ee_printf+0x574>
20000646:	4481                	li	s1,0
20000648:	4681                	li	a3,0
2000064a:	ca81                	beqz	a3,2000065a <ee_printf+0x3a6>
iaddr():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:201
      tmp[len++] = '.';
2000064c:	00148913          	addi	s2,s1,1
20000650:	009d8733          	add	a4,s11,s1
20000654:	00770023          	sb	t2,0(a4)
20000658:	a011                	j	2000065c <ee_printf+0x3a8>
2000065a:	8926                	mv	s2,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:203
    n = addr[i];
2000065c:	00d88733          	add	a4,a7,a3
20000660:	00074703          	lbu	a4,0(a4)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:205
    if (n == 0) {
20000664:	cb0d                	beqz	a4,20000696 <ee_printf+0x3e2>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:208
      if (n >= 100) {
20000666:	03e76b63          	bltu	a4,t5,2000069c <ee_printf+0x3e8>
2000066a:	0ff77793          	andi	a5,a4,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:209
        tmp[len++] = digits[n / 100];
2000066e:	4522                	lw	a0,8(sp)
20000670:	02a7b7b3          	mulhu	a5,a5,a0
20000674:	0057d493          	srli	s1,a5,0x5
20000678:	00c487b3          	add	a5,s1,a2
2000067c:	00078503          	lb	a0,0(a5)
20000680:	00190793          	addi	a5,s2,1
20000684:	012d85b3          	add	a1,s11,s2
20000688:	00a58023          	sb	a0,0(a1)
2000068c:	03e48533          	mul	a0,s1,t5
20000690:	8f09                	sub	a4,a4,a0
20000692:	4489                	li	s1,2
20000694:	a801                	j	200006a4 <ee_printf+0x3f0>
20000696:	03000713          	li	a4,48
2000069a:	a81d                	j	200006d0 <ee_printf+0x41c>
2000069c:	4485                	li	s1,1
2000069e:	87ca                	mv	a5,s2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:213
      } else if (n >= 10) {
200006a0:	03976363          	bltu	a4,s9,200006c6 <ee_printf+0x412>
200006a4:	0ff77513          	andi	a0,a4,255
200006a8:	45b2                	lw	a1,12(sp)
200006aa:	02b53533          	mulhu	a0,a0,a1
200006ae:	810d                	srli	a0,a0,0x3
200006b0:	00c505b3          	add	a1,a0,a2
200006b4:	00058583          	lb	a1,0(a1)
200006b8:	9926                	add	s2,s2,s1
200006ba:	97ee                	add	a5,a5,s11
200006bc:	00b78023          	sb	a1,0(a5)
200006c0:	03950533          	mul	a0,a0,s9
200006c4:	8f09                	sub	a4,a4,a0
200006c6:	0ff77513          	andi	a0,a4,255
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:218
      tmp[len++] = digits[n];
200006ca:	9532                	add	a0,a0,a2
200006cc:	00054703          	lbu	a4,0(a0)
200006d0:	012d8533          	add	a0,s11,s2
200006d4:	00e50023          	sb	a4,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:199
  for (i = 0; i < 4; i++) {
200006d8:	0685                	addi	a3,a3,1
200006da:	00190493          	addi	s1,s2,1
200006de:	f7d696e3          	bne	a3,t4,2000064a <ee_printf+0x396>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:222
  if (!(type & LEFT)) {
200006e2:	02081a63          	bnez	a6,20000716 <ee_printf+0x462>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:223
    while (len < size--) {
200006e6:	1934df63          	bge	s1,s3,20000884 <ee_printf+0x5d0>
200006ea:	409989b3          	sub	s3,s3,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:224
      *str++ = ' ';
200006ee:	02000593          	li	a1,32
200006f2:	855a                	mv	a0,s6
200006f4:	864e                	mv	a2,s3
200006f6:	4e5010ef          	jal	ra,200023da <memset>
200006fa:	02d00f93          	li	t6,45
200006fe:	06400f13          	li	t5,100
20000702:	4e91                	li	t4,4
20000704:	03a00e13          	li	t3,58
20000708:	02e00393          	li	t2,46
2000070c:	4325                	li	t1,9
2000070e:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:223
    while (len < size--) {
20000712:	9b4e                	add	s6,s6,s3
20000714:	89ca                	mv	s3,s2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:227
  for (i = 0; i < len; ++i) {
20000716:	16094a63          	bltz	s2,2000088a <ee_printf+0x5d6>
2000071a:	00190513          	addi	a0,s2,1
2000071e:	85ee                	mv	a1,s11
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:228
    *str++ = tmp[i];
20000720:	00058603          	lb	a2,0(a1)
20000724:	001b0913          	addi	s2,s6,1
20000728:	00cb0023          	sb	a2,0(s6)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:227
  for (i = 0; i < len; ++i) {
2000072c:	157d                	addi	a0,a0,-1
2000072e:	0585                	addi	a1,a1,1
20000730:	8b4a                	mv	s6,s2
20000732:	f57d                	bnez	a0,20000720 <ee_printf+0x46c>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:230
  while (len < size--) {
20000734:	1534ce63          	blt	s1,s3,20000890 <ee_printf+0x5dc>
20000738:	a249                	j	200008ba <ee_printf+0x606>
2000073a:	4621                	li	a2,8
2000073c:	000ba583          	lw	a1,0(s7)
20000740:	0b91                	addi	s7,s7,4
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:653
    str = number(str, num, base, field_width, precision, flags);
20000742:	855a                	mv	a0,s6
20000744:	86ce                	mv	a3,s3
20000746:	2429                	jal	20000950 <number>
20000748:	892a                	mv	s2,a0
2000074a:	02300293          	li	t0,35
2000074e:	4325                	li	t1,9
20000750:	02e00393          	li	t2,46
20000754:	03a00e13          	li	t3,58
20000758:	4e91                	li	t4,4
2000075a:	06400f13          	li	t5,100
2000075e:	02d00f93          	li	t6,45
20000762:	aab1                	j	200008be <ee_printf+0x60a>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:553
        if (!(flags & LEFT)) {
20000764:	0107f513          	andi	a0,a5,16
20000768:	14051f63          	bnez	a0,200008c6 <ee_printf+0x612>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:554
          while (--field_width > 0) {
2000076c:	fff98613          	addi	a2,s3,-1
20000770:	4509                	li	a0,2
20000772:	14a9c963          	blt	s3,a0,200008c4 <ee_printf+0x610>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:555
            *str++ = ' ';
20000776:	02000593          	li	a1,32
2000077a:	855a                	mv	a0,s6
2000077c:	45f010ef          	jal	ra,200023da <memset>
20000780:	02d00f93          	li	t6,45
20000784:	06400f13          	li	t5,100
20000788:	4e91                	li	t4,4
2000078a:	03a00e13          	li	t3,58
2000078e:	02e00393          	li	t2,46
20000792:	4325                	li	t1,9
20000794:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:558
        *str++ = (unsigned char)va_arg(args, int);
20000798:	000ba503          	lw	a0,0(s7)
2000079c:	0b91                	addi	s7,s7,4
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:554
          while (--field_width > 0) {
2000079e:	013b0933          	add	s2,s6,s3
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:558
        *str++ = (unsigned char)va_arg(args, int);
200007a2:	fea90fa3          	sb	a0,-1(s2)
200007a6:	aa21                	j	200008be <ee_printf+0x60a>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:635
          *str++ = '%';
200007a8:	01ab0023          	sb	s10,0(s6)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:637
        if (*fmt) {
200007ac:	00044503          	lbu	a0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:635
          *str++ = '%';
200007b0:	001b0913          	addi	s2,s6,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:637
        if (*fmt) {
200007b4:	c509                	beqz	a0,200007be <ee_printf+0x50a>
200007b6:	8b4a                	mv	s6,s2
200007b8:	b675                	j	20000364 <ee_printf+0xb0>
200007ba:	8bce                	mv	s7,s3
200007bc:	a0b5                	j	20000828 <ee_printf+0x574>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:640
          --fmt;
200007be:	147d                	addi	s0,s0,-1
200007c0:	a8fd                	j	200008be <ee_printf+0x60a>
200007c2:	19fd                	addi	s3,s3,-1
200007c4:	895a                	mv	s2,s6
200007c6:	853a                	mv	a0,a4
200007c8:	85a6                	mv	a1,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:575
        for (i = 0; i < len; ++i) {
200007ca:	4605                	li	a2,1
200007cc:	00c74c63          	blt	a4,a2,200007e4 <ee_printf+0x530>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:576
          *str++ = *s++;
200007d0:	00058603          	lb	a2,0(a1)
200007d4:	0585                	addi	a1,a1,1
200007d6:	00190693          	addi	a3,s2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:575
        for (i = 0; i < len; ++i) {
200007da:	157d                	addi	a0,a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:576
          *str++ = *s++;
200007dc:	00c90023          	sb	a2,0(s2)
200007e0:	8936                	mv	s2,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:575
        for (i = 0; i < len; ++i) {
200007e2:	f57d                	bnez	a0,200007d0 <ee_printf+0x51c>
200007e4:	0b91                	addi	s7,s7,4
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:578
        while (len < field_width--) {
200007e6:	03375c63          	bge	a4,s3,2000081e <ee_printf+0x56a>
200007ea:	41a48533          	sub	a0,s1,s10
200007ee:	01350633          	add	a2,a0,s3
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:579
          *str++ = ' ';
200007f2:	02000593          	li	a1,32
200007f6:	854a                	mv	a0,s2
200007f8:	3e3010ef          	jal	ra,200023da <memset>
200007fc:	02d00f93          	li	t6,45
20000800:	06400f13          	li	t5,100
20000804:	4e91                	li	t4,4
20000806:	03a00e13          	li	t3,58
2000080a:	02e00393          	li	t2,46
2000080e:	4325                	li	t1,9
20000810:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:578
        while (len < field_width--) {
20000814:	00998533          	add	a0,s3,s1
20000818:	41a50533          	sub	a0,a0,s10
2000081c:	992a                	add	s2,s2,a0
2000081e:	02500d13          	li	s10,37
20000822:	a861                	j	200008ba <ee_printf+0x606>
20000824:	fff98b93          	addi	s7,s3,-1
eaddr():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:183
  for (i = 0; i < len; ++i) {
20000828:	557d                	li	a0,-1
2000082a:	00ad4f63          	blt	s10,a0,20000848 <ee_printf+0x594>
2000082e:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:184
    *str++ = tmp[i];
20000830:	00ad85b3          	add	a1,s11,a0
20000834:	00058583          	lb	a1,0(a1)
20000838:	00ab0633          	add	a2,s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:183
  for (i = 0; i < len; ++i) {
2000083c:	0505                	addi	a0,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:184
    *str++ = tmp[i];
2000083e:	00b60023          	sb	a1,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:183
  for (i = 0; i < len; ++i) {
20000842:	fe9547e3          	blt	a0,s1,20000830 <ee_printf+0x57c>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:186
  while (len < size--) {
20000846:	9b2a                	add	s6,s6,a0
20000848:	02500d13          	li	s10,37
2000084c:	0374d763          	bge	s1,s7,2000087a <ee_printf+0x5c6>
20000850:	409b84b3          	sub	s1,s7,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:187
    *str++ = ' ';
20000854:	02000593          	li	a1,32
20000858:	855a                	mv	a0,s6
2000085a:	8626                	mv	a2,s1
2000085c:	37f010ef          	jal	ra,200023da <memset>
20000860:	02d00f93          	li	t6,45
20000864:	06400f13          	li	t5,100
20000868:	4e91                	li	t4,4
2000086a:	03a00e13          	li	t3,58
2000086e:	02e00393          	li	t2,46
20000872:	4325                	li	t1,9
20000874:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:186
  while (len < size--) {
20000878:	9b26                	add	s6,s6,s1
2000087a:	02000493          	li	s1,32
2000087e:	4b92                	lw	s7,4(sp)
20000880:	895a                	mv	s2,s6
20000882:	a835                	j	200008be <ee_printf+0x60a>
20000884:	19fd                	addi	s3,s3,-1
iaddr():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:227
  for (i = 0; i < len; ++i) {
20000886:	e8095ae3          	bgez	s2,2000071a <ee_printf+0x466>
2000088a:	895a                	mv	s2,s6
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:230
  while (len < size--) {
2000088c:	0334d763          	bge	s1,s3,200008ba <ee_printf+0x606>
20000890:	409984b3          	sub	s1,s3,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:231
    *str++ = ' ';
20000894:	02000593          	li	a1,32
20000898:	854a                	mv	a0,s2
2000089a:	8626                	mv	a2,s1
2000089c:	33f010ef          	jal	ra,200023da <memset>
200008a0:	02d00f93          	li	t6,45
200008a4:	06400f13          	li	t5,100
200008a8:	4e91                	li	t4,4
200008aa:	03a00e13          	li	t3,58
200008ae:	02e00393          	li	t2,46
200008b2:	4325                	li	t1,9
200008b4:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:230
  while (len < size--) {
200008b8:	9926                	add	s2,s2,s1
200008ba:	02000493          	li	s1,32
ee_vsprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:483
  for (str = buf; *fmt; fmt++) {
200008be:	0405                	addi	s0,s0,1
200008c0:	8b4a                	mv	s6,s2
200008c2:	bc59                	j	20000358 <ee_printf+0xa4>
200008c4:	89b2                	mv	s3,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:558
        *str++ = (unsigned char)va_arg(args, int);
200008c6:	000ba503          	lw	a0,0(s7)
200008ca:	0b91                	addi	s7,s7,4
200008cc:	00ab0023          	sb	a0,0(s6)
200008d0:	001b0913          	addi	s2,s6,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:559
        while (--field_width > 0) {
200008d4:	4509                	li	a0,2
200008d6:	fea9c4e3          	blt	s3,a0,200008be <ee_printf+0x60a>
200008da:	fff98613          	addi	a2,s3,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:560
          *str++ = ' ';
200008de:	02000593          	li	a1,32
200008e2:	854a                	mv	a0,s2
200008e4:	2f7010ef          	jal	ra,200023da <memset>
200008e8:	02d00f93          	li	t6,45
200008ec:	06400f13          	li	t5,100
200008f0:	4e91                	li	t4,4
200008f2:	03a00e13          	li	t3,58
200008f6:	02e00393          	li	t2,46
200008fa:	4325                	li	t1,9
200008fc:	02300293          	li	t0,35
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:559
        while (--field_width > 0) {
20000900:	013b0933          	add	s2,s6,s3
20000904:	bf6d                	j	200008be <ee_printf+0x60a>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:656
  *str = '\0';
20000906:	000b0023          	sb	zero,0(s6)
ee_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:668
  ee_vsprintf(buf, fmt, args);
  va_end(args);

  return base_printf("%s", buf);
2000090a:	00003517          	auipc	a0,0x3
2000090e:	ba350513          	addi	a0,a0,-1117 # 200034ad <__clz_tab+0x181>
20000912:	084c                	addi	a1,sp,20
20000914:	729010ef          	jal	ra,2000283c <base_printf>
20000918:	12c12d83          	lw	s11,300(sp)
2000091c:	13012d03          	lw	s10,304(sp)
20000920:	13412c83          	lw	s9,308(sp)
20000924:	13812c03          	lw	s8,312(sp)
20000928:	13c12b83          	lw	s7,316(sp)
2000092c:	14012b03          	lw	s6,320(sp)
20000930:	14412a83          	lw	s5,324(sp)
20000934:	14812a03          	lw	s4,328(sp)
20000938:	14c12983          	lw	s3,332(sp)
2000093c:	15012903          	lw	s2,336(sp)
20000940:	15412483          	lw	s1,340(sp)
20000944:	15812403          	lw	s0,344(sp)
20000948:	15c12083          	lw	ra,348(sp)
2000094c:	6119                	addi	sp,sp,384
2000094e:	8082                	ret

20000950 <number>:
number():
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:70
                    int type) {
20000950:	7159                	addi	sp,sp,-112
20000952:	d686                	sw	ra,108(sp)
20000954:	d4a2                	sw	s0,104(sp)
20000956:	d2a6                	sw	s1,100(sp)
20000958:	d0ca                	sw	s2,96(sp)
2000095a:	cece                	sw	s3,92(sp)
2000095c:	ccd2                	sw	s4,88(sp)
2000095e:	cad6                	sw	s5,84(sp)
20000960:	c8da                	sw	s6,80(sp)
20000962:	c6de                	sw	s7,76(sp)
20000964:	c4e2                	sw	s8,72(sp)
20000966:	c2e6                	sw	s9,68(sp)
20000968:	8a3e                	mv	s4,a5
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:75
  if (type & UPPERCASE) {
2000096a:	0407f793          	andi	a5,a5,64
2000096e:	893a                	mv	s2,a4
20000970:	8ab2                	mv	s5,a2
20000972:	842a                	mv	s0,a0
20000974:	c791                	beqz	a5,20000980 <number+0x30>
20000976:	00003817          	auipc	a6,0x3
2000097a:	b6680813          	addi	a6,a6,-1178 # 200034dc <__clz_tab+0x1b0>
2000097e:	a029                	j	20000988 <number+0x38>
20000980:	00003817          	auipc	a6,0x3
20000984:	b3780813          	addi	a6,a6,-1225 # 200034b7 <__clz_tab+0x18b>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:78
  if (type & LEFT) {
20000988:	010a7613          	andi	a2,s4,16
2000098c:	c219                	beqz	a2,20000992 <number+0x42>
2000098e:	ffea7a13          	andi	s4,s4,-2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:85
  c = (type & ZEROPAD) ? '0' : ' ';
20000992:	001a7613          	andi	a2,s4,1
20000996:	02000993          	li	s3,32
2000099a:	c219                	beqz	a2,200009a0 <number+0x50>
2000099c:	03000993          	li	s3,48
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:87
  if (type & SIGN) {
200009a0:	002a7613          	andi	a2,s4,2
200009a4:	e219                	bnez	a2,200009aa <number+0x5a>
200009a6:	4c01                	li	s8,0
200009a8:	a80d                	j	200009da <number+0x8a>
200009aa:	567d                	li	a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:88
    if (num < 0) {
200009ac:	00b65e63          	bge	a2,a1,200009c8 <number+0x78>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:92
    } else if (type & PLUS) {
200009b0:	004a7613          	andi	a2,s4,4
200009b4:	e205                	bnez	a2,200009d4 <number+0x84>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:95
    } else if (type & SPACE) {
200009b6:	008a7613          	andi	a2,s4,8
200009ba:	01c61713          	slli	a4,a2,0x1c
200009be:	877d                	srai	a4,a4,0x1f
200009c0:	96ba                	add	a3,a3,a4
200009c2:	00261c13          	slli	s8,a2,0x2
200009c6:	a811                	j	200009da <number+0x8a>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:90
      num = -num;
200009c8:	40b005b3          	neg	a1,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:91
      size--;
200009cc:	16fd                	addi	a3,a3,-1
200009ce:	02d00c13          	li	s8,45
200009d2:	a021                	j	200009da <number+0x8a>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:94
      size--;
200009d4:	16fd                	addi	a3,a3,-1
200009d6:	02b00c13          	li	s8,43
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:101
  if (type & HEX_PREP) {
200009da:	020a7c93          	andi	s9,s4,32
200009de:	000c8963          	beqz	s9,200009f0 <number+0xa0>
200009e2:	4621                	li	a2,8
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:102
    if (base == 16) {
200009e4:	02ca8d63          	beq	s5,a2,20000a1e <number+0xce>
200009e8:	4641                	li	a2,16
200009ea:	00ca9363          	bne	s5,a2,200009f0 <number+0xa0>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:103
      size -= 2;
200009ee:	16f9                	addi	a3,a3,-2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:111
  if (num == 0) {
200009f0:	c98d                	beqz	a1,20000a22 <number+0xd2>
200009f2:	4701                	li	a4,0
200009f4:	00210613          	addi	a2,sp,2
200009f8:	87ae                	mv	a5,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:116
      num = ((unsigned long)num) / (unsigned)base;
200009fa:	0355d5b3          	divu	a1,a1,s5
200009fe:	035584b3          	mul	s1,a1,s5
20000a02:	409784b3          	sub	s1,a5,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:115
      tmp[i++] = dig[((unsigned long)num) % (unsigned)base];
20000a06:	94c2                	add	s1,s1,a6
20000a08:	00048503          	lb	a0,0(s1)
20000a0c:	00170493          	addi	s1,a4,1
20000a10:	9732                	add	a4,a4,a2
20000a12:	00a70023          	sb	a0,0(a4)
20000a16:	8726                	mv	a4,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:114
    while (num != 0) {
20000a18:	ff57f0e3          	bgeu	a5,s5,200009f8 <number+0xa8>
20000a1c:	a801                	j	20000a2c <number+0xdc>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:105
      size--;
20000a1e:	16fd                	addi	a3,a3,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:111
  if (num == 0) {
20000a20:	f9e9                	bnez	a1,200009f2 <number+0xa2>
20000a22:	03000513          	li	a0,48
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:112
    tmp[i++] = '0';
20000a26:	00a10123          	sb	a0,2(sp)
20000a2a:	4485                	li	s1,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:120
  if (i > precision) {
20000a2c:	8ba6                	mv	s7,s1
20000a2e:	00994363          	blt	s2,s1,20000a34 <number+0xe4>
20000a32:	8bca                	mv	s7,s2
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:124
  if (!(type & (ZEROPAD | LEFT))) {
20000a34:	011a7513          	andi	a0,s4,17
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:123
  size -= precision;
20000a38:	41768b33          	sub	s6,a3,s7
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:124
  if (!(type & (ZEROPAD | LEFT))) {
20000a3c:	ed19                	bnez	a0,20000a5a <number+0x10a>
20000a3e:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:125
    while (size-- > 0) {
20000a40:	0eab4d63          	blt	s6,a0,20000b3a <number+0x1ea>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:126
      *str++ = ' ';
20000a44:	02000593          	li	a1,32
20000a48:	8522                	mv	a0,s0
20000a4a:	865a                	mv	a2,s6
20000a4c:	18f010ef          	jal	ra,200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:125
    while (size-- > 0) {
20000a50:	1b7d                	addi	s6,s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:126
      *str++ = ' ';
20000a52:	0405                	addi	s0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:125
    while (size-- > 0) {
20000a54:	ff604ee3          	bgtz	s6,20000a50 <number+0x100>
20000a58:	5b7d                	li	s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:129
  if (sign) {
20000a5a:	000c0763          	beqz	s8,20000a68 <number+0x118>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:130
    *str++ = sign;
20000a5e:	00140513          	addi	a0,s0,1
20000a62:	01840023          	sb	s8,0(s0)
20000a66:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:133
  if (type & HEX_PREP) {
20000a68:	020c8a63          	beqz	s9,20000a9c <number+0x14c>
20000a6c:	4541                	li	a0,16
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:134
    if (base == 8) {
20000a6e:	00aa8c63          	beq	s5,a0,20000a86 <number+0x136>
20000a72:	4521                	li	a0,8
20000a74:	02aa9463          	bne	s5,a0,20000a9c <number+0x14c>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:135
      *str++ = '0';
20000a78:	00140513          	addi	a0,s0,1
20000a7c:	03000593          	li	a1,48
20000a80:	00b40023          	sb	a1,0(s0)
20000a84:	a819                	j	20000a9a <number+0x14a>
20000a86:	03000513          	li	a0,48
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:137
      *str++ = '0';
20000a8a:	00a40023          	sb	a0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:138
      *str++ = digits[33];
20000a8e:	00240513          	addi	a0,s0,2
20000a92:	07800593          	li	a1,120
20000a96:	00b400a3          	sb	a1,1(s0)
20000a9a:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:142
  if (!(type & LEFT)) {
20000a9c:	010a7513          	andi	a0,s4,16
20000aa0:	ed11                	bnez	a0,20000abc <number+0x16c>
20000aa2:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:143
    while (size-- > 0) {
20000aa4:	08ab4763          	blt	s6,a0,20000b32 <number+0x1e2>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:144
      *str++ = c;
20000aa8:	8522                	mv	a0,s0
20000aaa:	85ce                	mv	a1,s3
20000aac:	865a                	mv	a2,s6
20000aae:	12d010ef          	jal	ra,200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:143
    while (size-- > 0) {
20000ab2:	1b7d                	addi	s6,s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:144
      *str++ = c;
20000ab4:	0405                	addi	s0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:143
    while (size-- > 0) {
20000ab6:	ff604ee3          	bgtz	s6,20000ab2 <number+0x162>
20000aba:	5b7d                	li	s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:147
  while (i < precision--) {
20000abc:	0124dd63          	bge	s1,s2,20000ad6 <number+0x186>
20000ac0:	409b8633          	sub	a2,s7,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:148
    *str++ = '0';
20000ac4:	03000593          	li	a1,48
20000ac8:	8522                	mv	a0,s0
20000aca:	111010ef          	jal	ra,200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:147
  while (i < precision--) {
20000ace:	1bfd                	addi	s7,s7,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:148
    *str++ = '0';
20000ad0:	0405                	addi	s0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:147
  while (i < precision--) {
20000ad2:	ff74cee3          	blt	s1,s7,20000ace <number+0x17e>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:150
  while (i-- > 0) {
20000ad6:	00110513          	addi	a0,sp,1
20000ada:	4585                	li	a1,1
20000adc:	8626                	mv	a2,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:151
    *str++ = tmp[i];
20000ade:	009506b3          	add	a3,a0,s1
20000ae2:	00068683          	lb	a3,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:150
  while (i-- > 0) {
20000ae6:	14fd                	addi	s1,s1,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:151
    *str++ = tmp[i];
20000ae8:	00d40023          	sb	a3,0(s0)
20000aec:	0405                	addi	s0,s0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:150
  while (i-- > 0) {
20000aee:	fec5c7e3          	blt	a1,a2,20000adc <number+0x18c>
20000af2:	4485                	li	s1,1
20000af4:	029b4163          	blt	s6,s1,20000b16 <number+0x1c6>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:154
    *str++ = ' ';
20000af8:	02000593          	li	a1,32
20000afc:	8522                	mv	a0,s0
20000afe:	865a                	mv	a2,s6
20000b00:	0db010ef          	jal	ra,200023da <memset>
20000b04:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:153
  while (size-- > 0) {
20000b06:	001b0593          	addi	a1,s6,1
20000b0a:	157d                	addi	a0,a0,-1
20000b0c:	00a58633          	add	a2,a1,a0
20000b10:	fec4cde3          	blt	s1,a2,20000b0a <number+0x1ba>
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:158
}
20000b14:	8c09                	sub	s0,s0,a0
20000b16:	8522                	mv	a0,s0
20000b18:	4c96                	lw	s9,68(sp)
20000b1a:	4c26                	lw	s8,72(sp)
20000b1c:	4bb6                	lw	s7,76(sp)
20000b1e:	4b46                	lw	s6,80(sp)
20000b20:	4ad6                	lw	s5,84(sp)
20000b22:	4a66                	lw	s4,88(sp)
20000b24:	49f6                	lw	s3,92(sp)
20000b26:	5906                	lw	s2,96(sp)
20000b28:	5496                	lw	s1,100(sp)
20000b2a:	5426                	lw	s0,104(sp)
20000b2c:	50b6                	lw	ra,108(sp)
20000b2e:	6165                	addi	sp,sp,112
20000b30:	8082                	ret
20000b32:	1b7d                	addi	s6,s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:147
  while (i < precision--) {
20000b34:	f924c6e3          	blt	s1,s2,20000ac0 <number+0x170>
20000b38:	bf79                	j	20000ad6 <number+0x186>
20000b3a:	1b7d                	addi	s6,s6,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/benchmarks/coremark/top_earlgrey/ee_printf.c:129
  if (sign) {
20000b3c:	f20c11e3          	bnez	s8,20000a5e <number+0x10e>
20000b40:	b725                	j	20000a68 <number+0x118>
	...

20000b44 <calc_func>:
calc_func():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:62
	, list_data *info, list_head **memblock, list_data **datablock
	, list_head *memblock_end, list_data *datablock_end);
typedef ee_s32(*list_cmp)(list_data *a, list_data *b, core_results *res);
list_head *core_list_mergesort(list_head *list, list_cmp cmp, core_results *res);

ee_s16 calc_func(ee_s16 *pdata, core_results *res) {
20000b44:	1101                	addi	sp,sp,-32
20000b46:	ce06                	sw	ra,28(sp)
20000b48:	cc22                	sw	s0,24(sp)
20000b4a:	ca26                	sw	s1,20(sp)
20000b4c:	c84a                	sw	s2,16(sp)
20000b4e:	c64e                	sw	s3,12(sp)
20000b50:	892a                	mv	s2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:63
	ee_s16 data=*pdata;
20000b52:	00055403          	lhu	s0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:66
	ee_s16 retval;
	ee_u8 optype=(data>>7) & 1; /* bit 7 indicates if the function result has been cached */
	if (optype) /* if cached, use cache */
20000b56:	08047513          	andi	a0,s0,128
20000b5a:	e921                	bnez	a0,20000baa <calc_func+0x66>
20000b5c:	84ae                	mv	s1,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:70
		return (data & 0x007f);
	else { /* otherwise calculate and cache the result */
		ee_s16 flag=data & 0x7; /* bits 0-2 is type of function to perform */
		ee_s16 dtype=((data>>3) & 0xf); /* bits 3-6 is specific data for the operation */
20000b5e:	00345513          	srli	a0,s0,0x3
20000b62:	00f57593          	andi	a1,a0,15
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
20000b66:	00459613          	slli	a2,a1,0x4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:69
		ee_s16 flag=data & 0x7; /* bits 0-2 is type of function to perform */
20000b6a:	00747513          	andi	a0,s0,7
20000b6e:	4685                	li	a3,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:71
		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
20000b70:	00b66733          	or	a4,a2,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:72
		switch (flag) {
20000b74:	02d50e63          	beq	a0,a3,20000bb0 <calc_func+0x6c>
20000b78:	89a2                	mv	s3,s0
20000b7a:	e921                	bnez	a0,20000bca <calc_func+0x86>
20000b7c:	02200513          	li	a0,34
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:74
			case 0:
				if (dtype<0x22) /* set min period for bit corruption */
20000b80:	00e56463          	bltu	a0,a4,20000b88 <calc_func+0x44>
20000b84:	02200713          	li	a4,34
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:76
					dtype=0x22;
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
20000b88:	4c88                	lw	a0,24(s1)
20000b8a:	48cc                	lw	a1,20(s1)
20000b8c:	00049603          	lh	a2,0(s1)
20000b90:	00249683          	lh	a3,2(s1)
20000b94:	0384d783          	lhu	a5,56(s1)
20000b98:	7fd000ef          	jal	ra,20001b94 <core_bench_state>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:77
				if (res->crcstate==0)
20000b9c:	03e4d583          	lhu	a1,62(s1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:76
				retval=core_bench_state(res->size,res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
20000ba0:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:77
				if (res->crcstate==0)
20000ba2:	e585                	bnez	a1,20000bca <calc_func+0x86>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:78
					res->crcstate=retval;
20000ba4:	03349f23          	sh	s3,62(s1)
20000ba8:	a00d                	j	20000bca <calc_func+0x86>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:67
		return (data & 0x007f);
20000baa:	07f47513          	andi	a0,s0,127
20000bae:	a081                	j	20000bee <calc_func+0xaa>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:81
				break;
			case 1:
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20000bb0:	0384d603          	lhu	a2,56(s1)
20000bb4:	02848513          	addi	a0,s1,40
20000bb8:	85ba                	mv	a1,a4
20000bba:	413000ef          	jal	ra,200017cc <core_bench_matrix>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:82
				if (res->crcmatrix==0)
20000bbe:	03c4d583          	lhu	a1,60(s1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:81
				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20000bc2:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:82
				if (res->crcmatrix==0)
20000bc4:	e199                	bnez	a1,20000bca <calc_func+0x86>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:83
					res->crcmatrix=retval;
20000bc6:	03349e23          	sh	s3,60(s1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:89
				break;
			default:
				retval=data;
				break;
		}
		res->crc=crcu16(retval,res->crc);
20000bca:	0384d583          	lhu	a1,56(s1)
20000bce:	854e                	mv	a0,s3
20000bd0:	390010ef          	jal	ra,20001f60 <crcu16>
20000bd4:	02a49c23          	sh	a0,56(s1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:90
		retval &= 0x007f; 
20000bd8:	07f9f513          	andi	a0,s3,127
20000bdc:	65c1                	lui	a1,0x10
20000bde:	f0058593          	addi	a1,a1,-256 # ff00 <_stack_size+0xdf00>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:91
		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
20000be2:	8de1                	and	a1,a1,s0
20000be4:	8dc9                	or	a1,a1,a0
20000be6:	0805e593          	ori	a1,a1,128
20000bea:	00b91023          	sh	a1,0(s2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:94
		return retval;
	}
}
20000bee:	49b2                	lw	s3,12(sp)
20000bf0:	4942                	lw	s2,16(sp)
20000bf2:	44d2                	lw	s1,20(sp)
20000bf4:	4462                	lw	s0,24(sp)
20000bf6:	40f2                	lw	ra,28(sp)
20000bf8:	6105                	addi	sp,sp,32
20000bfa:	8082                	ret

20000bfc <cmp_complex>:
cmp_complex():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:100
/* Function: cmp_complex
	Compare the data item in a list cell.

	Can be used by mergesort.
*/
ee_s32 cmp_complex(list_data *a, list_data *b, core_results *res) {
20000bfc:	1141                	addi	sp,sp,-16
20000bfe:	c606                	sw	ra,12(sp)
20000c00:	c422                	sw	s0,8(sp)
20000c02:	c226                	sw	s1,4(sp)
20000c04:	c04a                	sw	s2,0(sp)
20000c06:	8432                	mv	s0,a2
20000c08:	892e                	mv	s2,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:101
	ee_s16 val1=calc_func(&(a->data16),res);
20000c0a:	85b2                	mv	a1,a2
20000c0c:	3f25                	jal	20000b44 <calc_func>
20000c0e:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:102
	ee_s16 val2=calc_func(&(b->data16),res);
20000c10:	854a                	mv	a0,s2
20000c12:	85a2                	mv	a1,s0
20000c14:	3f05                	jal	20000b44 <calc_func>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:103
	return val1 - val2;
20000c16:	40a48533          	sub	a0,s1,a0
20000c1a:	4902                	lw	s2,0(sp)
20000c1c:	4492                	lw	s1,4(sp)
20000c1e:	4422                	lw	s0,8(sp)
20000c20:	40b2                	lw	ra,12(sp)
20000c22:	0141                	addi	sp,sp,16
20000c24:	8082                	ret

20000c26 <cmp_idx>:
cmp_idx():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:112
	Compare the idx item in a list cell, and regen the data.

	Can be used by mergesort.
*/
ee_s32 cmp_idx(list_data *a, list_data *b, core_results *res) {
	if (res==NULL) {
20000c26:	e61d                	bnez	a2,20000c54 <cmp_idx+0x2e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:113
		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
20000c28:	00051603          	lh	a2,0(a0)
20000c2c:	66c1                	lui	a3,0x10
20000c2e:	f0068693          	addi	a3,a3,-256 # ff00 <_stack_size+0xdf00>
20000c32:	00d67733          	and	a4,a2,a3
20000c36:	8221                	srli	a2,a2,0x8
20000c38:	0ff67613          	andi	a2,a2,255
20000c3c:	8e59                	or	a2,a2,a4
20000c3e:	00c51023          	sh	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:114
		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
20000c42:	00059603          	lh	a2,0(a1)
20000c46:	8ef1                	and	a3,a3,a2
20000c48:	8221                	srli	a2,a2,0x8
20000c4a:	0ff67613          	andi	a2,a2,255
20000c4e:	8e55                	or	a2,a2,a3
20000c50:	00c59023          	sh	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:116
	}
	return a->idx - b->idx;
20000c54:	00251503          	lh	a0,2(a0)
20000c58:	00259583          	lh	a1,2(a1)
20000c5c:	8d0d                	sub	a0,a0,a1
20000c5e:	8082                	ret

20000c60 <copy_info>:
copy_info():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:120
}

void copy_info(list_data *to,list_data *from) {
	to->data16=from->data16;
20000c60:	00059603          	lh	a2,0(a1)
20000c64:	00c51023          	sh	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:121
	to->idx=from->idx;
20000c68:	00259583          	lh	a1,2(a1)
20000c6c:	00b51123          	sh	a1,2(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:122
}
20000c70:	8082                	ret

20000c72 <core_bench_list>:
core_bench_list():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:131
	- List sort
	- Operate on data from list (crc)
	- Single remove/reinsert
	* At the end of this function, the list is back to original state
*/
ee_u16 core_bench_list(core_results *res, ee_s16 finder_idx) {
20000c72:	7139                	addi	sp,sp,-64
20000c74:	de06                	sw	ra,60(sp)
20000c76:	dc22                	sw	s0,56(sp)
20000c78:	da26                	sw	s1,52(sp)
20000c7a:	d84a                	sw	s2,48(sp)
20000c7c:	d64e                	sw	s3,44(sp)
20000c7e:	d452                	sw	s4,40(sp)
20000c80:	d256                	sw	s5,36(sp)
20000c82:	d05a                	sw	s6,32(sp)
20000c84:	ce5e                	sw	s7,28(sp)
20000c86:	cc62                	sw	s8,24(sp)
20000c88:	ca66                	sw	s9,20(sp)
20000c8a:	c86a                	sw	s10,16(sp)
20000c8c:	892a                	mv	s2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:135
	ee_u16 retval=0;
	ee_u16 found=0,missed=0;
	list_head *list=res->list;
	ee_s16 find_num=res->seed3;
20000c8e:	00451b03          	lh	s6,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:134
	list_head *list=res->list;
20000c92:	5140                	lw	s0,36(a0)
20000c94:	89ae                	mv	s3,a1
20000c96:	4a85                	li	s5,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:141
	list_head *this_find;
	list_head *finder, *remover;
	list_data info;
	ee_s16 i;

	info.idx=finder_idx;
20000c98:	00b11523          	sh	a1,10(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:143
	/* find <find_num> values in the list, and change the list each time (reverse and cache if value found) */
	for (i=0; i<find_num; i++) {
20000c9c:	095b4363          	blt	s6,s5,20000d22 <core_bench_list+0xb0>
20000ca0:	4481                	li	s1,0
20000ca2:	4c81                	li	s9,0
20000ca4:	4c01                	li	s8,0
20000ca6:	4b81                	li	s7,0
20000ca8:	00810a13          	addi	s4,sp,8
20000cac:	8d4e                	mv	s10,s3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:144
		info.data16= (i & 0xff) ;
20000cae:	0ff4f513          	andi	a0,s1,255
20000cb2:	00a11423          	sh	a0,8(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:145
		this_find=core_list_find(list,&info);
20000cb6:	8522                	mv	a0,s0
20000cb8:	85d2                	mv	a1,s4
20000cba:	2289                	jal	20000dfc <core_list_find>
core_list_reverse():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:396
	Found item, or NULL if not found.
*/

list_head *core_list_reverse(list_head *list) {
	list_head *next=NULL, *tmp;
	while (list) {
20000cbc:	c815                	beqz	s0,20000cf0 <core_bench_list+0x7e>
20000cbe:	4601                	li	a2,0
20000cc0:	85a2                	mv	a1,s0
20000cc2:	842e                	mv	s0,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:397
		tmp=list->next;
20000cc4:	418c                	lw	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:398
		list->next=next;
20000cc6:	c010                	sw	a2,0(s0)
20000cc8:	8622                	mv	a2,s0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:396
	while (list) {
20000cca:	fde5                	bnez	a1,20000cc2 <core_bench_list+0x50>
core_bench_list():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:147
		if (this_find==NULL) {
20000ccc:	c505                	beqz	a0,20000cf4 <core_bench_list+0x82>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:153
			if (this_find->info->data16 & 0x1) /* use found value */
20000cce:	414c                	lw	a1,4(a0)
20000cd0:	00059603          	lh	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:152
			found++;
20000cd4:	0c05                	addi	s8,s8,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:156
			if (this_find->next != NULL) {
20000cd6:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:153
			if (this_find->info->data16 & 0x1) /* use found value */
20000cd8:	00965693          	srli	a3,a2,0x9
20000cdc:	8e75                	and	a2,a2,a3
20000cde:	8a05                	andi	a2,a2,1
20000ce0:	9cb2                	add	s9,s9,a2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:156
			if (this_find->next != NULL) {
20000ce2:	c185                	beqz	a1,20000d02 <core_bench_list+0x90>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:158
				this_find->next = finder->next;
20000ce4:	4190                	lw	a2,0(a1)
20000ce6:	c110                	sw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:159
				finder->next=list->next;
20000ce8:	4008                	lw	a0,0(s0)
20000cea:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:160
				list->next=finder;
20000cec:	c00c                	sw	a1,0(s0)
20000cee:	a811                	j	20000d02 <core_bench_list+0x90>
20000cf0:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:147
		if (this_find==NULL) {
20000cf2:	fd71                	bnez	a0,20000cce <core_bench_list+0x5c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:149
			retval+=(list->next->info->data16 >> 8) & 1;
20000cf4:	4008                	lw	a0,0(s0)
20000cf6:	4148                	lw	a0,4(a0)
20000cf8:	00154503          	lbu	a0,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:148
			missed++;
20000cfc:	0b85                	addi	s7,s7,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:149
			retval+=(list->next->info->data16 >> 8) & 1;
20000cfe:	8905                	andi	a0,a0,1
20000d00:	9caa                	add	s9,s9,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:163
		if (info.idx>=0)
20000d02:	010d1513          	slli	a0,s10,0x10
20000d06:	8541                	srai	a0,a0,0x10
20000d08:	00054563          	bltz	a0,20000d12 <core_bench_list+0xa0>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:164
			info.idx++;
20000d0c:	0d05                	addi	s10,s10,1
20000d0e:	01a11523          	sh	s10,10(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:143
	for (i=0; i<find_num; i++) {
20000d12:	00148513          	addi	a0,s1,1
20000d16:	0542                	slli	a0,a0,0x10
20000d18:	41055493          	srai	s1,a0,0x10
20000d1c:	f964c9e3          	blt	s1,s6,20000cae <core_bench_list+0x3c>
20000d20:	a021                	j	20000d28 <core_bench_list+0xb6>
20000d22:	4b81                	li	s7,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:133
	ee_u16 found=0,missed=0;
20000d24:	4c01                	li	s8,0
20000d26:	4c81                	li	s9,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:169
	retval+=found*4-missed;
20000d28:	002c1513          	slli	a0,s8,0x2
20000d2c:	417504b3          	sub	s1,a0,s7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:171
	if (finder_idx>0)
20000d30:	0159ca63          	blt	s3,s5,20000d44 <core_bench_list+0xd2>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:172
		list=core_list_mergesort(list,cmp_complex,res);
20000d34:	00000597          	auipc	a1,0x0
20000d38:	ec858593          	addi	a1,a1,-312 # 20000bfc <cmp_complex>
20000d3c:	8522                	mv	a0,s0
20000d3e:	864a                	mv	a2,s2
20000d40:	2231                	jal	20000e4c <core_list_mergesort>
20000d42:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:173
	remover=core_list_remove(list->next);
20000d44:	4008                	lw	a0,0(s0)
core_list_remove():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:317
	list_head *ret=item->next;
20000d46:	00052983          	lw	s3,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:320
	item->info=ret->info;
20000d4a:	0049a583          	lw	a1,4(s3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:319
	tmp=item->info;
20000d4e:	00452a03          	lw	s4,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:320
	item->info=ret->info;
20000d52:	c14c                	sw	a1,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:323
	item->next=item->next->next;
20000d54:	0009a583          	lw	a1,0(s3)
20000d58:	01948933          	add	s2,s1,s9
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:321
	ret->info=tmp;
20000d5c:	0149a223          	sw	s4,4(s3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:323
	item->next=item->next->next;
20000d60:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:324
	ret->next=NULL;
20000d62:	0009a023          	sw	zero,0(s3)
20000d66:	002c                	addi	a1,sp,8
core_bench_list():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:175
	finder=core_list_find(list,&info);
20000d68:	8522                	mv	a0,s0
20000d6a:	2849                	jal	20000dfc <core_list_find>
20000d6c:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:176
	if (!finder)
20000d6e:	e119                	bnez	a0,20000d74 <core_bench_list+0x102>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:177
		finder=list->next;
20000d70:	4004                	lw	s1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:178
	while (finder) {
20000d72:	c085                	beqz	s1,20000d92 <core_bench_list+0x120>
20000d74:	6541                	lui	a0,0x10
20000d76:	fff50a13          	addi	s4,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:179
		retval=crc16(list->info->data16,retval);
20000d7a:	4048                	lw	a0,4(s0)
20000d7c:	00051503          	lh	a0,0(a0)
20000d80:	014975b3          	and	a1,s2,s4
20000d84:	262010ef          	jal	ra,20001fe6 <crc16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:180
		finder=finder->next;
20000d88:	4084                	lw	s1,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:179
		retval=crc16(list->info->data16,retval);
20000d8a:	892a                	mv	s2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:178
	while (finder) {
20000d8c:	f4fd                	bnez	s1,20000d7a <core_bench_list+0x108>
core_list_undo_remove():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:347
	tmp=item_removed->info;
20000d8e:	0049aa03          	lw	s4,4(s3)
core_bench_list():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:185
	remover=core_list_undo_remove(remover,list->next);
20000d92:	4008                	lw	a0,0(s0)
core_list_undo_remove():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:348
	item_removed->info=item_modified->info;
20000d94:	414c                	lw	a1,4(a0)
20000d96:	00b9a223          	sw	a1,4(s3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20000d9a:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:349
	item_modified->info=tmp;
20000d9c:	01452223          	sw	s4,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20000da0:	00b9a023          	sw	a1,0(s3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:352
	item_modified->next=item_removed;
20000da4:	01352023          	sw	s3,0(a0)
core_bench_list():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:187
	list=core_list_mergesort(list,cmp_idx,NULL);
20000da8:	00000597          	auipc	a1,0x0
20000dac:	e7e58593          	addi	a1,a1,-386 # 20000c26 <cmp_idx>
20000db0:	8522                	mv	a0,s0
20000db2:	4601                	li	a2,0
20000db4:	2861                	jal	20000e4c <core_list_mergesort>
20000db6:	4104                	lw	s1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:190
	while (finder) {
20000db8:	c085                	beqz	s1,20000dd8 <core_bench_list+0x166>
20000dba:	89aa                	mv	s3,a0
20000dbc:	6541                	lui	a0,0x10
20000dbe:	fff50413          	addi	s0,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:191
		retval=crc16(list->info->data16,retval);
20000dc2:	0049a503          	lw	a0,4(s3)
20000dc6:	00051503          	lh	a0,0(a0)
20000dca:	008975b3          	and	a1,s2,s0
20000dce:	218010ef          	jal	ra,20001fe6 <crc16>
20000dd2:	4084                	lw	s1,0(s1)
20000dd4:	892a                	mv	s2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:190
	while (finder) {
20000dd6:	f4f5                	bnez	s1,20000dc2 <core_bench_list+0x150>
20000dd8:	6541                	lui	a0,0x10
20000dda:	157d                	addi	a0,a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:197
	return retval;
20000ddc:	00a97533          	and	a0,s2,a0
20000de0:	4d42                	lw	s10,16(sp)
20000de2:	4cd2                	lw	s9,20(sp)
20000de4:	4c62                	lw	s8,24(sp)
20000de6:	4bf2                	lw	s7,28(sp)
20000de8:	5b02                	lw	s6,32(sp)
20000dea:	5a92                	lw	s5,36(sp)
20000dec:	5a22                	lw	s4,40(sp)
20000dee:	59b2                	lw	s3,44(sp)
20000df0:	5942                	lw	s2,48(sp)
20000df2:	54d2                	lw	s1,52(sp)
20000df4:	5462                	lw	s0,56(sp)
20000df6:	50f2                	lw	ra,60(sp)
20000df8:	6121                	addi	sp,sp,64
20000dfa:	8082                	ret

20000dfc <core_list_find>:
core_list_find():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:370
	if (info->idx>=0) {
20000dfc:	00259603          	lh	a2,2(a1)
20000e00:	56fd                	li	a3,-1
20000e02:	00c6de63          	bge	a3,a2,20000e1e <core_list_find+0x22>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20000e06:	c515                	beqz	a0,20000e32 <core_list_find+0x36>
20000e08:	65c1                	lui	a1,0x10
20000e0a:	15fd                	addi	a1,a1,-1
20000e0c:	8df1                	and	a1,a1,a2
20000e0e:	4150                	lw	a2,4(a0)
20000e10:	00265603          	lhu	a2,2(a2)
20000e14:	02b60063          	beq	a2,a1,20000e34 <core_list_find+0x38>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:372
			list=list->next;
20000e18:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:371
		while (list && (list->info->idx != info->idx))
20000e1a:	f975                	bnez	a0,20000e0e <core_list_find+0x12>
20000e1c:	a819                	j	20000e32 <core_list_find+0x36>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:375
		while (list && ((list->info->data16 & 0xff) != info->data16))
20000e1e:	c911                	beqz	a0,20000e32 <core_list_find+0x36>
20000e20:	00059583          	lh	a1,0(a1) # 10000 <_dv_log_offset>
20000e24:	4150                	lw	a2,4(a0)
20000e26:	00064603          	lbu	a2,0(a2)
20000e2a:	00b60563          	beq	a2,a1,20000e34 <core_list_find+0x38>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:376
			list=list->next;
20000e2e:	4108                	lw	a0,0(a0)
20000e30:	f975                	bnez	a0,20000e24 <core_list_find+0x28>
20000e32:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:379
}
20000e34:	8082                	ret

20000e36 <core_list_reverse>:
core_list_reverse():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:396
	while (list) {
20000e36:	c901                	beqz	a0,20000e46 <core_list_reverse+0x10>
20000e38:	4601                	li	a2,0
20000e3a:	85aa                	mv	a1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:397
		tmp=list->next;
20000e3c:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:398
		list->next=next;
20000e3e:	c190                	sw	a2,0(a1)
20000e40:	862e                	mv	a2,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:396
	while (list) {
20000e42:	fd65                	bnez	a0,20000e3a <core_list_reverse+0x4>
20000e44:	a011                	j	20000e48 <core_list_reverse+0x12>
20000e46:	4581                	li	a1,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:402
		next=list;
		list=tmp;
	}
	return next;
20000e48:	852e                	mv	a0,a1
20000e4a:	8082                	ret

20000e4c <core_list_mergesort>:
core_list_mergesort():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:425
	Note: 
	We have a special header for the list that will always be first,
	but the algorithm could theoretically modify where the list starts.

 */
list_head *core_list_mergesort(list_head *list, list_cmp cmp, core_results *res) {
20000e4c:	7139                	addi	sp,sp,-64
20000e4e:	de06                	sw	ra,60(sp)
20000e50:	dc22                	sw	s0,56(sp)
20000e52:	da26                	sw	s1,52(sp)
20000e54:	d84a                	sw	s2,48(sp)
20000e56:	d64e                	sw	s3,44(sp)
20000e58:	d452                	sw	s4,40(sp)
20000e5a:	d256                	sw	s5,36(sp)
20000e5c:	d05a                	sw	s6,32(sp)
20000e5e:	ce5e                	sw	s7,28(sp)
20000e60:	cc62                	sw	s8,24(sp)
20000e62:	ca66                	sw	s9,20(sp)
20000e64:	c86a                	sw	s10,16(sp)
20000e66:	c66e                	sw	s11,12(sp)
20000e68:	8b32                	mv	s6,a2
20000e6a:	8c2e                	mv	s8,a1
20000e6c:	892a                	mv	s2,a0
20000e6e:	4985                	li	s3,1
20000e70:	4a05                	li	s4,1
20000e72:	4b81                	li	s7,0
20000e74:	4c81                	li	s9,0
20000e76:	84ca                	mv	s1,s2
20000e78:	4901                	li	s2,0
20000e7a:	8ade                	mv	s5,s7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:443
        while (p) {
            nmerges++;  /* there exists a merge to be done */
            /* step `insize' places along from p */
            q = p;
            psize = 0;
            for (i = 0; i < insize; i++) {
20000e7c:	013a4b63          	blt	s4,s3,20000e92 <core_list_mergesort+0x46>
20000e80:	4581                	li	a1,0
20000e82:	8526                	mv	a0,s1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:445
                psize++;
			    q = q->next;
20000e84:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:446
                if (!q) break;
20000e86:	c909                	beqz	a0,20000e98 <core_list_mergesort+0x4c>
20000e88:	0585                	addi	a1,a1,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:443
            for (i = 0; i < insize; i++) {
20000e8a:	feba1de3          	bne	s4,a1,20000e84 <core_list_mergesort+0x38>
20000e8e:	8dd2                	mv	s11,s4
20000e90:	a039                	j	20000e9e <core_list_mergesort+0x52>
20000e92:	4d81                	li	s11,0
20000e94:	8526                	mv	a0,s1
20000e96:	a021                	j	20000e9e <core_list_mergesort+0x52>
20000e98:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:446
                if (!q) break;
20000e9a:	00158d93          	addi	s11,a1,1
20000e9e:	001a8b93          	addi	s7,s5,1
20000ea2:	85a6                	mv	a1,s1
20000ea4:	8d52                	mv	s10,s4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:432
        p = list;
20000ea6:	842e                	mv	s0,a1
20000ea8:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:453

            /* if q hasn't fallen off end, we have two lists to merge */
            qsize = insize;

            /* now we have two lists; merge them */
            while (psize > 0 || (qsize > 0 && q)) {
20000eaa:	01b04763          	bgtz	s11,20000eb8 <core_list_mergesort+0x6c>
20000eae:	c8a9                	beqz	s1,20000f00 <core_list_mergesort+0xb4>
20000eb0:	053d4863          	blt	s10,s3,20000f00 <core_list_mergesort+0xb4>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:456

				/* decide whether next element of merge comes from p or q */
				if (psize == 0) {
20000eb4:	020d8463          	beqz	s11,20000edc <core_list_mergesort+0x90>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:459
				    /* p is empty; e must come from q. */
				    e = q; q = q->next; qsize--;
				} else if (qsize == 0 || !q) {
20000eb8:	c899                	beqz	s1,20000ece <core_list_mergesort+0x82>
20000eba:	000d0a63          	beqz	s10,20000ece <core_list_mergesort+0x82>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:462
				    /* q is empty; e must come from p. */
				    e = p; p = p->next; psize--;
				} else if (cmp(p->info,q->info,res) <= 0) {
20000ebe:	4048                	lw	a0,4(s0)
20000ec0:	40cc                	lw	a1,4(s1)
20000ec2:	865a                	mv	a2,s6
20000ec4:	9c02                	jalr	s8
20000ec6:	00a05463          	blez	a0,20000ece <core_list_mergesort+0x82>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:467
				    /* First element of p is lower (or same); e must come from p. */
				    e = p; p = p->next; psize--;
				} else {
				    /* First element of q is lower; e must come from q. */
				    e = q; q = q->next; qsize--;
20000eca:	4088                	lw	a0,0(s1)
20000ecc:	a811                	j	20000ee0 <core_list_mergesort+0x94>
20000ece:	400c                	lw	a1,0(s0)
20000ed0:	1dfd                	addi	s11,s11,-1
20000ed2:	8526                	mv	a0,s1
20000ed4:	8622                	mv	a2,s0
20000ed6:	000c9a63          	bnez	s9,20000eea <core_list_mergesort+0x9e>
20000eda:	a005                	j	20000efa <core_list_mergesort+0xae>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:458
				    e = q; q = q->next; qsize--;
20000edc:	4088                	lw	a0,0(s1)
20000ede:	4d81                	li	s11,0
20000ee0:	1d7d                	addi	s10,s10,-1
20000ee2:	85a2                	mv	a1,s0
20000ee4:	8626                	mv	a2,s1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:471
				}

		        /* add the next element to the merged list */
				if (tail) {
20000ee6:	000c8a63          	beqz	s9,20000efa <core_list_mergesort+0xae>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:472
				    tail->next = e;
20000eea:	00cca023          	sw	a2,0(s9)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:432
        p = list;
20000eee:	842e                	mv	s0,a1
20000ef0:	84aa                	mv	s1,a0
20000ef2:	8cb2                	mv	s9,a2
20000ef4:	fdb042e3          	bgtz	s11,20000eb8 <core_list_mergesort+0x6c>
20000ef8:	bf5d                	j	20000eae <core_list_mergesort+0x62>
20000efa:	8932                	mv	s2,a2
20000efc:	8cb2                	mv	s9,a2
20000efe:	b765                	j	20000ea6 <core_list_mergesort+0x5a>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:438
        while (p) {
20000f00:	fcad                	bnez	s1,20000e7a <core_list_mergesort+0x2e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:483

			/* now p has stepped `insize' places along, and q has too */
			p = q;
        }
		
	    tail->next = NULL;
20000f02:	000ca023          	sw	zero,0(s9)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:490
        /* If we have done only one merge, we're finished. */
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
            return list;

        /* Otherwise repeat, merging lists twice the size */
        insize *= 2;
20000f06:	0a06                	slli	s4,s4,0x1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:486
        if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20000f08:	f60a95e3          	bnez	s5,20000e72 <core_list_mergesort+0x26>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:487
            return list;
20000f0c:	854a                	mv	a0,s2
20000f0e:	4db2                	lw	s11,12(sp)
20000f10:	4d42                	lw	s10,16(sp)
20000f12:	4cd2                	lw	s9,20(sp)
20000f14:	4c62                	lw	s8,24(sp)
20000f16:	4bf2                	lw	s7,28(sp)
20000f18:	5b02                	lw	s6,32(sp)
20000f1a:	5a92                	lw	s5,36(sp)
20000f1c:	5a22                	lw	s4,40(sp)
20000f1e:	59b2                	lw	s3,44(sp)
20000f20:	5942                	lw	s2,48(sp)
20000f22:	54d2                	lw	s1,52(sp)
20000f24:	5462                	lw	s0,56(sp)
20000f26:	50f2                	lw	ra,60(sp)
20000f28:	6121                	addi	sp,sp,64
20000f2a:	8082                	ret

20000f2c <core_list_remove>:
core_list_remove():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:317
	list_head *ret=item->next;
20000f2c:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:320
	item->info=ret->info;
20000f2e:	41d0                	lw	a2,4(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:319
	tmp=item->info;
20000f30:	4154                	lw	a3,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:320
	item->info=ret->info;
20000f32:	c150                	sw	a2,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:323
	item->next=item->next->next;
20000f34:	4190                	lw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:321
	ret->info=tmp;
20000f36:	c1d4                	sw	a3,4(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:323
	item->next=item->next->next;
20000f38:	c110                	sw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:324
	ret->next=NULL;
20000f3a:	0005a023          	sw	zero,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:325
	return ret;
20000f3e:	852e                	mv	a0,a1
20000f40:	8082                	ret

20000f42 <core_list_undo_remove>:
core_list_undo_remove():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:348
	item_removed->info=item_modified->info;
20000f42:	41d0                	lw	a2,4(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:347
	tmp=item_removed->info;
20000f44:	4154                	lw	a3,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:348
	item_removed->info=item_modified->info;
20000f46:	c150                	sw	a2,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20000f48:	4190                	lw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:349
	item_modified->info=tmp;
20000f4a:	c1d4                	sw	a3,4(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:351
	item_removed->next=item_modified->next;
20000f4c:	c110                	sw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:352
	item_modified->next=item_removed;
20000f4e:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:353
	return item_removed;
20000f50:	8082                	ret

20000f52 <core_list_init>:
core_list_init():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:212
list_head *core_list_init(ee_u32 blksize, list_head *memblock, ee_s16 seed) {
20000f52:	882e                	mv	a6,a1
20000f54:	ccccd5b7          	lui	a1,0xccccd
20000f58:	ccd58593          	addi	a1,a1,-819 # cccccccd <_data_init_start+0xaccc9135>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:215
	ee_u32 size=(blksize/per_item)-2; /* to accomodate systems with 64b pointers, and make sure same code is executed, set max list elements */
20000f5c:	02b535b3          	mulhu	a1,a0,a1
20000f60:	8191                	srli	a1,a1,0x4
20000f62:	ffe58313          	addi	t1,a1,-2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:216
	list_head *memblock_end=memblock+size;
20000f66:	00331593          	slli	a1,t1,0x3
20000f6a:	00b80e33          	add	t3,a6,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:218
	list_data *datablock_end=datablock+size;
20000f6e:	00231593          	slli	a1,t1,0x2
20000f72:	00be08b3          	add	a7,t3,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:225
	list->next=NULL;
20000f76:	00082023          	sw	zero,0(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:226
	list->info=datablock;
20000f7a:	01c82223          	sw	t3,4(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:227
	list->info->idx=0x0000;
20000f7e:	000e1123          	sh	zero,2(t3)
20000f82:	65a1                	lui	a1,0x8
20000f84:	08058593          	addi	a1,a1,128 # 8080 <_stack_size+0x6080>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:228
	list->info->data16=(ee_s16)0x8080;
20000f88:	00be1023          	sh	a1,0(t3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:229
	memblock++;
20000f8c:	00880713          	addi	a4,a6,8
20000f90:	06400593          	li	a1,100
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:230
	datablock++;
20000f94:	004e0e93          	addi	t4,t3,4
core_list_insert_new():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
20000f98:	02b56c63          	bltu	a0,a1,20000fd0 <core_list_init+0x7e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
20000f9c:	004e8593          	addi	a1,t4,4
20000fa0:	0315f863          	bgeu	a1,a7,20000fd0 <core_list_init+0x7e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:293
	insert_point->next=newitem;
20000fa4:	00e82023          	sw	a4,0(a6)
20000fa8:	86ba                	mv	a3,a4
20000faa:	82ba                	mv	t0,a4
20000fac:	01080713          	addi	a4,a6,16
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:292
	newitem->next=insert_point->next;
20000fb0:	00082423          	sw	zero,8(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:295
	newitem->info=*datablock;
20000fb4:	01d82623          	sw	t4,12(a6)
20000fb8:	6541                	lui	a0,0x10
20000fba:	157d                	addi	a0,a0,-1
copy_info():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:120
	to->data16=from->data16;
20000fbc:	00ae9023          	sh	a0,0(t4)
20000fc0:	6521                	lui	a0,0x8
20000fc2:	157d                	addi	a0,a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:121
	to->idx=from->idx;
20000fc4:	00ae9123          	sh	a0,2(t4)
20000fc8:	8eae                	mv	t4,a1
core_list_init():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
20000fca:	00031763          	bnez	t1,20000fd8 <core_list_init+0x86>
20000fce:	a08d                	j	20001030 <core_list_init+0xde>
20000fd0:	4681                	li	a3,0
20000fd2:	4281                	li	t0,0
20000fd4:	04030e63          	beqz	t1,20001030 <core_list_init+0xde>
20000fd8:	4581                	li	a1,0
20000fda:	6521                	lui	a0,0x8
20000fdc:	fff50393          	addi	t2,a0,-1 # 7fff <_stack_size+0x5fff>
core_list_insert_new():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
20000fe0:	00870793          	addi	a5,a4,8
20000fe4:	05c7f163          	bgeu	a5,t3,20001026 <core_list_init+0xd4>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
20000fe8:	004e8513          	addi	a0,t4,4
20000fec:	03157d63          	bgeu	a0,a7,20001026 <core_list_init+0xd4>
20000ff0:	00c5c6b3          	xor	a3,a1,a2
20000ff4:	068e                	slli	a3,a3,0x3
20000ff6:	0786ff13          	andi	t5,a3,120
20000ffa:	0075f693          	andi	a3,a1,7
20000ffe:	00df6f33          	or	t5,t5,a3
20001002:	008f1693          	slli	a3,t5,0x8
20001006:	01e6e6b3          	or	a3,a3,t5
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:292
	newitem->next=insert_point->next;
2000100a:	00572023          	sw	t0,0(a4)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:293
	insert_point->next=newitem;
2000100e:	00e82023          	sw	a4,0(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:295
	newitem->info=*datablock;
20001012:	01d72223          	sw	t4,4(a4)
copy_info():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:120
	to->data16=from->data16;
20001016:	00de9023          	sh	a3,0(t4)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:121
	to->idx=from->idx;
2000101a:	007e9123          	sh	t2,2(t4)
2000101e:	86ba                	mv	a3,a4
20001020:	82ba                	mv	t0,a4
20001022:	8eaa                	mv	t4,a0
20001024:	a011                	j	20001028 <core_list_init+0xd6>
20001026:	87ba                	mv	a5,a4
core_list_init():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:236
	for (i=0; i<size; i++) {
20001028:	0585                	addi	a1,a1,1
2000102a:	873e                	mv	a4,a5
2000102c:	fab31ae3          	bne	t1,a1,20000fe0 <core_list_init+0x8e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:245
	while (finder->next!=NULL) {
20001030:	4298                	lw	a4,0(a3)
20001032:	c331                	beqz	a4,20001076 <core_list_init+0x124>
20001034:	ccccd537          	lui	a0,0xccccd
20001038:	ccd50513          	addi	a0,a0,-819 # cccccccd <_data_init_start+0xaccc9135>
2000103c:	02a33533          	mulhu	a0,t1,a0
20001040:	00255293          	srli	t0,a0,0x2
20001044:	4785                	li	a5,1
20001046:	6511                	lui	a0,0x4
20001048:	fff50893          	addi	a7,a0,-1 # 3fff <_stack_size+0x1fff>
2000104c:	853a                	mv	a0,a4
2000104e:	00178593          	addi	a1,a5,1
20001052:	0057eb63          	bltu	a5,t0,20001068 <core_list_init+0x116>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:249
			ee_u16 pat=(ee_u16)(i++ ^ seed); /* get a pseudo random number */
20001056:	00c7c733          	xor	a4,a5,a2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:250
			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
2000105a:	01177733          	and	a4,a4,a7
2000105e:	00859793          	slli	a5,a1,0x8
20001062:	7007f793          	andi	a5,a5,1792
20001066:	8fd9                	or	a5,a5,a4
20001068:	42d4                	lw	a3,4(a3)
2000106a:	00f69123          	sh	a5,2(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:245
	while (finder->next!=NULL) {
2000106e:	4118                	lw	a4,0(a0)
20001070:	86aa                	mv	a3,a0
20001072:	87ae                	mv	a5,a1
20001074:	ff61                	bnez	a4,2000104c <core_list_init+0xfa>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:254
	list = core_list_mergesort(list,cmp_idx,NULL);
20001076:	00000597          	auipc	a1,0x0
2000107a:	bb058593          	addi	a1,a1,-1104 # 20000c26 <cmp_idx>
2000107e:	8542                	mv	a0,a6
20001080:	4601                	li	a2,0
20001082:	b3e9                	j	20000e4c <core_list_mergesort>

20001084 <core_list_insert_new>:
core_list_insert_new():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:285
	if ((*memblock+1) >= memblock_end)
20001084:	00062803          	lw	a6,0(a2)
20001088:	00880893          	addi	a7,a6,8
2000108c:	02e8fe63          	bgeu	a7,a4,200010c8 <core_list_insert_new+0x44>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:287
	if ((*datablock+1) >= datablock_end)
20001090:	4298                	lw	a4,0(a3)
20001092:	0711                	addi	a4,a4,4
20001094:	02f77a63          	bgeu	a4,a5,200010c8 <core_list_insert_new+0x44>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:291
	(*memblock)++;
20001098:	01162023          	sw	a7,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:292
	newitem->next=insert_point->next;
2000109c:	4110                	lw	a2,0(a0)
2000109e:	00c82023          	sw	a2,0(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:293
	insert_point->next=newitem;
200010a2:	01052023          	sw	a6,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:295
	newitem->info=*datablock;
200010a6:	4288                	lw	a0,0(a3)
200010a8:	00a82223          	sw	a0,4(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:296
	(*datablock)++;
200010ac:	4288                	lw	a0,0(a3)
200010ae:	0511                	addi	a0,a0,4
200010b0:	c288                	sw	a0,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:297
	copy_info(newitem->info,info);
200010b2:	00482503          	lw	a0,4(a6)
copy_info():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:120
	to->data16=from->data16;
200010b6:	00059603          	lh	a2,0(a1)
200010ba:	00c51023          	sh	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:121
	to->idx=from->idx;
200010be:	00259583          	lh	a1,2(a1)
200010c2:	00b51123          	sh	a1,2(a0)
200010c6:	a011                	j	200010ca <core_list_insert_new+0x46>
200010c8:	4801                	li	a6,0
core_list_insert_new():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_list_join.c:300
}
200010ca:	8542                	mv	a0,a6
200010cc:	8082                	ret
	...

200010d0 <iterate>:
iterate():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:38
	NULL.
*/
static ee_u16 list_known_crc[]   =      {(ee_u16)0xd4b0,(ee_u16)0x3340,(ee_u16)0x6a79,(ee_u16)0xe714,(ee_u16)0xe3c1};
static ee_u16 matrix_known_crc[] =      {(ee_u16)0xbe52,(ee_u16)0x1199,(ee_u16)0x5608,(ee_u16)0x1fd7,(ee_u16)0x0747};
static ee_u16 state_known_crc[]  =      {(ee_u16)0x5e47,(ee_u16)0x39bf,(ee_u16)0xe5a4,(ee_u16)0x8e3a,(ee_u16)0x8d84};
void *iterate(void *pres) {
200010d0:	1141                	addi	sp,sp,-16
200010d2:	c606                	sw	ra,12(sp)
200010d4:	c422                	sw	s0,8(sp)
200010d6:	c226                	sw	s1,4(sp)
200010d8:	c04a                	sw	s2,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:42
	ee_u32 i;
	ee_u16 crc;
	core_results *res=(core_results *)pres;
	ee_u32 iterations=res->iterations;
200010da:	01c52903          	lw	s2,28(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:44
	res->crc=0;
	res->crclist=0;
200010de:	02052e23          	sw	zero,60(a0)
200010e2:	02052c23          	sw	zero,56(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:48
	res->crcmatrix=0;
	res->crcstate=0;

	for (i=0; i<iterations; i++) {
200010e6:	02090c63          	beqz	s2,2000111e <iterate+0x4e>
200010ea:	842a                	mv	s0,a0
200010ec:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:49
		crc=core_bench_list(res,1);
200010ee:	4585                	li	a1,1
200010f0:	8522                	mv	a0,s0
200010f2:	3641                	jal	20000c72 <core_bench_list>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:50
		res->crc=crcu16(crc,res->crc);
200010f4:	03845583          	lhu	a1,56(s0)
200010f8:	669000ef          	jal	ra,20001f60 <crcu16>
200010fc:	02a41c23          	sh	a0,56(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:51
		crc=core_bench_list(res,-1);
20001100:	55fd                	li	a1,-1
20001102:	8522                	mv	a0,s0
20001104:	36bd                	jal	20000c72 <core_bench_list>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:52
		res->crc=crcu16(crc,res->crc);
20001106:	03845583          	lhu	a1,56(s0)
2000110a:	657000ef          	jal	ra,20001f60 <crcu16>
2000110e:	02a41c23          	sh	a0,56(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:53
		if (i==0) res->crclist=res->crc;
20001112:	e099                	bnez	s1,20001118 <iterate+0x48>
20001114:	02a41d23          	sh	a0,58(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:48
	for (i=0; i<iterations; i++) {
20001118:	0485                	addi	s1,s1,1
2000111a:	fc991ae3          	bne	s2,s1,200010ee <iterate+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:55
	}
	return NULL;
2000111e:	4501                	li	a0,0
20001120:	4902                	lw	s2,0(sp)
20001122:	4492                	lw	s1,4(sp)
20001124:	4422                	lw	s0,8(sp)
20001126:	40b2                	lw	ra,12(sp)
20001128:	0141                	addi	sp,sp,16
2000112a:	8082                	ret

2000112c <main>:
main():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:89
	4 - Iterations  : Special, if set to 0, iterations will be automatically determined such that the benchmark will run between 10 to 100 secs

*/

#if MAIN_HAS_NOARGC
MAIN_RETURN_TYPE main(void) {
2000112c:	81010113          	addi	sp,sp,-2032
20001130:	7e112623          	sw	ra,2028(sp)
20001134:	7e812423          	sw	s0,2024(sp)
20001138:	7e912223          	sw	s1,2020(sp)
2000113c:	7f212023          	sw	s2,2016(sp)
20001140:	7d312e23          	sw	s3,2012(sp)
20001144:	7d412c23          	sw	s4,2008(sp)
20001148:	7d512a23          	sw	s5,2004(sp)
2000114c:	7d612823          	sw	s6,2000(sp)
20001150:	7d712623          	sw	s7,1996(sp)
20001154:	7d812423          	sw	s8,1992(sp)
20001158:	7d912223          	sw	s9,1988(sp)
2000115c:	7da12023          	sw	s10,1984(sp)
20001160:	7bb12e23          	sw	s11,1980(sp)
20001164:	7159                	addi	sp,sp,-112
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:90
	int argc=0;
20001166:	6505                	lui	a0,0x1
20001168:	82850513          	addi	a0,a0,-2008 # 828 <__DYNAMIC+0x828>
2000116c:	950a                	add	a0,a0,sp
2000116e:	00052023          	sw	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:104
	core_results results[MULTITHREAD];
#if (MEM_METHOD==MEM_STACK)
	ee_u8 stack_memblock[TOTAL_DATA_SIZE*MULTITHREAD];
#endif
	/* first call any initializations needed */
	portable_init(&(results[0].port), &argc, argv);
20001172:	6505                	lui	a0,0x1
20001174:	82250513          	addi	a0,a0,-2014 # 822 <__DYNAMIC+0x822>
20001178:	950a                	add	a0,a0,sp
2000117a:	852a                	mv	a0,a0
2000117c:	6585                	lui	a1,0x1
2000117e:	82858593          	addi	a1,a1,-2008 # 828 <__DYNAMIC+0x828>
20001182:	958a                	add	a1,a1,sp
20001184:	85ae                	mv	a1,a1
20001186:	6605                	lui	a2,0x1
20001188:	82460613          	addi	a2,a2,-2012 # 824 <__DYNAMIC+0x824>
2000118c:	960a                	add	a2,a2,sp
2000118e:	8632                	mv	a2,a2
20001190:	83eff0ef          	jal	ra,200001ce <portable_init>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:110
	/* First some checks to make sure benchmark will run ok */
	if (sizeof(struct list_head_s)>128) {
		ee_printf("list_head structure too big for comparable data!\n");
		return MAIN_RETURN_VAL;
	}
	results[0].seed1=get_seed(1);
20001194:	4505                	li	a0,1
20001196:	57b000ef          	jal	ra,20001f10 <get_seed_32>
2000119a:	7ea11023          	sh	a0,2016(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:111
	results[0].seed2=get_seed(2);
2000119e:	4509                	li	a0,2
200011a0:	571000ef          	jal	ra,20001f10 <get_seed_32>
200011a4:	7ea11123          	sh	a0,2018(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:112
	results[0].seed3=get_seed(3);
200011a8:	450d                	li	a0,3
200011aa:	567000ef          	jal	ra,20001f10 <get_seed_32>
200011ae:	7ea11223          	sh	a0,2020(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:113
	results[0].iterations=get_seed_32(4);
200011b2:	4511                	li	a0,4
200011b4:	55d000ef          	jal	ra,20001f10 <get_seed_32>
200011b8:	7ea12e23          	sw	a0,2044(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:117
#if CORE_DEBUG
	results[0].iterations=1;
#endif
	results[0].execs=get_seed_32(5);
200011bc:	4515                	li	a0,5
200011be:	553000ef          	jal	ra,20001f10 <get_seed_32>
200011c2:	459d                	li	a1,7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:118
	if (results[0].execs==0) { /* if not supplied, execute all algorithms */
200011c4:	c111                	beqz	a0,200011c8 <main+0x9c>
200011c6:	85aa                	mv	a1,a0
200011c8:	6505                	lui	a0,0x1
200011ca:	80050513          	addi	a0,a0,-2048 # 800 <__DYNAMIC+0x800>
200011ce:	950a                	add	a0,a0,sp
200011d0:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:122
		results[0].execs=ALL_ALGORITHMS_MASK;
	}
		/* put in some default values based on one seed only for easy testing */
	if ((results[0].seed1==0) && (results[0].seed2==0) && (results[0].seed3==0)) { /* validation run */
200011d2:	7e015803          	lhu	a6,2016(sp)
200011d6:	7e215503          	lhu	a0,2018(sp)
200011da:	7e415603          	lhu	a2,2020(sp)
200011de:	010566b3          	or	a3,a0,a6
200011e2:	8ed1                	or	a3,a3,a2
200011e4:	ca91                	beqz	a3,200011f8 <main+0xcc>
200011e6:	4685                	li	a3,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:127
		results[0].seed1=0;
		results[0].seed2=0;
		results[0].seed3=0x66;
	}
	if ((results[0].seed1==1) && (results[0].seed2==0) && (results[0].seed3==0)) { /* perfromance run */
200011e8:	02d81163          	bne	a6,a3,2000120a <main+0xde>
200011ec:	8d51                	or	a0,a0,a2
200011ee:	ed11                	bnez	a0,2000120a <main+0xde>
200011f0:	650d                	lui	a0,0x3
200011f2:	41550813          	addi	a6,a0,1045 # 3415 <_stack_size+0x1415>
200011f6:	a011                	j	200011fa <main+0xce>
200011f8:	4801                	li	a6,0
200011fa:	7f011023          	sh	a6,2016(sp)
200011fe:	7f011123          	sh	a6,2018(sp)
20001202:	06600513          	li	a0,102
20001206:	7ea11223          	sh	a0,2020(sp)
2000120a:	4601                	li	a2,0
2000120c:	4501                	li	a0,0
2000120e:	7d000693          	li	a3,2000
20001212:	7ed12c23          	sw	a3,2040(sp)
20001216:	6685                	lui	a3,0x1
20001218:	82068693          	addi	a3,a3,-2016 # 820 <__DYNAMIC+0x820>
2000121c:	968a                	add	a3,a3,sp
2000121e:	00069023          	sh	zero,0(a3)
20001222:	01010893          	addi	a7,sp,16
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:155
		results[i].err=0;
		results[i].execs=results[0].execs;
	}
#elif (MEM_METHOD==MEM_STACK)
	for (i=0 ; i<MULTITHREAD; i++) {
		results[i].memblock[0]=stack_memblock+i*TOTAL_DATA_SIZE;
20001226:	7f112423          	sw	a7,2024(sp)
2000122a:	470d                	li	a4,3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:169
#error "Please define a way to initialize a memory block."
#endif
	/* Data init */ 
	/* Find out how space much we have based on number of algorithms */
	for (i=0; i<NUM_ALGORITHMS; i++) {
		if ((1<<(ee_u32)i) & results[0].execs)
2000122c:	00c5d7b3          	srl	a5,a1,a2
20001230:	8b85                	andi	a5,a5,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:168
	for (i=0; i<NUM_ALGORITHMS; i++) {
20001232:	0605                	addi	a2,a2,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:169
		if ((1<<(ee_u32)i) & results[0].execs)
20001234:	953e                	add	a0,a0,a5
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:168
	for (i=0; i<NUM_ALGORITHMS; i++) {
20001236:	fee61be3          	bne	a2,a4,2000122c <main+0x100>
2000123a:	4701                	li	a4,0
2000123c:	4781                	li	a5,0
2000123e:	6641                	lui	a2,0x10
20001240:	fff60493          	addi	s1,a2,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:173
			num_algorithms++;
	}
	for (i=0 ; i<MULTITHREAD; i++) 
		results[i].size=results[i].size/num_algorithms;
20001244:	8d65                	and	a0,a0,s1
20001246:	7d000613          	li	a2,2000
2000124a:	02a65533          	divu	a0,a2,a0
2000124e:	7ea12c23          	sw	a0,2040(sp)
20001252:	440d                	li	s0,3
20001254:	7e010293          	addi	t0,sp,2016
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:177
	/* Assign pointers */
	for (i=0; i<NUM_ALGORITHMS; i++) {
		ee_u32 ctx;
		if ((1<<(ee_u32)i) & results[0].execs) {
20001258:	00e5d6b3          	srl	a3,a1,a4
2000125c:	8a85                	andi	a3,a3,1
2000125e:	ce99                	beqz	a3,2000127c <main+0x150>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:179
			for (ctx=0 ; ctx<MULTITHREAD; ctx++)
				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
20001260:	0097f6b3          	and	a3,a5,s1
20001264:	02d506b3          	mul	a3,a0,a3
20001268:	96c6                	add	a3,a3,a7
2000126a:	0705                	addi	a4,a4,1
2000126c:	00271613          	slli	a2,a4,0x2
20001270:	9616                	add	a2,a2,t0
20001272:	c614                	sw	a3,8(a2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:180
			j++;
20001274:	0785                	addi	a5,a5,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:175
	for (i=0; i<NUM_ALGORITHMS; i++) {
20001276:	fe8711e3          	bne	a4,s0,20001258 <main+0x12c>
2000127a:	a021                	j	20001282 <main+0x156>
2000127c:	0705                	addi	a4,a4,1
2000127e:	fc871de3          	bne	a4,s0,20001258 <main+0x12c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:185
		}
	}
	/* call inits */
	for (i=0 ; i<MULTITHREAD; i++) {
		if (results[i].execs & ID_LIST) {
20001282:	0015f613          	andi	a2,a1,1
20001286:	c20d                	beqz	a2,200012a8 <main+0x17c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:186
			results[i].list=core_list_init(results[0].size,results[i].memblock[1],results[i].seed1);
20001288:	7ec12583          	lw	a1,2028(sp)
2000128c:	01081613          	slli	a2,a6,0x10
20001290:	8641                	srai	a2,a2,0x10
20001292:	31c1                	jal	20000f52 <core_list_init>
20001294:	6585                	lui	a1,0x1
20001296:	80458593          	addi	a1,a1,-2044 # 804 <__DYNAMIC+0x804>
2000129a:	958a                	add	a1,a1,sp
2000129c:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:188
		}
		if (results[i].execs & ID_MATRIX) {
2000129e:	6505                	lui	a0,0x1
200012a0:	80050513          	addi	a0,a0,-2048 # 800 <__DYNAMIC+0x800>
200012a4:	950a                	add	a0,a0,sp
200012a6:	410c                	lw	a1,0(a0)
200012a8:	0025f513          	andi	a0,a1,2
200012ac:	c51d                	beqz	a0,200012da <main+0x1ae>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:189
			core_init_matrix(results[0].size, results[i].memblock[2], (ee_s32)results[i].seed1 | (((ee_s32)results[i].seed2) << 16), &(results[i].mat) );
200012ae:	7e211603          	lh	a2,2018(sp)
200012b2:	7e011683          	lh	a3,2016(sp)
200012b6:	7f812503          	lw	a0,2040(sp)
200012ba:	7f012583          	lw	a1,2032(sp)
200012be:	0642                	slli	a2,a2,0x10
200012c0:	8e55                	or	a2,a2,a3
200012c2:	6685                	lui	a3,0x1
200012c4:	80868693          	addi	a3,a3,-2040 # 808 <__DYNAMIC+0x808>
200012c8:	968a                	add	a3,a3,sp
200012ca:	86b6                	mv	a3,a3
200012cc:	01b000ef          	jal	ra,20001ae6 <core_init_matrix>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:191
		}
		if (results[i].execs & ID_STATE) {
200012d0:	6505                	lui	a0,0x1
200012d2:	80050513          	addi	a0,a0,-2048 # 800 <__DYNAMIC+0x800>
200012d6:	950a                	add	a0,a0,sp
200012d8:	410c                	lw	a1,0(a0)
200012da:	0045f513          	andi	a0,a1,4
200012de:	c909                	beqz	a0,200012f0 <main+0x1c4>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:192
			core_init_state(results[0].size,results[i].seed1,results[i].memblock[3]);
200012e0:	7f812503          	lw	a0,2040(sp)
200012e4:	7e011583          	lh	a1,2016(sp)
200012e8:	7f412603          	lw	a2,2036(sp)
200012ec:	381000ef          	jal	ra,20001e6c <core_init_state>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:197
		}
	}
	
	/* automatically determine number of iterations if not set */
	if (results[0].iterations==0) { 
200012f0:	7fc12503          	lw	a0,2044(sp)
200012f4:	ed21                	bnez	a0,2000134c <main+0x220>
200012f6:	44a9                	li	s1,10
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:202
		secs_ret secs_passed=0;
		ee_u32 divisor;
		results[0].iterations=1;
		while (secs_passed < (secs_ret)1) {
			results[0].iterations*=10;
200012f8:	7e912e23          	sw	s1,2044(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:203
			start_time();
200012fc:	e8bfe0ef          	jal	ra,20000186 <start_time>
20001300:	7e010513          	addi	a0,sp,2016
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:204
			iterate(&results[0]);
20001304:	33f1                	jal	200010d0 <iterate>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:205
			stop_time();
20001306:	e91fe0ef          	jal	ra,20000196 <stop_time>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:206
			secs_passed=time_in_secs(get_time());
2000130a:	e9dfe0ef          	jal	ra,200001a6 <get_time>
2000130e:	eb1fe0ef          	jal	ra,200001be <time_in_secs>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:201
		while (secs_passed < (secs_ret)1) {
20001312:	e505                	bnez	a0,2000133a <main+0x20e>
20001314:	7e010413          	addi	s0,sp,2016
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:202
			results[0].iterations*=10;
20001318:	7fc12503          	lw	a0,2044(sp)
2000131c:	02950533          	mul	a0,a0,s1
20001320:	7ea12e23          	sw	a0,2044(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:203
			start_time();
20001324:	e63fe0ef          	jal	ra,20000186 <start_time>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:204
			iterate(&results[0]);
20001328:	8522                	mv	a0,s0
2000132a:	335d                	jal	200010d0 <iterate>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:205
			stop_time();
2000132c:	e6bfe0ef          	jal	ra,20000196 <stop_time>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:206
			secs_passed=time_in_secs(get_time());
20001330:	e77fe0ef          	jal	ra,200001a6 <get_time>
20001334:	e8bfe0ef          	jal	ra,200001be <time_in_secs>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:201
		while (secs_passed < (secs_ret)1) {
20001338:	d165                	beqz	a0,20001318 <main+0x1ec>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:212
		}
		/* now we know it executes for at least 1 sec, set actual run time at about 10 secs */
		divisor=(ee_u32)secs_passed;
		if (divisor==0) /* some machines cast float to int as 0 since this conversion is not defined by ANSI, but we know at least one second passed */
			divisor=1;
		results[0].iterations*=1+10/divisor;
2000133a:	7fc12583          	lw	a1,2044(sp)
2000133e:	02a4d533          	divu	a0,s1,a0
20001342:	0505                	addi	a0,a0,1
20001344:	02a58533          	mul	a0,a1,a0
20001348:	7ea12e23          	sw	a0,2044(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:215
	}
	/* perform actual benchmark */
	start_time();
2000134c:	e3bfe0ef          	jal	ra,20000186 <start_time>
20001350:	7e010513          	addi	a0,sp,2016
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:229
	}
	for (i=0 ; i<default_num_contexts; i++) {
		core_stop_parallel(&results[i]);
	}
#else
	iterate(&results[0]);
20001354:	3bb5                	jal	200010d0 <iterate>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:231
#endif
	stop_time();
20001356:	e41fe0ef          	jal	ra,20000196 <stop_time>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:232
	total_time=get_time();
2000135a:	e4dfe0ef          	jal	ra,200001a6 <get_time>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:234
	/* get a function of the input to report */
	seedcrc=crc16(results[0].seed1,seedcrc);
2000135e:	7e011583          	lh	a1,2016(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:232
	total_time=get_time();
20001362:	8a2a                	mv	s4,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:234
	seedcrc=crc16(results[0].seed1,seedcrc);
20001364:	852e                	mv	a0,a1
20001366:	4581                	li	a1,0
20001368:	47f000ef          	jal	ra,20001fe6 <crc16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:235
	seedcrc=crc16(results[0].seed2,seedcrc);
2000136c:	7e211583          	lh	a1,2018(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:234
	seedcrc=crc16(results[0].seed1,seedcrc);
20001370:	862a                	mv	a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:235
	seedcrc=crc16(results[0].seed2,seedcrc);
20001372:	852e                	mv	a0,a1
20001374:	85b2                	mv	a1,a2
20001376:	471000ef          	jal	ra,20001fe6 <crc16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:236
	seedcrc=crc16(results[0].seed3,seedcrc);
2000137a:	7e411583          	lh	a1,2020(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:235
	seedcrc=crc16(results[0].seed2,seedcrc);
2000137e:	862a                	mv	a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:236
	seedcrc=crc16(results[0].seed3,seedcrc);
20001380:	852e                	mv	a0,a1
20001382:	85b2                	mv	a1,a2
20001384:	463000ef          	jal	ra,20001fe6 <crc16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:237
	seedcrc=crc16(results[0].size,seedcrc);
20001388:	7f811583          	lh	a1,2040(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:236
	seedcrc=crc16(results[0].seed3,seedcrc);
2000138c:	862a                	mv	a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:237
	seedcrc=crc16(results[0].size,seedcrc);
2000138e:	852e                	mv	a0,a1
20001390:	85b2                	mv	a1,a2
20001392:	455000ef          	jal	ra,20001fe6 <crc16>
20001396:	85aa                	mv	a1,a0
20001398:	6541                	lui	a0,0x10
2000139a:	fff50c93          	addi	s9,a0,-1 # ffff <_stack_size+0xdfff>
2000139e:	6521                	lui	a0,0x8
200013a0:	b0450513          	addi	a0,a0,-1276 # 7b04 <_stack_size+0x5b04>
200013a4:	80818c13          	addi	s8,gp,-2040 # 10000008 <default_num_contexts>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:239
	
	switch (seedcrc) { /* test known output for common seeds */
200013a8:	c62e                	sw	a1,12(sp)
200013aa:	02b55763          	bge	a0,a1,200013d8 <main+0x2ac>
200013ae:	653d                	lui	a0,0xf
200013b0:	9f550513          	addi	a0,a0,-1547 # e9f5 <_stack_size+0xc9f5>
200013b4:	04a58263          	beq	a1,a0,200013f8 <main+0x2cc>
200013b8:	6525                	lui	a0,0x9
200013ba:	a0250513          	addi	a0,a0,-1534 # 8a02 <_stack_size+0x6a02>
200013be:	04a58363          	beq	a1,a0,20001404 <main+0x2d8>
200013c2:	6521                	lui	a0,0x8
200013c4:	b0550513          	addi	a0,a0,-1275 # 7b05 <_stack_size+0x5b05>
200013c8:	18a59f63          	bne	a1,a0,20001566 <main+0x43a>
200013cc:	4905                	li	s2,1
200013ce:	00002517          	auipc	a0,0x2
200013d2:	17250513          	addi	a0,a0,370 # 20003540 <__clz_tab+0x214>
200013d6:	a091                	j	2000141a <main+0x2ee>
200013d8:	6509                	lui	a0,0x2
200013da:	8f250513          	addi	a0,a0,-1806 # 18f2 <__DYNAMIC+0x18f2>
200013de:	02a58963          	beq	a1,a0,20001410 <main+0x2e4>
200013e2:	6515                	lui	a0,0x5
200013e4:	eaf50513          	addi	a0,a0,-337 # 4eaf <_stack_size+0x2eaf>
200013e8:	16a59f63          	bne	a1,a0,20001566 <main+0x43a>
200013ec:	4909                	li	s2,2
200013ee:	00002517          	auipc	a0,0x2
200013f2:	17e50513          	addi	a0,a0,382 # 2000356c <__clz_tab+0x240>
200013f6:	a015                	j	2000141a <main+0x2ee>
200013f8:	490d                	li	s2,3
200013fa:	00002517          	auipc	a0,0x2
200013fe:	1a350513          	addi	a0,a0,419 # 2000359d <__clz_tab+0x271>
20001402:	a821                	j	2000141a <main+0x2ee>
20001404:	4901                	li	s2,0
20001406:	00002517          	auipc	a0,0x2
2000140a:	10d50513          	addi	a0,a0,269 # 20003513 <__clz_tab+0x1e7>
2000140e:	a031                	j	2000141a <main+0x2ee>
20001410:	4911                	li	s2,4
20001412:	00002517          	auipc	a0,0x2
20001416:	1b850513          	addi	a0,a0,440 # 200035ca <__clz_tab+0x29e>
2000141a:	e9bfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:265
		default:
			total_errors=-1;
			break;
	}
	if (known_id>=0) {
		for (i=0 ; i<default_num_contexts; i++) {
2000141e:	000c2503          	lw	a0,0(s8)
20001422:	14050163          	beqz	a0,20001564 <main+0x438>
20001426:	4401                	li	s0,0
20001428:	4481                	li	s1,0
2000142a:	4c81                	li	s9,0
2000142c:	00191513          	slli	a0,s2,0x1
20001430:	00002597          	auipc	a1,0x2
20001434:	d3058593          	addi	a1,a1,-720 # 20003160 <list_known_crc>
20001438:	00b50d33          	add	s10,a0,a1
2000143c:	00002597          	auipc	a1,0x2
20001440:	d2e58593          	addi	a1,a1,-722 # 2000316a <matrix_known_crc>
20001444:	00b50db3          	add	s11,a0,a1
20001448:	00002597          	auipc	a1,0x2
2000144c:	d2c58593          	addi	a1,a1,-724 # 20003174 <state_known_crc>
20001450:	00b50933          	add	s2,a0,a1
20001454:	6541                	lui	a0,0x10
20001456:	fff50993          	addi	s3,a0,-1 # ffff <_stack_size+0xdfff>
2000145a:	00002a97          	auipc	s5,0x2
2000145e:	1fca8a93          	addi	s5,s5,508 # 20003656 <__clz_tab+0x32a>
20001462:	00002b17          	auipc	s6,0x2
20001466:	1c3b0b13          	addi	s6,s6,451 # 20003625 <__clz_tab+0x2f9>
2000146a:	00002b97          	auipc	s7,0x2
2000146e:	18cb8b93          	addi	s7,s7,396 # 200035f6 <__clz_tab+0x2ca>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:266
			results[i].err=0;
20001472:	6505                	lui	a0,0x1
20001474:	82050513          	addi	a0,a0,-2016 # 820 <__DYNAMIC+0x820>
20001478:	950a                	add	a0,a0,sp
2000147a:	00051023          	sh	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:267
			if ((results[i].execs & ID_LIST) && 
2000147e:	6505                	lui	a0,0x1
20001480:	80050513          	addi	a0,a0,-2048 # 800 <__DYNAMIC+0x800>
20001484:	950a                	add	a0,a0,sp
20001486:	410c                	lw	a1,0(a0)
20001488:	0015f613          	andi	a2,a1,1
2000148c:	ca19                	beqz	a2,200014a2 <main+0x376>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:268
				(results[i].crclist!=list_known_crc[known_id])) {
2000148e:	6505                	lui	a0,0x1
20001490:	81a50513          	addi	a0,a0,-2022 # 81a <__DYNAMIC+0x81a>
20001494:	950a                	add	a0,a0,sp
20001496:	00055603          	lhu	a2,0(a0)
2000149a:	000d5683          	lhu	a3,0(s10)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:267
			if ((results[i].execs & ID_LIST) && 
2000149e:	00d61463          	bne	a2,a3,200014a6 <main+0x37a>
200014a2:	4501                	li	a0,0
200014a4:	a03d                	j	200014d2 <main+0x3a6>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:269
				ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",i,results[i].crclist,list_known_crc[known_id]);
200014a6:	855e                	mv	a0,s7
200014a8:	85a2                	mv	a1,s0
200014aa:	e0bfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:270
				results[i].err++;
200014ae:	6505                	lui	a0,0x1
200014b0:	82050513          	addi	a0,a0,-2016 # 820 <__DYNAMIC+0x820>
200014b4:	950a                	add	a0,a0,sp
200014b6:	00051503          	lh	a0,0(a0)
200014ba:	0505                	addi	a0,a0,1
200014bc:	6585                	lui	a1,0x1
200014be:	82058593          	addi	a1,a1,-2016 # 820 <__DYNAMIC+0x820>
200014c2:	958a                	add	a1,a1,sp
200014c4:	00a59023          	sh	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:272
			}
			if ((results[i].execs & ID_MATRIX) &&
200014c8:	6585                	lui	a1,0x1
200014ca:	80058593          	addi	a1,a1,-2048 # 800 <__DYNAMIC+0x800>
200014ce:	958a                	add	a1,a1,sp
200014d0:	418c                	lw	a1,0(a1)
200014d2:	0025f613          	andi	a2,a1,2
200014d6:	c229                	beqz	a2,20001518 <main+0x3ec>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:273
				(results[i].crcmatrix!=matrix_known_crc[known_id])) {
200014d8:	6605                	lui	a2,0x1
200014da:	81c60613          	addi	a2,a2,-2020 # 81c <__DYNAMIC+0x81c>
200014de:	960a                	add	a2,a2,sp
200014e0:	00065603          	lhu	a2,0(a2)
200014e4:	000dd683          	lhu	a3,0(s11)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:272
			if ((results[i].execs & ID_MATRIX) &&
200014e8:	02d60863          	beq	a2,a3,20001518 <main+0x3ec>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:274
				ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",i,results[i].crcmatrix,matrix_known_crc[known_id]);
200014ec:	855a                	mv	a0,s6
200014ee:	85a2                	mv	a1,s0
200014f0:	dc5fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:275
				results[i].err++;
200014f4:	6505                	lui	a0,0x1
200014f6:	82050513          	addi	a0,a0,-2016 # 820 <__DYNAMIC+0x820>
200014fa:	950a                	add	a0,a0,sp
200014fc:	00051503          	lh	a0,0(a0)
20001500:	0505                	addi	a0,a0,1
20001502:	6585                	lui	a1,0x1
20001504:	82058593          	addi	a1,a1,-2016 # 820 <__DYNAMIC+0x820>
20001508:	958a                	add	a1,a1,sp
2000150a:	00a59023          	sh	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:277
			}
			if ((results[i].execs & ID_STATE) &&
2000150e:	6585                	lui	a1,0x1
20001510:	80058593          	addi	a1,a1,-2048 # 800 <__DYNAMIC+0x800>
20001514:	958a                	add	a1,a1,sp
20001516:	418c                	lw	a1,0(a1)
20001518:	8991                	andi	a1,a1,4
2000151a:	cd85                	beqz	a1,20001552 <main+0x426>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:278
				(results[i].crcstate!=state_known_crc[known_id])) {
2000151c:	6585                	lui	a1,0x1
2000151e:	81e58593          	addi	a1,a1,-2018 # 81e <__DYNAMIC+0x81e>
20001522:	958a                	add	a1,a1,sp
20001524:	0005d603          	lhu	a2,0(a1)
20001528:	00095683          	lhu	a3,0(s2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:277
			if ((results[i].execs & ID_STATE) &&
2000152c:	02d60363          	beq	a2,a3,20001552 <main+0x426>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:279
				ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",i,results[i].crcstate,state_known_crc[known_id]);
20001530:	8556                	mv	a0,s5
20001532:	85a2                	mv	a1,s0
20001534:	d81fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:280
				results[i].err++;
20001538:	6505                	lui	a0,0x1
2000153a:	82050513          	addi	a0,a0,-2016 # 820 <__DYNAMIC+0x820>
2000153e:	950a                	add	a0,a0,sp
20001540:	00051503          	lh	a0,0(a0)
20001544:	0505                	addi	a0,a0,1
20001546:	6585                	lui	a1,0x1
20001548:	82058593          	addi	a1,a1,-2016 # 820 <__DYNAMIC+0x820>
2000154c:	958a                	add	a1,a1,sp
2000154e:	00a59023          	sh	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:265
		for (i=0 ; i<default_num_contexts; i++) {
20001552:	000c2583          	lw	a1,0(s8)
20001556:	0485                	addi	s1,s1,1
20001558:	0134f433          	and	s0,s1,s3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:282
			}
			total_errors+=results[i].err;
2000155c:	9caa                	add	s9,s9,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:265
		for (i=0 ; i<default_num_contexts; i++) {
2000155e:	f0b46ae3          	bltu	s0,a1,20001472 <main+0x346>
20001562:	a011                	j	20001566 <main+0x43a>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:261
			total_errors=-1;
20001564:	4c81                	li	s9,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:285
		}
	}
	total_errors+=check_data_types();
20001566:	289000ef          	jal	ra,20001fee <check_data_types>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:287
	/* and report results */
	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
2000156a:	7f812583          	lw	a1,2040(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:285
	total_errors+=check_data_types();
2000156e:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:287
	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
20001570:	00002517          	auipc	a0,0x2
20001574:	11650513          	addi	a0,a0,278 # 20003686 <__clz_tab+0x35a>
20001578:	d3dfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:288
	ee_printf("Total ticks      : %lu\n", (long unsigned) total_time);
2000157c:	00002517          	auipc	a0,0x2
20001580:	12250513          	addi	a0,a0,290 # 2000369e <__clz_tab+0x372>
20001584:	85d2                	mv	a1,s4
20001586:	d2ffe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:294
#if HAS_FLOAT
	ee_printf("Total time (secs): %f\n",time_in_secs(total_time));
	if (time_in_secs(total_time) > 0)
		ee_printf("Iterations/Sec   : %f\n",default_num_contexts*results[0].iterations/time_in_secs(total_time));
#else 
	ee_printf("Total time (secs): %d\n",time_in_secs(total_time));
2000158a:	8552                	mv	a0,s4
2000158c:	c33fe0ef          	jal	ra,200001be <time_in_secs>
20001590:	85aa                	mv	a1,a0
20001592:	00002517          	auipc	a0,0x2
20001596:	12450513          	addi	a0,a0,292 # 200036b6 <__clz_tab+0x38a>
2000159a:	d1bfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:295
	if (time_in_secs(total_time) > 0)
2000159e:	8552                	mv	a0,s4
200015a0:	c1ffe0ef          	jal	ra,200001be <time_in_secs>
200015a4:	c115                	beqz	a0,200015c8 <main+0x49c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:296
		ee_printf("Iterations/Sec   : %d\n",default_num_contexts*results[0].iterations/time_in_secs(total_time));
200015a6:	000c2503          	lw	a0,0(s8)
200015aa:	7fc12583          	lw	a1,2044(sp)
200015ae:	02a584b3          	mul	s1,a1,a0
200015b2:	8552                	mv	a0,s4
200015b4:	c0bfe0ef          	jal	ra,200001be <time_in_secs>
200015b8:	02a4d5b3          	divu	a1,s1,a0
200015bc:	00002517          	auipc	a0,0x2
200015c0:	11150513          	addi	a0,a0,273 # 200036cd <__clz_tab+0x3a1>
200015c4:	cf1fe0ef          	jal	ra,200002b4 <ee_printf>
200015c8:	008c8ab3          	add	s5,s9,s0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:298
#endif
	if (time_in_secs(total_time) < 10) {
200015cc:	8552                	mv	a0,s4
200015ce:	bf1fe0ef          	jal	ra,200001be <time_in_secs>
200015d2:	45a5                	li	a1,9
200015d4:	00a5e963          	bltu	a1,a0,200015e6 <main+0x4ba>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:299
		ee_printf("ERROR! Must execute for at least 10 secs for a valid result!\n");
200015d8:	00002517          	auipc	a0,0x2
200015dc:	10c50513          	addi	a0,a0,268 # 200036e4 <__clz_tab+0x3b8>
200015e0:	cd5fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:300
		total_errors++;
200015e4:	0a85                	addi	s5,s5,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:303
	}

	ee_printf("Iterations       : %lu\n", (long unsigned) default_num_contexts*results[0].iterations);
200015e6:	000c2503          	lw	a0,0(s8)
200015ea:	7fc12583          	lw	a1,2044(sp)
200015ee:	02a585b3          	mul	a1,a1,a0
200015f2:	00002517          	auipc	a0,0x2
200015f6:	13050513          	addi	a0,a0,304 # 20003722 <__clz_tab+0x3f6>
200015fa:	cbbfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:304
	ee_printf("Compiler version : %s\n",COMPILER_VERSION);
200015fe:	00002517          	auipc	a0,0x2
20001602:	13c50513          	addi	a0,a0,316 # 2000373a <__clz_tab+0x40e>
20001606:	00002597          	auipc	a1,0x2
2000160a:	14b58593          	addi	a1,a1,331 # 20003751 <__clz_tab+0x425>
2000160e:	ca7fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:305
	ee_printf("Compiler flags   : %s\n",COMPILER_FLAGS);
20001612:	00002517          	auipc	a0,0x2
20001616:	1ac50513          	addi	a0,a0,428 # 200037be <__clz_tab+0x492>
2000161a:	00002597          	auipc	a1,0x2
2000161e:	53a58593          	addi	a1,a1,1338 # 20003b54 <__clz_tab+0x828>
20001622:	c93fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:309
#if (MULTITHREAD>1)
	ee_printf("Parallel %s : %d\n",PARALLEL_METHOD,default_num_contexts);
#endif
	ee_printf("Memory location  : %s\n",MEM_LOCATION);
20001626:	00002517          	auipc	a0,0x2
2000162a:	1af50513          	addi	a0,a0,431 # 200037d5 <__clz_tab+0x4a9>
2000162e:	00002597          	auipc	a1,0x2
20001632:	1be58593          	addi	a1,a1,446 # 200037ec <__clz_tab+0x4c0>
20001636:	c7ffe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:311
	/* output for verification */
	ee_printf("seedcrc          : 0x%04x\n",seedcrc);
2000163a:	00002517          	auipc	a0,0x2
2000163e:	1b850513          	addi	a0,a0,440 # 200037f2 <__clz_tab+0x4c6>
20001642:	45b2                	lw	a1,12(sp)
20001644:	c71fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:312
	if (results[0].execs & ID_LIST)
20001648:	6505                	lui	a0,0x1
2000164a:	80050513          	addi	a0,a0,-2048 # 800 <__DYNAMIC+0x800>
2000164e:	950a                	add	a0,a0,sp
20001650:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:313
		for (i=0 ; i<default_num_contexts; i++) 
20001652:	000c2503          	lw	a0,0(s8)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:312
	if (results[0].execs & ID_LIST)
20001656:	0015f613          	andi	a2,a1,1
2000165a:	c221                	beqz	a2,2000169a <main+0x56e>
2000165c:	cd1d                	beqz	a0,2000169a <main+0x56e>
2000165e:	4581                	li	a1,0
20001660:	4481                	li	s1,0
20001662:	00002917          	auipc	s2,0x2
20001666:	1ab90913          	addi	s2,s2,427 # 2000380d <__clz_tab+0x4e1>
2000166a:	6541                	lui	a0,0x10
2000166c:	fff50413          	addi	s0,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:314
			ee_printf("[%d]crclist       : 0x%04x\n",i,results[i].crclist);
20001670:	6505                	lui	a0,0x1
20001672:	81a50513          	addi	a0,a0,-2022 # 81a <__DYNAMIC+0x81a>
20001676:	950a                	add	a0,a0,sp
20001678:	00055603          	lhu	a2,0(a0)
2000167c:	854a                	mv	a0,s2
2000167e:	c37fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:313
		for (i=0 ; i<default_num_contexts; i++) 
20001682:	000c2503          	lw	a0,0(s8)
20001686:	0485                	addi	s1,s1,1
20001688:	0084f5b3          	and	a1,s1,s0
2000168c:	fea5e2e3          	bltu	a1,a0,20001670 <main+0x544>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:315
	if (results[0].execs & ID_MATRIX) 
20001690:	6585                	lui	a1,0x1
20001692:	80058593          	addi	a1,a1,-2048 # 800 <__DYNAMIC+0x800>
20001696:	958a                	add	a1,a1,sp
20001698:	418c                	lw	a1,0(a1)
2000169a:	0025f613          	andi	a2,a1,2
2000169e:	c221                	beqz	a2,200016de <main+0x5b2>
200016a0:	cd1d                	beqz	a0,200016de <main+0x5b2>
200016a2:	4581                	li	a1,0
200016a4:	4481                	li	s1,0
200016a6:	00002917          	auipc	s2,0x2
200016aa:	18390913          	addi	s2,s2,387 # 20003829 <__clz_tab+0x4fd>
200016ae:	6541                	lui	a0,0x10
200016b0:	fff50413          	addi	s0,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:317
		for (i=0 ; i<default_num_contexts; i++) 
			ee_printf("[%d]crcmatrix     : 0x%04x\n",i,results[i].crcmatrix);
200016b4:	6505                	lui	a0,0x1
200016b6:	81c50513          	addi	a0,a0,-2020 # 81c <__DYNAMIC+0x81c>
200016ba:	950a                	add	a0,a0,sp
200016bc:	00055603          	lhu	a2,0(a0)
200016c0:	854a                	mv	a0,s2
200016c2:	bf3fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:316
		for (i=0 ; i<default_num_contexts; i++) 
200016c6:	000c2503          	lw	a0,0(s8)
200016ca:	0485                	addi	s1,s1,1
200016cc:	0084f5b3          	and	a1,s1,s0
200016d0:	fea5e2e3          	bltu	a1,a0,200016b4 <main+0x588>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:318
	if (results[0].execs & ID_STATE)
200016d4:	6585                	lui	a1,0x1
200016d6:	80058593          	addi	a1,a1,-2048 # 800 <__DYNAMIC+0x800>
200016da:	958a                	add	a1,a1,sp
200016dc:	418c                	lw	a1,0(a1)
200016de:	8991                	andi	a1,a1,4
200016e0:	c99d                	beqz	a1,20001716 <main+0x5ea>
200016e2:	c915                	beqz	a0,20001716 <main+0x5ea>
200016e4:	4581                	li	a1,0
200016e6:	4481                	li	s1,0
200016e8:	00002917          	auipc	s2,0x2
200016ec:	15d90913          	addi	s2,s2,349 # 20003845 <__clz_tab+0x519>
200016f0:	6541                	lui	a0,0x10
200016f2:	fff50413          	addi	s0,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:320
		for (i=0 ; i<default_num_contexts; i++) 
			ee_printf("[%d]crcstate      : 0x%04x\n",i,results[i].crcstate);
200016f6:	6505                	lui	a0,0x1
200016f8:	81e50513          	addi	a0,a0,-2018 # 81e <__DYNAMIC+0x81e>
200016fc:	950a                	add	a0,a0,sp
200016fe:	00055603          	lhu	a2,0(a0)
20001702:	854a                	mv	a0,s2
20001704:	bb1fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:319
		for (i=0 ; i<default_num_contexts; i++) 
20001708:	000c2503          	lw	a0,0(s8)
2000170c:	0485                	addi	s1,s1,1
2000170e:	0084f5b3          	and	a1,s1,s0
20001712:	fea5e2e3          	bltu	a1,a0,200016f6 <main+0x5ca>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:321
	for (i=0 ; i<default_num_contexts; i++) 
20001716:	c915                	beqz	a0,2000174a <main+0x61e>
20001718:	4581                	li	a1,0
2000171a:	4481                	li	s1,0
2000171c:	00002917          	auipc	s2,0x2
20001720:	14590913          	addi	s2,s2,325 # 20003861 <__clz_tab+0x535>
20001724:	6541                	lui	a0,0x10
20001726:	fff50413          	addi	s0,a0,-1 # ffff <_stack_size+0xdfff>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:322
		ee_printf("[%d]crcfinal      : 0x%04x\n",i,results[i].crc);
2000172a:	6505                	lui	a0,0x1
2000172c:	81850513          	addi	a0,a0,-2024 # 818 <__DYNAMIC+0x818>
20001730:	950a                	add	a0,a0,sp
20001732:	00055603          	lhu	a2,0(a0)
20001736:	854a                	mv	a0,s2
20001738:	b7dfe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:321
	for (i=0 ; i<default_num_contexts; i++) 
2000173c:	000c2503          	lw	a0,0(s8)
20001740:	0485                	addi	s1,s1,1
20001742:	0084f5b3          	and	a1,s1,s0
20001746:	fea5e2e3          	bltu	a1,a0,2000172a <main+0x5fe>
2000174a:	6541                	lui	a0,0x10
2000174c:	157d                	addi	a0,a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:323
	if (total_errors==0) {
2000174e:	010a9593          	slli	a1,s5,0x10
20001752:	4105d613          	srai	a2,a1,0x10
20001756:	00aaf5b3          	and	a1,s5,a0
2000175a:	00c04763          	bgtz	a2,20001768 <main+0x63c>
2000175e:	00002517          	auipc	a0,0x2
20001762:	17950513          	addi	a0,a0,377 # 200038d7 <__clz_tab+0x5ab>
20001766:	a029                	j	20001770 <main+0x644>
20001768:	00002517          	auipc	a0,0x2
2000176c:	15e50513          	addi	a0,a0,350 # 200038c6 <__clz_tab+0x59a>
20001770:	6605                	lui	a2,0x1
20001772:	82260613          	addi	a2,a2,-2014 # 822 <__DYNAMIC+0x822>
20001776:	960a                	add	a2,a2,sp
20001778:	8432                	mv	s0,a2
2000177a:	e589                	bnez	a1,20001784 <main+0x658>
2000177c:	00002517          	auipc	a0,0x2
20001780:	10150513          	addi	a0,a0,257 # 2000387d <__clz_tab+0x551>
20001784:	b31fe0ef          	jal	ra,200002b4 <ee_printf>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:351
#if (MEM_METHOD==MEM_MALLOC)
	for (i=0 ; i<MULTITHREAD; i++) 
		portable_free(results[i].memblock[0]);
#endif
	/* And last call any target specific code for finalizing */
	portable_fini(&(results[0].port));
20001788:	8522                	mv	a0,s0
2000178a:	b1bfe0ef          	jal	ra,200002a4 <portable_fini>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_main.c:353

	return MAIN_RETURN_VAL;	
2000178e:	4501                	li	a0,0
20001790:	6165                	addi	sp,sp,112
20001792:	7bc12d83          	lw	s11,1980(sp)
20001796:	7c012d03          	lw	s10,1984(sp)
2000179a:	7c412c83          	lw	s9,1988(sp)
2000179e:	7c812c03          	lw	s8,1992(sp)
200017a2:	7cc12b83          	lw	s7,1996(sp)
200017a6:	7d012b03          	lw	s6,2000(sp)
200017aa:	7d412a83          	lw	s5,2004(sp)
200017ae:	7d812a03          	lw	s4,2008(sp)
200017b2:	7dc12983          	lw	s3,2012(sp)
200017b6:	7e012903          	lw	s2,2016(sp)
200017ba:	7e412483          	lw	s1,2020(sp)
200017be:	7e812403          	lw	s0,2024(sp)
200017c2:	7ec12083          	lw	ra,2028(sp)
200017c6:	7f010113          	addi	sp,sp,2032
200017ca:	8082                	ret

200017cc <core_bench_matrix>:
core_bench_matrix():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:81
	Benchmark function

	Iterate <matrix_test> N times, 
	changing the matrix values slightly by a constant amount each time.
*/
ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
200017cc:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:82
	ee_u32 N=p->N;
200017ce:	c606                	sw	ra,12(sp)
200017d0:	c422                	sw	s0,8(sp)
200017d2:	c226                	sw	s1,4(sp)
200017d4:	00052803          	lw	a6,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:83
	MATRES *C=p->C;
200017d8:	4558                	lw	a4,12(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:84
	MATDAT *A=p->A;
200017da:	415c                	lw	a5,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:85
	MATDAT *B=p->B;
200017dc:	4514                	lw	a3,8(a0)
200017de:	84b2                	mv	s1,a2
200017e0:	842e                	mv	s0,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:88
	MATDAT val=(MATDAT)seed;

	crc=crc16(matrix_test(N,C,A,B,val),crc);
200017e2:	8542                	mv	a0,a6
200017e4:	85ba                	mv	a1,a4
200017e6:	863e                	mv	a2,a5
200017e8:	8722                	mv	a4,s0
200017ea:	2801                	jal	200017fa <matrix_test>
200017ec:	85a6                	mv	a1,s1
200017ee:	4492                	lw	s1,4(sp)
200017f0:	4422                	lw	s0,8(sp)
200017f2:	40b2                	lw	ra,12(sp)
200017f4:	0141                	addi	sp,sp,16
200017f6:	7f00006f          	j	20001fe6 <crc16>

200017fa <matrix_test>:
matrix_test():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:117
	4 - Multiply a matrix by a matrix.
	5 - Add a constant value to all elements of a matrix.

	After the last step, matrix A is back to original contents.
*/
ee_s16 matrix_test(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B, MATDAT val) {
200017fa:	7179                	addi	sp,sp,-48
200017fc:	d606                	sw	ra,44(sp)
200017fe:	d422                	sw	s0,40(sp)
20001800:	d226                	sw	s1,36(sp)
20001802:	d04a                	sw	s2,32(sp)
20001804:	ce4e                	sw	s3,28(sp)
20001806:	cc52                	sw	s4,24(sp)
20001808:	ca56                	sw	s5,20(sp)
2000180a:	c85a                	sw	s6,16(sp)
2000180c:	c65e                	sw	s7,12(sp)
2000180e:	c462                	sw	s8,8(sp)
20001810:	843a                	mv	s0,a4
20001812:	8ab6                	mv	s5,a3
20001814:	8932                	mv	s2,a2
20001816:	89ae                	mv	s3,a1
20001818:	8c2a                	mv	s8,a0
2000181a:	757d                	lui	a0,0xfffff
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:119
	ee_u16 crc=0;
	MATDAT clipval=matrix_big(val);
2000181c:	00a76a33          	or	s4,a4,a0
20001820:	001c1b93          	slli	s7,s8,0x1
matrix_add_const():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
/* Function: matrix_add_const
	Add a constant value to all elements of a matrix.
*/
void matrix_add_const(ee_u32 N, MATDAT *A, MATDAT val) {
	ee_u32 i,j;
	for (i=0; i<N; i++) {
20001824:	040c0863          	beqz	s8,20001874 <matrix_test+0x7a>
20001828:	4501                	li	a0,0
2000182a:	85ca                	mv	a1,s2
2000182c:	8662                	mv	a2,s8
2000182e:	86ae                	mv	a3,a1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:256
		for (j=0; j<N; j++) {
			A[i*N+j] += val;
20001830:	00069703          	lh	a4,0(a3)
20001834:	9722                	add	a4,a4,s0
20001836:	00e69023          	sh	a4,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
2000183a:	167d                	addi	a2,a2,-1
2000183c:	0689                	addi	a3,a3,2
2000183e:	fa6d                	bnez	a2,20001830 <matrix_test+0x36>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
20001840:	0505                	addi	a0,a0,1
20001842:	95de                	add	a1,a1,s7
20001844:	ff8514e3          	bne	a0,s8,2000182c <matrix_test+0x32>
20001848:	4501                	li	a0,0
matrix_mul_const():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
2000184a:	002c1813          	slli	a6,s8,0x2
2000184e:	864a                	mv	a2,s2
20001850:	84ce                	mv	s1,s3
20001852:	8762                	mv	a4,s8
20001854:	87b2                	mv	a5,a2
20001856:	86a6                	mv	a3,s1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:244
			C[i*N+j]=(MATRES)A[i*N+j] * (MATRES)val;
20001858:	00079583          	lh	a1,0(a5)
2000185c:	028585b3          	mul	a1,a1,s0
20001860:	c28c                	sw	a1,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:243
		for (j=0; j<N; j++) {
20001862:	0691                	addi	a3,a3,4
20001864:	177d                	addi	a4,a4,-1
20001866:	0789                	addi	a5,a5,2
20001868:	fb65                	bnez	a4,20001858 <matrix_test+0x5e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
2000186a:	0505                	addi	a0,a0,1
2000186c:	94c2                	add	s1,s1,a6
2000186e:	965e                	add	a2,a2,s7
20001870:	ff8511e3          	bne	a0,s8,20001852 <matrix_test+0x58>
matrix_test():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:126
	crc=crc16(matrix_sum(N,C,clipval),crc);
20001874:	8562                	mv	a0,s8
20001876:	85ce                	mv	a1,s3
20001878:	8652                	mv	a2,s4
2000187a:	2a21                	jal	20001992 <matrix_sum>
2000187c:	4581                	li	a1,0
2000187e:	27a5                	jal	20001fe6 <crc16>
20001880:	8b2a                	mv	s6,a0
matrix_mul_vect():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:267
	Multiply a matrix by a vector.
	This is common in many simple filters (e.g. fir where a vector of coefficients is applied to the matrix.)
*/
void matrix_mul_vect(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
	ee_u32 i,j;
	for (i=0; i<N; i++) {
20001882:	020c0f63          	beqz	s8,200018c0 <matrix_test+0xc6>
20001886:	4501                	li	a0,0
20001888:	88ca                	mv	a7,s2
2000188a:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:268
		C[i]=0;
2000188c:	00251593          	slli	a1,a0,0x2
20001890:	00b98833          	add	a6,s3,a1
20001894:	00082023          	sw	zero,0(a6)
20001898:	8756                	mv	a4,s5
2000189a:	87e2                	mv	a5,s8
2000189c:	85c6                	mv	a1,a7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:270
		for (j=0; j<N; j++) {
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
2000189e:	00059683          	lh	a3,0(a1)
200018a2:	00071483          	lh	s1,0(a4)
200018a6:	02d486b3          	mul	a3,s1,a3
200018aa:	9636                	add	a2,a2,a3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:269
		for (j=0; j<N; j++) {
200018ac:	0589                	addi	a1,a1,2
200018ae:	17fd                	addi	a5,a5,-1
200018b0:	0709                	addi	a4,a4,2
200018b2:	f7f5                	bnez	a5,2000189e <matrix_test+0xa4>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:270
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
200018b4:	00c82023          	sw	a2,0(a6)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:267
	for (i=0; i<N; i++) {
200018b8:	0505                	addi	a0,a0,1
200018ba:	98de                	add	a7,a7,s7
200018bc:	fd8517e3          	bne	a0,s8,2000188a <matrix_test+0x90>
matrix_test():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:131
	crc=crc16(matrix_sum(N,C,clipval),crc);
200018c0:	8562                	mv	a0,s8
200018c2:	85ce                	mv	a1,s3
200018c4:	8652                	mv	a2,s4
200018c6:	20f1                	jal	20001992 <matrix_sum>
200018c8:	85da                	mv	a1,s6
200018ca:	2f31                	jal	20001fe6 <crc16>
200018cc:	8b2a                	mv	s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:135
	matrix_mul_matrix(N,C,A,B);
200018ce:	8562                	mv	a0,s8
200018d0:	85ce                	mv	a1,s3
200018d2:	864a                	mv	a2,s2
200018d4:	86d6                	mv	a3,s5
200018d6:	2291                	jal	20001a1a <matrix_mul_matrix>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:136
	crc=crc16(matrix_sum(N,C,clipval),crc);
200018d8:	8562                	mv	a0,s8
200018da:	85ce                	mv	a1,s3
200018dc:	8652                	mv	a2,s4
200018de:	2855                	jal	20001992 <matrix_sum>
200018e0:	85da                	mv	a1,s6
200018e2:	2711                	jal	20001fe6 <crc16>
200018e4:	8b2a                	mv	s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:140
	matrix_mul_matrix_bitextract(N,C,A,B);
200018e6:	8562                	mv	a0,s8
200018e8:	85ce                	mv	a1,s3
200018ea:	864a                	mv	a2,s2
200018ec:	86d6                	mv	a3,s5
200018ee:	2259                	jal	20001a74 <matrix_mul_matrix_bitextract>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:141
	crc=crc16(matrix_sum(N,C,clipval),crc);
200018f0:	8562                	mv	a0,s8
200018f2:	85ce                	mv	a1,s3
200018f4:	8652                	mv	a2,s4
200018f6:	2871                	jal	20001992 <matrix_sum>
200018f8:	85da                	mv	a1,s6
200018fa:	25f5                	jal	20001fe6 <crc16>
matrix_add_const():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
200018fc:	020c0163          	beqz	s8,2000191e <matrix_test+0x124>
20001900:	4581                	li	a1,0
20001902:	8662                	mv	a2,s8
20001904:	86ca                	mv	a3,s2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:256
			A[i*N+j] += val;
20001906:	00069703          	lh	a4,0(a3)
2000190a:	8f01                	sub	a4,a4,s0
2000190c:	00e69023          	sh	a4,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
20001910:	167d                	addi	a2,a2,-1
20001912:	0689                	addi	a3,a3,2
20001914:	fa6d                	bnez	a2,20001906 <matrix_test+0x10c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
20001916:	0585                	addi	a1,a1,1
20001918:	995e                	add	s2,s2,s7
2000191a:	ff8594e3          	bne	a1,s8,20001902 <matrix_test+0x108>
matrix_test():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:147
	return crc;
2000191e:	0542                	slli	a0,a0,0x10
20001920:	8541                	srai	a0,a0,0x10
20001922:	4c22                	lw	s8,8(sp)
20001924:	4bb2                	lw	s7,12(sp)
20001926:	4b42                	lw	s6,16(sp)
20001928:	4ad2                	lw	s5,20(sp)
2000192a:	4a62                	lw	s4,24(sp)
2000192c:	49f2                	lw	s3,28(sp)
2000192e:	5902                	lw	s2,32(sp)
20001930:	5492                	lw	s1,36(sp)
20001932:	5422                	lw	s0,40(sp)
20001934:	50b2                	lw	ra,44(sp)
20001936:	6145                	addi	sp,sp,48
20001938:	8082                	ret

2000193a <matrix_add_const>:
matrix_add_const():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
2000193a:	c115                	beqz	a0,2000195e <matrix_add_const+0x24>
2000193c:	4881                	li	a7,0
2000193e:	00151813          	slli	a6,a0,0x1
20001942:	87ae                	mv	a5,a1
20001944:	872a                	mv	a4,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:256
			A[i*N+j] += val;
20001946:	00079683          	lh	a3,0(a5)
2000194a:	96b2                	add	a3,a3,a2
2000194c:	00d79023          	sh	a3,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:255
		for (j=0; j<N; j++) {
20001950:	177d                	addi	a4,a4,-1
20001952:	0789                	addi	a5,a5,2
20001954:	fb6d                	bnez	a4,20001946 <matrix_add_const+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:254
	for (i=0; i<N; i++) {
20001956:	0885                	addi	a7,a7,1
20001958:	95c2                	add	a1,a1,a6
2000195a:	fea894e3          	bne	a7,a0,20001942 <matrix_add_const+0x8>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:259
}
2000195e:	8082                	ret

20001960 <matrix_mul_const>:
matrix_mul_const():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
20001960:	c905                	beqz	a0,20001990 <matrix_mul_const+0x30>
20001962:	4281                	li	t0,0
20001964:	00251813          	slli	a6,a0,0x2
20001968:	00151893          	slli	a7,a0,0x1
2000196c:	8332                	mv	t1,a2
2000196e:	83ae                	mv	t2,a1
20001970:	87aa                	mv	a5,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:244
			C[i*N+j]=(MATRES)A[i*N+j] * (MATRES)val;
20001972:	00031703          	lh	a4,0(t1)
20001976:	02d70733          	mul	a4,a4,a3
2000197a:	00e3a023          	sw	a4,0(t2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:243
		for (j=0; j<N; j++) {
2000197e:	17fd                	addi	a5,a5,-1
20001980:	0391                	addi	t2,t2,4
20001982:	0309                	addi	t1,t1,2
20001984:	f7fd                	bnez	a5,20001972 <matrix_mul_const+0x12>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:242
	for (i=0; i<N; i++) {
20001986:	0285                	addi	t0,t0,1
20001988:	95c2                	add	a1,a1,a6
2000198a:	9646                	add	a2,a2,a7
2000198c:	fea290e3          	bne	t0,a0,2000196c <matrix_mul_const+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:247
}
20001990:	8082                	ret

20001992 <matrix_sum>:
matrix_sum():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
20001992:	cd1d                	beqz	a0,200019d0 <matrix_sum+0x3e>
20001994:	4881                	li	a7,0
20001996:	4381                	li	t2,0
20001998:	4301                	li	t1,0
2000199a:	4281                	li	t0,0
2000199c:	00251813          	slli	a6,a0,0x2
200019a0:	87ae                	mv	a5,a1
200019a2:	872a                	mv	a4,a0
200019a4:	869a                	mv	a3,t1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:222
			cur=C[i*N+j];
200019a6:	0007a303          	lw	t1,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:223
			tmp+=cur;
200019aa:	00530eb3          	add	t4,t1,t0
200019ae:	4e29                	li	t3,10
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:224
			if (tmp>clipval) {
200019b0:	4281                	li	t0,0
200019b2:	01d64563          	blt	a2,t4,200019bc <matrix_sum+0x2a>
200019b6:	0066ae33          	slt	t3,a3,t1
200019ba:	82f6                	mv	t0,t4
200019bc:	93f2                	add	t2,t2,t3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:221
		for (j=0; j<N; j++) {
200019be:	177d                	addi	a4,a4,-1
200019c0:	0791                	addi	a5,a5,4
200019c2:	869a                	mv	a3,t1
200019c4:	f36d                	bnez	a4,200019a6 <matrix_sum+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:220
	for (i=0; i<N; i++) {
200019c6:	0885                	addi	a7,a7,1
200019c8:	95c2                	add	a1,a1,a6
200019ca:	fca89be3          	bne	a7,a0,200019a0 <matrix_sum+0xe>
200019ce:	a011                	j	200019d2 <matrix_sum+0x40>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:218
	ee_s16 ret=0;
200019d0:	4381                	li	t2,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:233
	return ret;
200019d2:	01039513          	slli	a0,t2,0x10
200019d6:	8541                	srai	a0,a0,0x10
200019d8:	8082                	ret

200019da <matrix_mul_vect>:
matrix_mul_vect():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:267
	for (i=0; i<N; i++) {
200019da:	cd1d                	beqz	a0,20001a18 <matrix_mul_vect+0x3e>
200019dc:	4281                	li	t0,0
200019de:	00151813          	slli	a6,a0,0x1
200019e2:	4301                	li	t1,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:268
		C[i]=0;
200019e4:	00229713          	slli	a4,t0,0x2
200019e8:	00e588b3          	add	a7,a1,a4
200019ec:	0008a023          	sw	zero,0(a7)
200019f0:	83b2                	mv	t2,a2
200019f2:	8eb6                	mv	t4,a3
200019f4:	872a                	mv	a4,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:270
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
200019f6:	00039e03          	lh	t3,0(t2)
200019fa:	000e9783          	lh	a5,0(t4)
200019fe:	03c787b3          	mul	a5,a5,t3
20001a02:	933e                	add	t1,t1,a5
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:269
		for (j=0; j<N; j++) {
20001a04:	177d                	addi	a4,a4,-1
20001a06:	0e89                	addi	t4,t4,2
20001a08:	0389                	addi	t2,t2,2
20001a0a:	f775                	bnez	a4,200019f6 <matrix_mul_vect+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:270
			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
20001a0c:	0068a023          	sw	t1,0(a7)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:267
	for (i=0; i<N; i++) {
20001a10:	0285                	addi	t0,t0,1
20001a12:	9642                	add	a2,a2,a6
20001a14:	fca297e3          	bne	t0,a0,200019e2 <matrix_mul_vect+0x8>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:273
		}
	}
}
20001a18:	8082                	ret

20001a1a <matrix_mul_matrix>:
matrix_mul_matrix():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:279

/* Function: matrix_mul_matrix
	Multiply a matrix by a matrix.
	Basic code is used in many algorithms, mostly with minor changes such as scaling.
*/
void matrix_mul_matrix(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
20001a1a:	1141                	addi	sp,sp,-16
20001a1c:	c622                	sw	s0,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:281
	ee_u32 i,j,k;
	for (i=0; i<N; i++) {
20001a1e:	c921                	beqz	a0,20001a6e <matrix_mul_matrix+0x54>
20001a20:	4801                	li	a6,0
20001a22:	00151e13          	slli	t3,a0,0x1
20001a26:	4301                	li	t1,0
20001a28:	02a808b3          	mul	a7,a6,a0
20001a2c:	82b6                	mv	t0,a3
20001a2e:	4e81                	li	t4,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:283
		for (j=0; j<N; j++) {
			C[i*N+j]=0;
20001a30:	01130733          	add	a4,t1,a7
20001a34:	070a                	slli	a4,a4,0x2
20001a36:	00e583b3          	add	t2,a1,a4
20001a3a:	0003a023          	sw	zero,0(t2)
20001a3e:	8f16                	mv	t5,t0
20001a40:	8732                	mv	a4,a2
20001a42:	87aa                	mv	a5,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:286
			for(k=0;k<N;k++)
			{
				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20001a44:	00071f83          	lh	t6,0(a4)
20001a48:	000f1403          	lh	s0,0(t5)
20001a4c:	03f40433          	mul	s0,s0,t6
20001a50:	9ea2                	add	t4,t4,s0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:284
			for(k=0;k<N;k++)
20001a52:	17fd                	addi	a5,a5,-1
20001a54:	0709                	addi	a4,a4,2
20001a56:	9f72                	add	t5,t5,t3
20001a58:	f7f5                	bnez	a5,20001a44 <matrix_mul_matrix+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:286
				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20001a5a:	01d3a023          	sw	t4,0(t2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:282
		for (j=0; j<N; j++) {
20001a5e:	0305                	addi	t1,t1,1
20001a60:	0289                	addi	t0,t0,2
20001a62:	fca316e3          	bne	t1,a0,20001a2e <matrix_mul_matrix+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:281
	for (i=0; i<N; i++) {
20001a66:	0805                	addi	a6,a6,1
20001a68:	9672                	add	a2,a2,t3
20001a6a:	faa81ee3          	bne	a6,a0,20001a26 <matrix_mul_matrix+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:290
			}
		}
	}
}
20001a6e:	4432                	lw	s0,12(sp)
20001a70:	0141                	addi	sp,sp,16
20001a72:	8082                	ret

20001a74 <matrix_mul_matrix_bitextract>:
matrix_mul_matrix_bitextract():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:296

/* Function: matrix_mul_matrix_bitextract
	Multiply a matrix by a matrix, and extract some bits from the result.
	Basic code is used in many algorithms, mostly with minor changes such as scaling.
*/
void matrix_mul_matrix_bitextract(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
20001a74:	1141                	addi	sp,sp,-16
20001a76:	c622                	sw	s0,12(sp)
20001a78:	c426                	sw	s1,8(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:298
	ee_u32 i,j,k;
	for (i=0; i<N; i++) {
20001a7a:	c135                	beqz	a0,20001ade <matrix_mul_matrix_bitextract+0x6a>
20001a7c:	4801                	li	a6,0
20001a7e:	00151e13          	slli	t3,a0,0x1
20001a82:	4301                	li	t1,0
20001a84:	02a808b3          	mul	a7,a6,a0
20001a88:	82b6                	mv	t0,a3
20001a8a:	4e81                	li	t4,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:300
		for (j=0; j<N; j++) {
			C[i*N+j]=0;
20001a8c:	01130733          	add	a4,t1,a7
20001a90:	070a                	slli	a4,a4,0x2
20001a92:	00e583b3          	add	t2,a1,a4
20001a96:	0003a023          	sw	zero,0(t2)
20001a9a:	8f16                	mv	t5,t0
20001a9c:	8732                	mv	a4,a2
20001a9e:	87aa                	mv	a5,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:303
			for(k=0;k<N;k++)
			{
				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20001aa0:	00071f83          	lh	t6,0(a4)
20001aa4:	000f1403          	lh	s0,0(t5)
20001aa8:	03f40fb3          	mul	t6,s0,t6
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20001aac:	002fd413          	srli	s0,t6,0x2
20001ab0:	00f47493          	andi	s1,s0,15
20001ab4:	005fd413          	srli	s0,t6,0x5
20001ab8:	07f47413          	andi	s0,s0,127
20001abc:	028484b3          	mul	s1,s1,s0
20001ac0:	9ea6                	add	t4,t4,s1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:301
			for(k=0;k<N;k++)
20001ac2:	17fd                	addi	a5,a5,-1
20001ac4:	0709                	addi	a4,a4,2
20001ac6:	9f72                	add	t5,t5,t3
20001ac8:	ffe1                	bnez	a5,20001aa0 <matrix_mul_matrix_bitextract+0x2c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:304
				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20001aca:	01d3a023          	sw	t4,0(t2)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:299
		for (j=0; j<N; j++) {
20001ace:	0305                	addi	t1,t1,1
20001ad0:	0289                	addi	t0,t0,2
20001ad2:	faa31ce3          	bne	t1,a0,20001a8a <matrix_mul_matrix_bitextract+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:298
	for (i=0; i<N; i++) {
20001ad6:	0805                	addi	a6,a6,1
20001ad8:	9672                	add	a2,a2,t3
20001ada:	faa814e3          	bne	a6,a0,20001a82 <matrix_mul_matrix_bitextract+0xe>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:308
			}
		}
	}
}
20001ade:	44a2                	lw	s1,8(sp)
20001ae0:	4432                	lw	s0,12(sp)
20001ae2:	0141                	addi	sp,sp,16
20001ae4:	8082                	ret

20001ae6 <core_init_matrix>:
core_init_matrix():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:165
ee_u32 core_init_matrix(ee_u32 blksize, void *memblk, ee_s32 seed, mat_params *p) {
20001ae6:	1141                	addi	sp,sp,-16
20001ae8:	c622                	sw	s0,12(sp)
20001aea:	c426                	sw	s1,8(sp)
20001aec:	882a                	mv	a6,a0
20001aee:	4f85                	li	t6,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:172
	if (seed==0)
20001af0:	c211                	beqz	a2,20001af4 <core_init_matrix+0xe>
20001af2:	8fb2                	mv	t6,a2
20001af4:	557d                	li	a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:174
	while (j<blksize) {
20001af6:	00080b63          	beqz	a6,20001b0c <core_init_matrix+0x26>
20001afa:	4621                	li	a2,8
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:176
		j=i*i*2*4;		
20001afc:	00250713          	addi	a4,a0,2 # fffff002 <_data_init_start+0xdfffb46a>
20001b00:	02e60733          	mul	a4,a2,a4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:174
	while (j<blksize) {
20001b04:	0505                	addi	a0,a0,1
20001b06:	0621                	addi	a2,a2,8
20001b08:	ff076ae3          	bltu	a4,a6,20001afc <core_init_matrix+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:179
	A=(MATDAT *)align_mem(memblk);
20001b0c:	058d                	addi	a1,a1,3
20001b0e:	ffc5f893          	andi	a7,a1,-4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:180
	B=A+N*N;
20001b12:	02a505b3          	mul	a1,a0,a0
20001b16:	00159e93          	slli	t4,a1,0x1
20001b1a:	01d88833          	add	a6,a7,t4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:182
	for (i=0; i<N; i++) {
20001b1e:	cd29                	beqz	a0,20001b78 <core_init_matrix+0x92>
20001b20:	4301                	li	t1,0
20001b22:	00151293          	slli	t0,a0,0x1
20001b26:	4f05                	li	t5,1
20001b28:	7e41                	lui	t3,0xffff0
20001b2a:	83c6                	mv	t2,a7
20001b2c:	4701                	li	a4,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:183
		for (j=0; j<N; j++) {
20001b2e:	001f1613          	slli	a2,t5,0x1
20001b32:	859e                	mv	a1,t2
20001b34:	00ef04b3          	add	s1,t5,a4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:184
			seed = ( ( order * seed ) % 65536 );
20001b38:	029f87b3          	mul	a5,t6,s1
20001b3c:	41f7d413          	srai	s0,a5,0x1f
20001b40:	8041                	srli	s0,s0,0x10
20001b42:	943e                	add	s0,s0,a5
20001b44:	01c47433          	and	s0,s0,t3
20001b48:	40878fb3          	sub	t6,a5,s0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:186
			val=matrix_clip(val,0);
20001b4c:	01f487b3          	add	a5,s1,t6
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:187
			B[i*N+j] = val;
20001b50:	01d58433          	add	s0,a1,t4
20001b54:	00f41023          	sh	a5,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:189
			val=matrix_clip(val,1);
20001b58:	01f607b3          	add	a5,a2,t6
20001b5c:	0ff7f793          	andi	a5,a5,255
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:190
			A[i*N+j] = val;
20001b60:	00f59023          	sh	a5,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:183
		for (j=0; j<N; j++) {
20001b64:	0705                	addi	a4,a4,1
20001b66:	0589                	addi	a1,a1,2
20001b68:	0609                	addi	a2,a2,2
20001b6a:	fce515e3          	bne	a0,a4,20001b34 <core_init_matrix+0x4e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:182
	for (i=0; i<N; i++) {
20001b6e:	0305                	addi	t1,t1,1
20001b70:	9396                	add	t2,t2,t0
20001b72:	9f3a                	add	t5,t5,a4
20001b74:	faa31ce3          	bne	t1,a0,20001b2c <core_init_matrix+0x46>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:195
	p->A=A;
20001b78:	0116a223          	sw	a7,4(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:196
	p->B=B;
20001b7c:	0106a423          	sw	a6,8(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:197
	p->C=(MATRES *)align_mem(B+N*N);
20001b80:	01d805b3          	add	a1,a6,t4
20001b84:	058d                	addi	a1,a1,3
20001b86:	99f1                	andi	a1,a1,-4
20001b88:	c6cc                	sw	a1,12(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:198
	p->N=N;
20001b8a:	c288                	sw	a0,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_matrix.c:203
	return N;
20001b8c:	44a2                	lw	s1,8(sp)
20001b8e:	4432                	lw	s0,12(sp)
20001b90:	0141                	addi	sp,sp,16
20001b92:	8082                	ret

20001b94 <core_bench_state>:
core_bench_state():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:45

	Go over the input twice, once direct, and once after introducing some corruption. 
*/
ee_u16 core_bench_state(ee_u32 blksize, ee_u8 *memblock, 
		ee_s16 seed1, ee_s16 seed2, ee_s16 step, ee_u16 crc) 
{
20001b94:	7159                	addi	sp,sp,-112
20001b96:	d686                	sw	ra,108(sp)
20001b98:	d4a2                	sw	s0,104(sp)
20001b9a:	d2a6                	sw	s1,100(sp)
20001b9c:	d0ca                	sw	s2,96(sp)
20001b9e:	cece                	sw	s3,92(sp)
20001ba0:	ccd2                	sw	s4,88(sp)
20001ba2:	cad6                	sw	s5,84(sp)
20001ba4:	c8da                	sw	s6,80(sp)
20001ba6:	c6de                	sw	s7,76(sp)
20001ba8:	c4e2                	sw	s8,72(sp)
20001baa:	c2e6                	sw	s9,68(sp)
20001bac:	84be                	mv	s1,a5
20001bae:	8aba                	mv	s5,a4
20001bb0:	8a36                	mv	s4,a3
20001bb2:	8bb2                	mv	s7,a2
20001bb4:	842e                	mv	s0,a1
20001bb6:	8b2a                	mv	s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:48
	ee_u32 final_counts[NUM_CORE_STATES];
	ee_u32 track_counts[NUM_CORE_STATES];
	ee_u8 *p=memblock;
20001bb8:	c02e                	sw	a1,0(sp)
20001bba:	00410913          	addi	s2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:56

#if CORE_DEBUG
	ee_printf("State Bench: %d,%d,%d,%04x\n",seed1,seed2,step,crc);
#endif
	for (i=0; i<NUM_CORE_STATES; i++) {
		final_counts[i]=track_counts[i]=0;
20001bbe:	02000613          	li	a2,32
20001bc2:	854a                	mv	a0,s2
20001bc4:	4581                	li	a1,0
20001bc6:	015000ef          	jal	ra,200023da <memset>
20001bca:	02410993          	addi	s3,sp,36
20001bce:	02000613          	li	a2,32
20001bd2:	854e                	mv	a0,s3
20001bd4:	4581                	li	a1,0
20001bd6:	005000ef          	jal	ra,200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:59
	}
	/* run the state machine over the input */
	while (*p!=0) {
20001bda:	00044503          	lbu	a0,0(s0)
20001bde:	c105                	beqz	a0,20001bfe <core_bench_state+0x6a>
20001be0:	8c0a                	mv	s8,sp
20001be2:	00410c93          	addi	s9,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:60
		enum CORE_STATE fstate=core_state_transition(&p,track_counts);
20001be6:	8562                	mv	a0,s8
20001be8:	85e6                	mv	a1,s9
20001bea:	28c9                	jal	20001cbc <core_state_transition>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:61
		final_counts[fstate]++;
20001bec:	050a                	slli	a0,a0,0x2
20001bee:	954e                	add	a0,a0,s3
20001bf0:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:59
	while (*p!=0) {
20001bf2:	4602                	lw	a2,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:61
		final_counts[fstate]++;
20001bf4:	0585                	addi	a1,a1,1
20001bf6:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:59
	while (*p!=0) {
20001bf8:	00064503          	lbu	a0,0(a2)
20001bfc:	f56d                	bnez	a0,20001be6 <core_bench_state+0x52>
20001bfe:	c022                	sw	s0,0(sp)
20001c00:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:70
	ee_printf("\n");
#else
	}
#endif
	p=memblock;
	while (p < (memblock+blksize)) { /* insert some corruption */
20001c02:	01640cb3          	add	s9,s0,s6
20001c06:	02ab4163          	blt	s6,a0,20001c28 <core_bench_state+0x94>
20001c0a:	02c00513          	li	a0,44
20001c0e:	85a2                	mv	a1,s0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:71
		if (*p!=',')
20001c10:	0005c603          	lbu	a2,0(a1)
20001c14:	00a60663          	beq	a2,a0,20001c20 <core_bench_state+0x8c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:72
			*p^=(ee_u8)seed1;
20001c18:	01764633          	xor	a2,a2,s7
20001c1c:	00c58023          	sb	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:73
		p+=step;
20001c20:	95d6                	add	a1,a1,s5
20001c22:	c02e                	sw	a1,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:70
	while (p < (memblock+blksize)) { /* insert some corruption */
20001c24:	ff95e6e3          	bltu	a1,s9,20001c10 <core_bench_state+0x7c>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:75
	}
	p=memblock;
20001c28:	c022                	sw	s0,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:77
	/* run the state machine over the input again */
	while (*p!=0) {
20001c2a:	00044503          	lbu	a0,0(s0)
20001c2e:	c105                	beqz	a0,20001c4e <core_bench_state+0xba>
20001c30:	8b8a                	mv	s7,sp
20001c32:	00410c13          	addi	s8,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:78
		enum CORE_STATE fstate=core_state_transition(&p,track_counts);
20001c36:	855e                	mv	a0,s7
20001c38:	85e2                	mv	a1,s8
20001c3a:	2049                	jal	20001cbc <core_state_transition>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:79
		final_counts[fstate]++;
20001c3c:	050a                	slli	a0,a0,0x2
20001c3e:	954e                	add	a0,a0,s3
20001c40:	410c                	lw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:77
	while (*p!=0) {
20001c42:	4602                	lw	a2,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:79
		final_counts[fstate]++;
20001c44:	0585                	addi	a1,a1,1
20001c46:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:77
	while (*p!=0) {
20001c48:	00064503          	lbu	a0,0(a2)
20001c4c:	f56d                	bnez	a0,20001c36 <core_bench_state+0xa2>
20001c4e:	4505                	li	a0,1
20001c50:	c022                	sw	s0,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:88
	ee_printf("\n");
#else
	}
#endif
	p=memblock;
	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
20001c52:	02ab4063          	blt	s6,a0,20001c72 <core_bench_state+0xde>
20001c56:	02c00513          	li	a0,44
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:89
		if (*p!=',')
20001c5a:	00044583          	lbu	a1,0(s0)
20001c5e:	00a58663          	beq	a1,a0,20001c6a <core_bench_state+0xd6>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:90
			*p^=(ee_u8)seed2;
20001c62:	0145c5b3          	xor	a1,a1,s4
20001c66:	00b40023          	sb	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:91
		p+=step;
20001c6a:	9456                	add	s0,s0,s5
20001c6c:	c022                	sw	s0,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:88
	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
20001c6e:	ff9466e3          	bltu	s0,s9,20001c5a <core_bench_state+0xc6>
20001c72:	4401                	li	s0,0
20001c74:	6541                	lui	a0,0x10
20001c76:	fff50a13          	addi	s4,a0,-1 # ffff <_stack_size+0xdfff>
20001c7a:	02000a93          	li	s5,32
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:95
	}
	/* end timing */
	for (i=0; i<NUM_CORE_STATES; i++) {
		crc=crcu32(final_counts[i],crc);
20001c7e:	00898533          	add	a0,s3,s0
20001c82:	4108                	lw	a0,0(a0)
20001c84:	0144f5b3          	and	a1,s1,s4
20001c88:	2e35                	jal	20001fc4 <crcu32>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:96
		crc=crcu32(track_counts[i],crc);
20001c8a:	008905b3          	add	a1,s2,s0
20001c8e:	418c                	lw	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:95
		crc=crcu32(final_counts[i],crc);
20001c90:	862a                	mv	a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:96
		crc=crcu32(track_counts[i],crc);
20001c92:	852e                	mv	a0,a1
20001c94:	85b2                	mv	a1,a2
20001c96:	263d                	jal	20001fc4 <crcu32>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:94
	for (i=0; i<NUM_CORE_STATES; i++) {
20001c98:	0411                	addi	s0,s0,4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:96
		crc=crcu32(track_counts[i],crc);
20001c9a:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:94
	for (i=0; i<NUM_CORE_STATES; i++) {
20001c9c:	ff5411e3          	bne	s0,s5,20001c7e <core_bench_state+0xea>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:98
	}
	return crc;
20001ca0:	8526                	mv	a0,s1
20001ca2:	4c96                	lw	s9,68(sp)
20001ca4:	4c26                	lw	s8,72(sp)
20001ca6:	4bb6                	lw	s7,76(sp)
20001ca8:	4b46                	lw	s6,80(sp)
20001caa:	4ad6                	lw	s5,84(sp)
20001cac:	4a66                	lw	s4,88(sp)
20001cae:	49f6                	lw	s3,92(sp)
20001cb0:	5906                	lw	s2,96(sp)
20001cb2:	5496                	lw	s1,100(sp)
20001cb4:	5426                	lw	s0,104(sp)
20001cb6:	50b6                	lw	ra,108(sp)
20001cb8:	6165                	addi	sp,sp,112
20001cba:	8082                	ret

20001cbc <core_state_transition>:
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:184
	2 - a valid number has been detected.
	
	The input pointer is updated to point to the end of the token, and the end state is returned (either specific format determined or invalid).
*/

enum CORE_STATE core_state_transition( ee_u8 **instr , ee_u32 *transition_count) {
20001cbc:	7179                	addi	sp,sp,-48
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:185
	ee_u8 *str=*instr;
20001cbe:	d622                	sw	s0,44(sp)
20001cc0:	d426                	sw	s1,40(sp)
20001cc2:	d24a                	sw	s2,36(sp)
20001cc4:	d04e                	sw	s3,32(sp)
20001cc6:	ce52                	sw	s4,28(sp)
20001cc8:	cc56                	sw	s5,24(sp)
20001cca:	ca5a                	sw	s6,20(sp)
20001ccc:	c85e                	sw	s7,16(sp)
20001cce:	c662                	sw	s8,12(sp)
20001cd0:	4114                	lw	a3,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:188
	ee_u8 NEXT_SYMBOL;
	enum CORE_STATE state=CORE_START;
	for( ; *str && state != CORE_INVALID; str++ ) {
20001cd2:	0006c403          	lbu	s0,0(a3)
20001cd6:	16040163          	beqz	s0,20001e38 <core_state_transition+0x17c>
20001cda:	4601                	li	a2,0
20001cdc:	00458813          	addi	a6,a1,4
20001ce0:	00c58313          	addi	t1,a1,12
20001ce4:	01458293          	addi	t0,a1,20
20001ce8:	01058893          	addi	a7,a1,16
20001cec:	0685                	addi	a3,a3,1
20001cee:	02c00713          	li	a4,44
20001cf2:	478d                	li	a5,3
20001cf4:	43a9                	li	t2,10
20001cf6:	02b00e13          	li	t3,43
20001cfa:	02d00e93          	li	t4,45
20001cfe:	02e00f13          	li	t5,46
20001d02:	4f89                	li	t6,2
20001d04:	4925                	li	s2,9
20001d06:	4c05                	li	s8,1
20001d08:	4b95                	li	s7,5
20001d0a:	4991                	li	s3,4
20001d0c:	06500a13          	li	s4,101
20001d10:	4a99                	li	s5,6
20001d12:	4b1d                	li	s6,7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:190
		NEXT_SYMBOL = *str;
		if (NEXT_SYMBOL==',') /* end of this input */ {
20001d14:	0ff47493          	andi	s1,s0,255
20001d18:	12e48163          	beq	s1,a4,20001e3a <core_state_transition+0x17e>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:194
			str++;
			break;
		}
		switch(state) {
20001d1c:	02c7d563          	bge	a5,a2,20001d46 <core_state_transition+0x8a>
20001d20:	04cbc363          	blt	s7,a2,20001d66 <core_state_transition+0xaa>
20001d24:	05360d63          	beq	a2,s3,20001d7e <core_state_transition+0xc2>
20001d28:	0f761c63          	bne	a2,s7,20001e20 <core_state_transition+0x164>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:236
				state = CORE_INVALID;
				transition_count[CORE_INT]++;
			}
			break;
		case CORE_FLOAT:
			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
20001d2c:	02046613          	ori	a2,s0,32
20001d30:	0ff67613          	andi	a2,a2,255
20001d34:	0d461563          	bne	a2,s4,20001dfe <core_state_transition+0x142>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:238
				state = CORE_S2;
				transition_count[CORE_FLOAT]++;
20001d38:	0002a603          	lw	a2,0(t0)
20001d3c:	0605                	addi	a2,a2,1
20001d3e:	00c2a023          	sw	a2,0(t0)
20001d42:	460d                	li	a2,3
20001d44:	a8f1                	j	20001e20 <core_state_transition+0x164>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:194
		switch(state) {
20001d46:	c629                	beqz	a2,20001d90 <core_state_transition+0xd4>
20001d48:	07f60463          	beq	a2,t6,20001db0 <core_state_transition+0xf4>
20001d4c:	0cf61a63          	bne	a2,a5,20001e20 <core_state_transition+0x164>
20001d50:	01d48463          	beq	s1,t4,20001d58 <core_state_transition+0x9c>
20001d54:	11c49063          	bne	s1,t3,20001e54 <core_state_transition+0x198>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:248
			}
			break;
		case CORE_S2:
			if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
				state = CORE_EXPONENT;
				transition_count[CORE_S2]++;
20001d58:	00032603          	lw	a2,0(t1)
20001d5c:	0605                	addi	a2,a2,1
20001d5e:	00c32023          	sw	a2,0(t1)
20001d62:	4619                	li	a2,6
20001d64:	a875                	j	20001e20 <core_state_transition+0x164>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:194
		switch(state) {
20001d66:	07560363          	beq	a2,s5,20001dcc <core_state_transition+0x110>
20001d6a:	0b661b63          	bne	a2,s6,20001e20 <core_state_transition+0x164>
ee_isdigit():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20001d6e:	fd040613          	addi	a2,s0,-48
20001d72:	0ff67413          	andi	s0,a2,255
20001d76:	461d                	li	a2,7
20001d78:	0a746463          	bltu	s0,t2,20001e20 <core_state_transition+0x164>
20001d7c:	a0cd                	j	20001e5e <core_state_transition+0x1a2>
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:226
			if( NEXT_SYMBOL == '.' ) {
20001d7e:	07e49363          	bne	s1,t5,20001de4 <core_state_transition+0x128>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:228
				transition_count[CORE_INT]++;
20001d82:	0008a603          	lw	a2,0(a7)
20001d86:	0605                	addi	a2,a2,1
20001d88:	00c8a023          	sw	a2,0(a7)
20001d8c:	4615                	li	a2,5
20001d8e:	a849                	j	20001e20 <core_state_transition+0x164>
ee_isdigit():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20001d90:	fd040613          	addi	a2,s0,-48
20001d94:	0ff67413          	andi	s0,a2,255
20001d98:	4611                	li	a2,4
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:196
			if(ee_isdigit(NEXT_SYMBOL)) {
20001d9a:	08746063          	bltu	s0,t2,20001e1a <core_state_transition+0x15e>
20001d9e:	4609                	li	a2,2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:199
			else if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
20001da0:	07c48d63          	beq	s1,t3,20001e1a <core_state_transition+0x15e>
20001da4:	07d48b63          	beq	s1,t4,20001e1a <core_state_transition+0x15e>
20001da8:	07e49363          	bne	s1,t5,20001e0e <core_state_transition+0x152>
20001dac:	4615                	li	a2,5
20001dae:	a0b5                	j	20001e1a <core_state_transition+0x15e>
ee_isdigit():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20001db0:	fd040613          	addi	a2,s0,-48
20001db4:	0ff67613          	andi	a2,a2,255
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:212
			if(ee_isdigit(NEXT_SYMBOL)) {
20001db8:	02c97e63          	bgeu	s2,a2,20001df4 <core_state_transition+0x138>
20001dbc:	4590                	lw	a2,8(a1)
20001dbe:	0605                	addi	a2,a2,1
20001dc0:	c590                	sw	a2,8(a1)
20001dc2:	4615                	li	a2,5
20001dc4:	05e48e63          	beq	s1,t5,20001e20 <core_state_transition+0x164>
20001dc8:	4605                	li	a2,1
20001dca:	a899                	j	20001e20 <core_state_transition+0x164>
20001dcc:	4d90                	lw	a2,24(a1)
ee_isdigit():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20001dce:	fd040413          	addi	s0,s0,-48
20001dd2:	0ff47413          	andi	s0,s0,255
20001dd6:	0605                	addi	a2,a2,1
20001dd8:	cd90                	sw	a2,24(a1)
20001dda:	4605                	li	a2,1
20001ddc:	04896263          	bltu	s2,s0,20001e20 <core_state_transition+0x164>
20001de0:	461d                	li	a2,7
20001de2:	a83d                	j	20001e20 <core_state_transition+0x164>
20001de4:	fd040613          	addi	a2,s0,-48
20001de8:	0ff67413          	andi	s0,a2,255
20001dec:	4611                	li	a2,4
20001dee:	02897963          	bgeu	s2,s0,20001e20 <core_state_transition+0x164>
20001df2:	a09d                	j	20001e58 <core_state_transition+0x19c>
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:214
				transition_count[CORE_S1]++;
20001df4:	4590                	lw	a2,8(a1)
20001df6:	0605                	addi	a2,a2,1
20001df8:	c590                	sw	a2,8(a1)
20001dfa:	4611                	li	a2,4
20001dfc:	a015                	j	20001e20 <core_state_transition+0x164>
ee_isdigit():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:170
	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20001dfe:	fd040613          	addi	a2,s0,-48
20001e02:	0ff67413          	andi	s0,a2,255
20001e06:	4615                	li	a2,5
20001e08:	00897c63          	bgeu	s2,s0,20001e20 <core_state_transition+0x164>
20001e0c:	a881                	j	20001e5c <core_state_transition+0x1a0>
core_state_transition():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:207
				transition_count[CORE_INVALID]++;
20001e0e:	00082603          	lw	a2,0(a6)
20001e12:	0605                	addi	a2,a2,1
20001e14:	00c82023          	sw	a2,0(a6)
20001e18:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:209
			transition_count[CORE_START]++;
20001e1a:	4180                	lw	s0,0(a1)
20001e1c:	0405                	addi	s0,s0,1
20001e1e:	c180                	sw	s0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:188
	for( ; *str && state != CORE_INVALID; str++ ) {
20001e20:	00168493          	addi	s1,a3,1
20001e24:	01860763          	beq	a2,s8,20001e32 <core_state_transition+0x176>
20001e28:	0006c403          	lbu	s0,0(a3)
20001e2c:	86a6                	mv	a3,s1
20001e2e:	ee0413e3          	bnez	s0,20001d14 <core_state_transition+0x58>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:275
			break;
		default:
			break;
		}
	}
	*instr=str;
20001e32:	fff48693          	addi	a3,s1,-1
20001e36:	a011                	j	20001e3a <core_state_transition+0x17e>
20001e38:	4601                	li	a2,0
20001e3a:	c114                	sw	a3,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:276
	return state;
20001e3c:	8532                	mv	a0,a2
20001e3e:	4c32                	lw	s8,12(sp)
20001e40:	4bc2                	lw	s7,16(sp)
20001e42:	4b52                	lw	s6,20(sp)
20001e44:	4ae2                	lw	s5,24(sp)
20001e46:	4a72                	lw	s4,28(sp)
20001e48:	5982                	lw	s3,32(sp)
20001e4a:	5912                	lw	s2,36(sp)
20001e4c:	54a2                	lw	s1,40(sp)
20001e4e:	5432                	lw	s0,44(sp)
20001e50:	6145                	addi	sp,sp,48
20001e52:	8082                	ret
20001e54:	881a                	mv	a6,t1
20001e56:	a021                	j	20001e5e <core_state_transition+0x1a2>
20001e58:	8846                	mv	a6,a7
20001e5a:	a011                	j	20001e5e <core_state_transition+0x1a2>
20001e5c:	8816                	mv	a6,t0
20001e5e:	00082583          	lw	a1,0(a6)
20001e62:	0585                	addi	a1,a1,1
20001e64:	00b82023          	sw	a1,0(a6)
20001e68:	4605                	li	a2,1
20001e6a:	bfc1                	j	20001e3a <core_state_transition+0x17e>

20001e6c <core_init_state>:
core_init_state():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:116
void core_init_state(ee_u32 size, ee_s16 seed, ee_u8 *p) {
20001e6c:	1141                	addi	sp,sp,-16
20001e6e:	c606                	sw	ra,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:123
	size--;
20001e70:	fff50813          	addi	a6,a0,-1
20001e74:	4689                	li	a3,2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:125
	while ((total+next+1)<size) {
20001e76:	08d86863          	bltu	a6,a3,20001f06 <core_init_state+0x9a>
20001e7a:	4e81                	li	t4,0
20001e7c:	4e01                	li	t3,0
20001e7e:	4381                	li	t2,0
20001e80:	00001297          	auipc	t0,0x1
20001e84:	34028293          	addi	t0,t0,832 # 200031c0 <errpat+0x10>
20001e88:	00002317          	auipc	t1,0x2
20001e8c:	b3430313          	addi	t1,t1,-1228 # 200039bc <__clz_tab+0x690>
20001e90:	02c00893          	li	a7,44
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:126
		if (next>0) {
20001e94:	020e0663          	beqz	t3,20001ec0 <core_init_state+0x54>
20001e98:	00760733          	add	a4,a2,t2
20001e9c:	87f2                	mv	a5,t3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:128
				*(p+total+i)=buf[i];
20001e9e:	000e8683          	lb	a3,0(t4)
20001ea2:	00d70023          	sb	a3,0(a4)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:127
			for(i=0;i<next;i++)
20001ea6:	17fd                	addi	a5,a5,-1
20001ea8:	0705                	addi	a4,a4,1
20001eaa:	0e85                	addi	t4,t4,1
20001eac:	fbed                	bnez	a5,20001e9e <core_init_state+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:129
			*(p+total+i)=',';
20001eae:	007606b3          	add	a3,a2,t2
20001eb2:	96f2                	add	a3,a3,t3
20001eb4:	01168023          	sb	a7,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:130
			total+=next+1;
20001eb8:	01c386b3          	add	a3,t2,t3
20001ebc:	00168393          	addi	t2,a3,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:132
		seed++;
20001ec0:	0585                	addi	a1,a1,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:133
		switch (seed & 0x7) {
20001ec2:	01059693          	slli	a3,a1,0x10
20001ec6:	86c1                	srai	a3,a3,0x10
20001ec8:	00269713          	slli	a4,a3,0x2
20001ecc:	8b71                	andi	a4,a4,28
20001ece:	005707b3          	add	a5,a4,t0
20001ed2:	439c                	lw	a5,0(a5)
20001ed4:	971a                	add	a4,a4,t1
20001ed6:	00072e03          	lw	t3,0(a4)
20001eda:	8285                	srli	a3,a3,0x1
20001edc:	8ab1                	andi	a3,a3,12
20001ede:	96be                	add	a3,a3,a5
20001ee0:	0006ae83          	lw	t4,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:125
	while ((total+next+1)<size) {
20001ee4:	01c386b3          	add	a3,t2,t3
20001ee8:	0685                	addi	a3,a3,1
20001eea:	fb06e5e3          	bltu	a3,a6,20001e94 <core_init_state+0x28>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:159
	while (total<size) { /* fill the rest with 0 */
20001eee:	00a3f963          	bgeu	t2,a0,20001f00 <core_init_state+0x94>
20001ef2:	007605b3          	add	a1,a2,t2
20001ef6:	40750633          	sub	a2,a0,t2
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:160
		*(p+total)=0;
20001efa:	852e                	mv	a0,a1
20001efc:	4581                	li	a1,0
20001efe:	29f1                	jal	200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:166
}
20001f00:	40b2                	lw	ra,12(sp)
20001f02:	0141                	addi	sp,sp,16
20001f04:	8082                	ret
20001f06:	4381                	li	t2,0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_state.c:159
	while (total<size) { /* fill the rest with 0 */
20001f08:	fea3e5e3          	bltu	t2,a0,20001ef2 <core_init_state+0x86>
20001f0c:	bfd5                	j	20001f00 <core_init_state+0x94>
	...

20001f10 <get_seed_32>:
get_seed_32():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:41
	extern volatile ee_s32 seed3_volatile;
	extern volatile ee_s32 seed4_volatile;
	extern volatile ee_s32 seed5_volatile;
	ee_s32 get_seed_32(int i) {
		ee_s32 retval;
		switch (i) {
20001f10:	157d                	addi	a0,a0,-1
20001f12:	4591                	li	a1,4
20001f14:	00a5eb63          	bltu	a1,a0,20001f2a <get_seed_32+0x1a>
20001f18:	050a                	slli	a0,a0,0x2
20001f1a:	00001597          	auipc	a1,0x1
20001f1e:	2c658593          	addi	a1,a1,710 # 200031e0 <errpat+0x30>
20001f22:	952e                	add	a0,a0,a1
20001f24:	4108                	lw	a0,0(a0)
20001f26:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:61
				break;
			default:
				retval=0;
				break;
		}
		return retval;
20001f28:	8082                	ret
20001f2a:	4501                	li	a0,0
20001f2c:	8082                	ret

20001f2e <crcu8>:
crcu8():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:143
/* Function: crc*
	Service functions to calculate 16b CRC code.

*/
ee_u16 crcu8(ee_u8 data, ee_u16 crc )
{
20001f2e:	4601                	li	a2,0
20001f30:	66a1                	lui	a3,0x8
20001f32:	16fd                	addi	a3,a3,-1
20001f34:	7769                	lui	a4,0xffffa
20001f36:	0705                	addi	a4,a4,1
20001f38:	481d                	li	a6,7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:148
	ee_u8 i=0,x16=0,carry=0;

	for (i = 0; i < 8; i++)
    {
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20001f3a:	00b547b3          	xor	a5,a0,a1
20001f3e:	0fe57513          	andi	a0,a0,254
20001f42:	8b85                	andi	a5,a5,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:158
		   crc ^= 0x4002;
		   carry = 1;
		}
		else 
			carry = 0;
		crc >>= 1;
20001f44:	8185                	srli	a1,a1,0x1
20001f46:	8df5                	and	a1,a1,a3
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:159
		if (carry)
20001f48:	c391                	beqz	a5,20001f4c <crcu8+0x1e>
20001f4a:	8db9                	xor	a1,a1,a4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:146
	for (i = 0; i < 8; i++)
20001f4c:	0ff67793          	andi	a5,a2,255
20001f50:	0605                	addi	a2,a2,1
20001f52:	8105                	srli	a0,a0,0x1
20001f54:	ff07e3e3          	bltu	a5,a6,20001f3a <crcu8+0xc>
20001f58:	6541                	lui	a0,0x10
20001f5a:	157d                	addi	a0,a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:164
		   crc |= 0x8000;
		else
		   crc &= 0x7fff;
    }
	return crc;
20001f5c:	8d6d                	and	a0,a0,a1
20001f5e:	8082                	ret

20001f60 <crcu16>:
crcu16():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:166
} 
ee_u16 crcu16(ee_u16 newval, ee_u16 crc) {
20001f60:	4681                	li	a3,0
20001f62:	6629                	lui	a2,0xa
20001f64:	00160893          	addi	a7,a2,1 # a001 <_stack_size+0x8001>
20001f68:	6721                	lui	a4,0x8
20001f6a:	177d                	addi	a4,a4,-1
20001f6c:	481d                	li	a6,7
20001f6e:	87aa                	mv	a5,a0
crcu8():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20001f70:	00b7c633          	xor	a2,a5,a1
20001f74:	0fe7f793          	andi	a5,a5,254
20001f78:	8a05                	andi	a2,a2,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:158
		crc >>= 1;
20001f7a:	8185                	srli	a1,a1,0x1
20001f7c:	8df9                	and	a1,a1,a4
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:159
		if (carry)
20001f7e:	c219                	beqz	a2,20001f84 <crcu16+0x24>
20001f80:	0115c5b3          	xor	a1,a1,a7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:146
	for (i = 0; i < 8; i++)
20001f84:	0ff6f613          	andi	a2,a3,255
20001f88:	0685                	addi	a3,a3,1
20001f8a:	8385                	srli	a5,a5,0x1
20001f8c:	ff0662e3          	bltu	a2,a6,20001f70 <crcu16+0x10>
20001f90:	4681                	li	a3,0
crcu16():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:168
	crc=crcu8( (ee_u8) (newval)				,crc);
	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20001f92:	00855793          	srli	a5,a0,0x8
20001f96:	6521                	lui	a0,0x8
20001f98:	157d                	addi	a0,a0,-1
20001f9a:	471d                	li	a4,7
crcu8():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:148
		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20001f9c:	00b7c633          	xor	a2,a5,a1
20001fa0:	0fe7f793          	andi	a5,a5,254
20001fa4:	8a05                	andi	a2,a2,1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:158
		crc >>= 1;
20001fa6:	8185                	srli	a1,a1,0x1
20001fa8:	8de9                	and	a1,a1,a0
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:159
		if (carry)
20001faa:	c219                	beqz	a2,20001fb0 <crcu16+0x50>
20001fac:	0115c5b3          	xor	a1,a1,a7
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:146
	for (i = 0; i < 8; i++)
20001fb0:	0ff6f613          	andi	a2,a3,255
20001fb4:	0685                	addi	a3,a3,1
20001fb6:	8385                	srli	a5,a5,0x1
20001fb8:	fee662e3          	bltu	a2,a4,20001f9c <crcu16+0x3c>
20001fbc:	6541                	lui	a0,0x10
20001fbe:	157d                	addi	a0,a0,-1
crcu16():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:169
	return crc;
20001fc0:	8d6d                	and	a0,a0,a1
20001fc2:	8082                	ret

20001fc4 <crcu32>:
crcu32():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:171
}
ee_u16 crcu32(ee_u32 newval, ee_u16 crc) {
20001fc4:	1141                	addi	sp,sp,-16
20001fc6:	c606                	sw	ra,12(sp)
20001fc8:	c422                	sw	s0,8(sp)
20001fca:	842a                	mv	s0,a0
20001fcc:	6541                	lui	a0,0x10
20001fce:	157d                	addi	a0,a0,-1
crc16():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:177
	crc=crc16((ee_s16) newval		,crc);
	crc=crc16((ee_s16) (newval>>16)	,crc);
	return crc;
}
ee_u16 crc16(ee_s16 newval, ee_u16 crc) {
	return crcu16((ee_u16)newval, crc);
20001fd0:	8d61                	and	a0,a0,s0
20001fd2:	3779                	jal	20001f60 <crcu16>
crcu32():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:173
	crc=crc16((ee_s16) (newval>>16)	,crc);
20001fd4:	01045593          	srli	a1,s0,0x10
crc16():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20001fd8:	862a                	mv	a2,a0
20001fda:	852e                	mv	a0,a1
20001fdc:	85b2                	mv	a1,a2
20001fde:	4422                	lw	s0,8(sp)
20001fe0:	40b2                	lw	ra,12(sp)
20001fe2:	0141                	addi	sp,sp,16
20001fe4:	bfb5                	j	20001f60 <crcu16>

20001fe6 <crc16>:
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:176
ee_u16 crc16(ee_s16 newval, ee_u16 crc) {
20001fe6:	6641                	lui	a2,0x10
20001fe8:	167d                	addi	a2,a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:177
	return crcu16((ee_u16)newval, crc);
20001fea:	8d71                	and	a0,a0,a2
20001fec:	bf95                	j	20001f60 <crcu16>

20001fee <check_data_types>:
check_data_types():
/home/gl/work/opentitan/repo/build-out/../sw/vendor/eembc_coremark/core_util.c:209
		retval++;
	}
	if (retval>0) {
		ee_printf("ERROR: Please modify the datatypes in core_portme.h!\n");
	}
	return retval;
20001fee:	4501                	li	a0,0
20001ff0:	8082                	ret
	...

20001ff4 <dif_uart_init>:
dif_uart_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:136

  return bytes_read;
}

dif_uart_result_t dif_uart_init(dif_uart_params_t params, dif_uart_t *uart) {
  if (uart == NULL) {
20001ff4:	c581                	beqz	a1,20001ffc <dif_uart_init+0x8>
20001ff6:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:140
    return kDifUartBadArg;
  }

  uart->params = params;
20001ff8:	c188                	sw	a0,0(a1)
20001ffa:	a011                	j	20001ffe <dif_uart_init+0xa>
20001ffc:	4609                	li	a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:142
  return kDifUartOk;
}
20001ffe:	8532                	mv	a0,a2
20002000:	8082                	ret

20002002 <dif_uart_configure>:
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:145

dif_uart_config_result_t dif_uart_configure(const dif_uart_t *uart,
                                            dif_uart_config_t config) {
20002002:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:146
  if (uart == NULL) {
20002004:	c606                	sw	ra,12(sp)
20002006:	c422                	sw	s0,8(sp)
20002008:	c226                	sw	s1,4(sp)
2000200a:	c935                	beqz	a0,2000207e <dif_uart_configure+0x7c>
2000200c:	84ae                	mv	s1,a1
2000200e:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:150
    return kDifUartConfigBadArg;
  }

  if (config.baudrate == 0 || config.clk_freq_hz == 0) {
20002010:	418c                	lw	a1,0(a1)
20002012:	450d                	li	a0,3
20002014:	c5b5                	beqz	a1,20002080 <dif_uart_configure+0x7e>
20002016:	40d0                	lw	a2,4(s1)
20002018:	c625                	beqz	a2,20002080 <dif_uart_configure+0x7e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:169
                "NCO bit width exceeds 28 bits.");

  // NCO creates 16x of baudrate. So, in addition to the nco_width,
  // 2^4 should be multiplied.
  uint64_t nco =
      ((uint64_t)config.baudrate << (nco_width + 4)) / config.clk_freq_hz;
2000201a:	01459513          	slli	a0,a1,0x14
2000201e:	81b1                	srli	a1,a1,0xc
20002020:	4681                	li	a3,0
20002022:	5af000ef          	jal	ra,20002dd0 <__udivdi3>
20002026:	6641                	lui	a2,0x10
20002028:	167d                	addi	a2,a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:170
  uint32_t nco_masked = nco & UART_CTRL_NCO_MASK;
2000202a:	8e69                	and	a2,a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:173

  // Requested baudrate is too high for the given clock frequency.
  if (nco != nco_masked) {
2000202c:	8d31                	xor	a0,a0,a2
2000202e:	8dc9                	or	a1,a1,a0
20002030:	4511                	li	a0,4
20002032:	e5b9                	bnez	a1,20002080 <dif_uart_configure+0x7e>
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:92
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, 0u);
20002034:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002036:	00052623          	sw	zero,12(a0) # 1000c <_dv_log_offset+0xc>
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:98
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);
2000203a:	4008                	lw	a0,0(s0)
2000203c:	458d                	li	a1,3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000203e:	cd4c                	sw	a1,28(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:100
  mmio_region_write32(uart->params.base_addr, UART_OVRD_REG_OFFSET, 0u);
20002040:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002042:	02052223          	sw	zero,36(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:101
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET, 0u);
20002046:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002048:	02052623          	sw	zero,44(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:102
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
2000204c:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000204e:	00052223          	sw	zero,4(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:103
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET,
20002052:	4008                	lw	a0,0(s0)
20002054:	55fd                	li	a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002056:	c10c                	sw	a1,0(a0)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  // Set baudrate, enable RX and TX, configure parity.
  uint32_t reg = 0;
  reg = bitfield_field32_write(reg, UART_CTRL_NCO_FIELD, nco_masked);
  reg = bitfield_bit32_write(reg, UART_CTRL_TX_BIT, true);
  reg = bitfield_bit32_write(reg, UART_CTRL_RX_BIT, true);
  if (config.parity_enable == kDifUartToggleEnabled) {
20002058:	4494                	lw	a3,8(s1)
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
BITFIELD_WARN_UNUSED_RESULT
inline uint32_t bitfield_field32_write(uint32_t bitfield,
                                       bitfield_field32_t field,
                                       uint32_t value) {
  bitfield &= ~(field.mask << field.index);
  bitfield |= (value & field.mask) << field.index;
2000205a:	01061513          	slli	a0,a2,0x10
2000205e:	04300593          	li	a1,67
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
20002062:	c291                	beqz	a3,20002066 <dif_uart_configure+0x64>
20002064:	458d                	li	a1,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_EN_BIT, true);
  }
  if (config.parity == kDifUartParityOdd) {
20002066:	44d0                	lw	a2,12(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  if (config.parity_enable == kDifUartToggleEnabled) {
20002068:	8d4d                	or	a0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
  if (config.parity == kDifUartParityOdd) {
2000206a:	e219                	bnez	a2,20002070 <dif_uart_configure+0x6e>
2000206c:	08056513          	ori	a0,a0,128
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:191
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_ODD_BIT, true);
  }
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);
20002070:	400c                	lw	a1,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002072:	c5c8                	sw	a0,12(a1)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:194

  // Disable interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20002074:	400c                	lw	a1,0(s0)
20002076:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002078:	0005a223          	sw	zero,4(a1)
2000207c:	a011                	j	20002080 <dif_uart_configure+0x7e>
2000207e:	4509                	li	a0,2
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:197

  return kDifUartConfigOk;
}
20002080:	4492                	lw	s1,4(sp)
20002082:	4422                	lw	s0,8(sp)
20002084:	40b2                	lw	ra,12(sp)
20002086:	0141                	addi	sp,sp,16
20002088:	8082                	ret

2000208a <dif_uart_irq_is_pending>:
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:201

dif_uart_result_t dif_uart_irq_is_pending(const dif_uart_t *uart,
                                          dif_uart_irq_t irq,
                                          bool *is_pending) {
2000208a:	1141                	addi	sp,sp,-16
2000208c:	c606                	sw	ra,12(sp)
2000208e:	c422                	sw	s0,8(sp)
20002090:	c226                	sw	s1,4(sp)
20002092:	84aa                	mv	s1,a0
20002094:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:202
  if (uart == NULL || is_pending == NULL) {
20002096:	c09d                	beqz	s1,200020bc <dif_uart_irq_is_pending+0x32>
20002098:	8432                	mv	s0,a2
2000209a:	c20d                	beqz	a2,200020bc <dif_uart_irq_is_pending+0x32>
2000209c:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:207
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
2000209e:	852e                	mv	a0,a1
200020a0:	85b2                	mv	a1,a2
200020a2:	2015                	jal	200020c6 <uart_irq_offset_get>
200020a4:	85aa                	mv	a1,a0
200020a6:	4505                	li	a0,1
200020a8:	c991                	beqz	a1,200020bc <dif_uart_irq_is_pending+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:212
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET);
200020aa:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200020ac:	410c                	lw	a1,0(a0)
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
  *is_pending = bitfield_bit32_read(reg, offset);
200020ae:	4602                	lw	a2,0(sp)
200020b0:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
 */
BITFIELD_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
200020b2:	00c5d5b3          	srl	a1,a1,a2
200020b6:	8985                	andi	a1,a1,1
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
200020b8:	00b40023          	sb	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:216

  return kDifUartOk;
}
200020bc:	4492                	lw	s1,4(sp)
200020be:	4422                	lw	s0,8(sp)
200020c0:	40b2                	lw	ra,12(sp)
200020c2:	0141                	addi	sp,sp,16
200020c4:	8082                	ret

200020c6 <uart_irq_offset_get>:
uart_irq_offset_get():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:55
                                ptrdiff_t *offset_out) {
200020c6:	461d                	li	a2,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:57
  switch (irq_type) {
200020c8:	00a66563          	bltu	a2,a0,200020d2 <uart_irq_offset_get+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:86
  *offset_out = offset;
200020cc:	c188                	sw	a0,0(a1)
200020ce:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:89
}
200020d0:	8082                	ret
200020d2:	4501                	li	a0,0
200020d4:	8082                	ret

200020d6 <dif_uart_irq_acknowledge>:
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:219

dif_uart_result_t dif_uart_irq_acknowledge(const dif_uart_t *uart,
                                           dif_uart_irq_t irq) {
200020d6:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:220
  if (uart == NULL) {
200020d8:	c606                	sw	ra,12(sp)
200020da:	c422                	sw	s0,8(sp)
200020dc:	c10d                	beqz	a0,200020fe <dif_uart_irq_acknowledge+0x28>
200020de:	842a                	mv	s0,a0
200020e0:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:225
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
200020e2:	852e                	mv	a0,a1
200020e4:	85b2                	mv	a1,a2
200020e6:	37c5                	jal	200020c6 <uart_irq_offset_get>
200020e8:	85aa                	mv	a1,a0
200020ea:	4505                	li	a0,1
200020ec:	c991                	beqz	a1,20002100 <dif_uart_irq_acknowledge+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:230
    return kDifUartError;
  }

  // Writing to the register clears the corresponding bits (Write-one clear).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
200020ee:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:231
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET, reg);
200020f0:	4010                	lw	a2,0(s0)
200020f2:	4501                	li	a0,0
200020f4:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200020f6:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200020fa:	c20c                	sw	a1,0(a2)
200020fc:	a011                	j	20002100 <dif_uart_irq_acknowledge+0x2a>
200020fe:	4509                	li	a0,2
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:234

  return kDifUartOk;
}
20002100:	4422                	lw	s0,8(sp)
20002102:	40b2                	lw	ra,12(sp)
20002104:	0141                	addi	sp,sp,16
20002106:	8082                	ret

20002108 <dif_uart_irq_disable_all>:
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:238

dif_uart_result_t dif_uart_irq_disable_all(const dif_uart_t *uart,
                                           dif_uart_irq_snapshot_t *snapshot) {
  if (uart == NULL) {
20002108:	c911                	beqz	a0,2000211c <dif_uart_irq_disable_all+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:243
    return kDifUartBadArg;
  }

  // Pass the current interrupt state to the caller.
  if (snapshot != NULL) {
2000210a:	c581                	beqz	a1,20002112 <dif_uart_irq_disable_all+0xa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:245
    *snapshot =
        mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
2000210c:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000210e:	4250                	lw	a2,4(a2)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:244
    *snapshot =
20002110:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:249
  }

  // Disable all UART interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20002112:	410c                	lw	a1,0(a0)
20002114:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002116:	0005a223          	sw	zero,4(a1)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:252

  return kDifUartOk;
}
2000211a:	8082                	ret
2000211c:	4509                	li	a0,2
2000211e:	8082                	ret

20002120 <dif_uart_irq_restore_all>:
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:255

dif_uart_result_t dif_uart_irq_restore_all(
    const dif_uart_t *uart, const dif_uart_irq_snapshot_t *snapshot) {
20002120:	862a                	mv	a2,a0
20002122:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:256
  if (uart == NULL || snapshot == NULL) {
20002124:	c611                	beqz	a2,20002130 <dif_uart_irq_restore_all+0x10>
20002126:	c589                	beqz	a1,20002130 <dif_uart_irq_restore_all+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:261
    return kDifUartBadArg;
  }

  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
                      *snapshot);
20002128:	418c                	lw	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:260
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
2000212a:	4210                	lw	a2,0(a2)
2000212c:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000212e:	c24c                	sw	a1,4(a2)
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:264

  return kDifUartOk;
}
20002130:	8082                	ret

20002132 <dif_uart_irq_get_enabled>:
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:268

dif_uart_result_t dif_uart_irq_get_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t *state) {
20002132:	1141                	addi	sp,sp,-16
20002134:	c606                	sw	ra,12(sp)
20002136:	c422                	sw	s0,8(sp)
20002138:	c226                	sw	s1,4(sp)
2000213a:	84aa                	mv	s1,a0
2000213c:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:269
  if (uart == NULL || state == NULL) {
2000213e:	c485                	beqz	s1,20002166 <dif_uart_irq_get_enabled+0x34>
20002140:	8432                	mv	s0,a2
20002142:	c215                	beqz	a2,20002166 <dif_uart_irq_get_enabled+0x34>
20002144:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:274
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20002146:	852e                	mv	a0,a1
20002148:	85b2                	mv	a1,a2
2000214a:	3fb5                	jal	200020c6 <uart_irq_offset_get>
2000214c:	85aa                	mv	a1,a0
2000214e:	4505                	li	a0,1
20002150:	c999                	beqz	a1,20002166 <dif_uart_irq_get_enabled+0x34>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:279
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
20002152:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20002154:	414c                	lw	a1,4(a0)
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:281

  bool is_enabled = bitfield_bit32_read(reg, offset);
20002156:	4602                	lw	a2,0(sp)
20002158:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
2000215a:	00c5d5b3          	srl	a1,a1,a2
2000215e:	8985                	andi	a1,a1,1
20002160:	0015b593          	seqz	a1,a1
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:282
  *state = is_enabled ? kDifUartToggleEnabled : kDifUartToggleDisabled;
20002164:	c00c                	sw	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:285

  return kDifUartOk;
}
20002166:	4492                	lw	s1,4(sp)
20002168:	4422                	lw	s0,8(sp)
2000216a:	40b2                	lw	ra,12(sp)
2000216c:	0141                	addi	sp,sp,16
2000216e:	8082                	ret

20002170 <dif_uart_irq_set_enabled>:
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:289

dif_uart_result_t dif_uart_irq_set_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t state) {
20002170:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:290
  if (uart == NULL) {
20002172:	c606                	sw	ra,12(sp)
20002174:	c422                	sw	s0,8(sp)
20002176:	c226                	sw	s1,4(sp)
20002178:	c91d                	beqz	a0,200021ae <dif_uart_irq_set_enabled+0x3e>
2000217a:	8432                	mv	s0,a2
2000217c:	84aa                	mv	s1,a0
2000217e:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:295
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20002180:	852e                	mv	a0,a1
20002182:	85b2                	mv	a1,a2
20002184:	3789                	jal	200020c6 <uart_irq_offset_get>
20002186:	85aa                	mv	a1,a0
20002188:	4505                	li	a0,1
2000218a:	c19d                	beqz	a1,200021b0 <dif_uart_irq_set_enabled+0x40>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:300
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
2000218c:	408c                	lw	a1,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000218e:	41d0                	lw	a2,4(a1)
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:302
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
  reg = bitfield_bit32_write(reg, offset, bit);
20002190:	4682                	lw	a3,0(sp)
20002192:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:301
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
20002194:	00143713          	seqz	a4,s0
20002198:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
2000219a:	00d797b3          	sll	a5,a5,a3
2000219e:	fff7c793          	not	a5,a5
200021a2:	8e7d                	and	a2,a2,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
200021a4:	00d716b3          	sll	a3,a4,a3
200021a8:	8e55                	or	a2,a2,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200021aa:	c1d0                	sw	a2,4(a1)
200021ac:	a011                	j	200021b0 <dif_uart_irq_set_enabled+0x40>
200021ae:	4509                	li	a0,2
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:306
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, reg);

  return kDifUartOk;
}
200021b0:	4492                	lw	s1,4(sp)
200021b2:	4422                	lw	s0,8(sp)
200021b4:	40b2                	lw	ra,12(sp)
200021b6:	0141                	addi	sp,sp,16
200021b8:	8082                	ret

200021ba <dif_uart_irq_force>:
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:309

dif_uart_result_t dif_uart_irq_force(const dif_uart_t *uart,
                                     dif_uart_irq_t irq) {
200021ba:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:310
  if (uart == NULL) {
200021bc:	c606                	sw	ra,12(sp)
200021be:	c422                	sw	s0,8(sp)
200021c0:	c10d                	beqz	a0,200021e2 <dif_uart_irq_force+0x28>
200021c2:	842a                	mv	s0,a0
200021c4:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:315
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
200021c6:	852e                	mv	a0,a1
200021c8:	85b2                	mv	a1,a2
200021ca:	3df5                	jal	200020c6 <uart_irq_offset_get>
200021cc:	85aa                	mv	a1,a0
200021ce:	4505                	li	a0,1
200021d0:	c991                	beqz	a1,200021e4 <dif_uart_irq_force+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:320
    return kDifUartError;
  }

  // Force the requested interrupt (write-only).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
200021d2:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:321
  mmio_region_write32(uart->params.base_addr, UART_INTR_TEST_REG_OFFSET, reg);
200021d4:	4010                	lw	a2,0(s0)
200021d6:	4501                	li	a0,0
200021d8:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200021da:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200021de:	c60c                	sw	a1,8(a2)
200021e0:	a011                	j	200021e4 <dif_uart_irq_force+0x2a>
200021e2:	4509                	li	a0,2
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:324

  return kDifUartOk;
}
200021e4:	4422                	lw	s0,8(sp)
200021e6:	40b2                	lw	ra,12(sp)
200021e8:	0141                	addi	sp,sp,16
200021ea:	8082                	ret

200021ec <dif_uart_watermark_rx_set>:
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:328

dif_uart_result_t dif_uart_watermark_rx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
200021ec:	cd09                	beqz	a0,20002206 <dif_uart_watermark_rx_set+0x1a>
200021ee:	4691                	li	a3,4
200021f0:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
200021f2:	00b6eb63          	bltu	a3,a1,20002208 <dif_uart_watermark_rx_set+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:357
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
200021f6:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200021f8:	4d54                	lw	a3,28(a0)
200021fa:	4601                	li	a2,0
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  switch (watermark) {
200021fc:	058a                	slli	a1,a1,0x2
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
200021fe:	9a8d                	andi	a3,a3,-29
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20002200:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002202:	cd4c                	sw	a1,28(a0)
20002204:	a011                	j	20002208 <dif_uart_watermark_rx_set+0x1c>
20002206:	4609                	li	a2,2
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:362
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_RXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
20002208:	8532                	mv	a0,a2
2000220a:	8082                	ret

2000220c <dif_uart_watermark_tx_set>:
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:366

dif_uart_result_t dif_uart_watermark_tx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
2000220c:	cd11                	beqz	a0,20002228 <dif_uart_watermark_tx_set+0x1c>
2000220e:	468d                	li	a3,3
20002210:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
20002212:	00b6ec63          	bltu	a3,a1,2000222a <dif_uart_watermark_tx_set+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:393
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
20002216:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20002218:	4d54                	lw	a3,28(a0)
2000221a:	4601                	li	a2,0
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  switch (watermark) {
2000221c:	0596                	slli	a1,a1,0x5
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
2000221e:	f9f6f693          	andi	a3,a3,-97
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20002222:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002224:	cd4c                	sw	a1,28(a0)
20002226:	a011                	j	2000222a <dif_uart_watermark_tx_set+0x1e>
20002228:	4609                	li	a2,2
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:398
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_TXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
2000222a:	8532                	mv	a0,a2
2000222c:	8082                	ret

2000222e <dif_uart_bytes_send>:
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:403

dif_uart_result_t dif_uart_bytes_send(const dif_uart_t *uart,
                                      const uint8_t *data,
                                      size_t bytes_requested,
                                      size_t *bytes_written) {
2000222e:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:404
  if (uart == NULL || data == NULL) {
20002230:	c51d                	beqz	a0,2000225e <dif_uart_bytes_send+0x30>
20002232:	c595                	beqz	a1,2000225e <dif_uart_bytes_send+0x30>
20002234:	4781                	li	a5,0
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20002236:	c20d                	beqz	a2,20002258 <dif_uart_bytes_send+0x2a>
uart_tx_full():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:21
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
20002238:	00052803          	lw	a6,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000223c:	01082703          	lw	a4,16(a6)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
20002240:	8b05                	andi	a4,a4,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20002242:	eb19                	bnez	a4,20002258 <dif_uart_bytes_send+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:114
    uart_tx_fifo_write(uart, data[bytes_written]);
20002244:	00f58733          	add	a4,a1,a5
20002248:	00074703          	lbu	a4,0(a4) # 8000 <_stack_size+0x6000>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:115
    ++bytes_written;
2000224c:	0785                	addi	a5,a5,1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
2000224e:	00e82c23          	sw	a4,24(a6)
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20002252:	fef613e3          	bne	a2,a5,20002238 <dif_uart_bytes_send+0xa>
20002256:	87b2                	mv	a5,a2
20002258:	4701                	li	a4,0
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:410
    return kDifUartBadArg;
  }

  // `bytes_written` is an optional parameter.
  size_t res = uart_bytes_send(uart, data, bytes_requested);
  if (bytes_written != NULL) {
2000225a:	c291                	beqz	a3,2000225e <dif_uart_bytes_send+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:411
    *bytes_written = res;
2000225c:	c29c                	sw	a5,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:415
  }

  return kDifUartOk;
}
2000225e:	853a                	mv	a0,a4
20002260:	8082                	ret

20002262 <dif_uart_bytes_receive>:
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:419

dif_uart_result_t dif_uart_bytes_receive(const dif_uart_t *uart,
                                         size_t bytes_requested, uint8_t *data,
                                         size_t *bytes_read) {
20002262:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:420
  if (uart == NULL || data == NULL) {
20002264:	c515                	beqz	a0,20002290 <dif_uart_bytes_receive+0x2e>
20002266:	c60d                	beqz	a2,20002290 <dif_uart_bytes_receive+0x2e>
20002268:	4801                	li	a6,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
2000226a:	cd99                	beqz	a1,20002288 <dif_uart_bytes_receive+0x26>
uart_rx_empty():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:33
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
2000226c:	4118                	lw	a4,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000226e:	4b1c                	lw	a5,16(a4)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20002270:	0207f793          	andi	a5,a5,32
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
20002274:	eb91                	bnez	a5,20002288 <dif_uart_bytes_receive+0x26>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20002276:	4b58                	lw	a4,20(a4)
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
20002278:	010607b3          	add	a5,a2,a6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:129
    ++bytes_read;
2000227c:	0805                	addi	a6,a6,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
2000227e:	00e78023          	sb	a4,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
20002282:	ff0595e3          	bne	a1,a6,2000226c <dif_uart_bytes_receive+0xa>
20002286:	882e                	mv	a6,a1
20002288:	4701                	li	a4,0
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:426
    return kDifUartBadArg;
  }

  // `bytes_read` is an optional parameter.
  size_t res = uart_bytes_receive(uart, bytes_requested, data);
  if (bytes_read != NULL) {
2000228a:	c299                	beqz	a3,20002290 <dif_uart_bytes_receive+0x2e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:427
    *bytes_read = res;
2000228c:	0106a023          	sw	a6,0(a3) # 8000 <_stack_size+0x6000>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:431
  }

  return kDifUartOk;
}
20002290:	853a                	mv	a0,a4
20002292:	8082                	ret

20002294 <dif_uart_byte_send_polled>:
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:435

dif_uart_result_t dif_uart_byte_send_polled(const dif_uart_t *uart,
                                            uint8_t byte) {
  if (uart == NULL) {
20002294:	cd19                	beqz	a0,200022b2 <dif_uart_byte_send_polled+0x1e>
20002296:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20002298:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000229a:	8a85                	andi	a3,a3,1
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:440
    return kDifUartBadArg;
  }

  // Busy wait for the TX FIFO to free up.
  while (uart_tx_full(uart)) {
2000229c:	fef5                	bnez	a3,20002298 <dif_uart_byte_send_polled+0x4>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000229e:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200022a0:	8a85                	andi	a3,a3,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
200022a2:	e299                	bnez	a3,200022a8 <dif_uart_byte_send_polled+0x14>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200022a4:	ce0c                	sw	a1,24(a2)
200022a6:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200022a8:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200022aa:	8921                	andi	a0,a0,8
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:447

  (void)uart_bytes_send(uart, &byte, 1);

  // Busy wait for the TX FIFO to be drained and for HW to finish processing
  // the last byte.
  while (!uart_tx_idle(uart)) {
200022ac:	dd75                	beqz	a0,200022a8 <dif_uart_byte_send_polled+0x14>
200022ae:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:451
  }

  return kDifUartOk;
}
200022b0:	8082                	ret
200022b2:	4509                	li	a0,2
200022b4:	8082                	ret

200022b6 <dif_uart_byte_receive_polled>:
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:454

dif_uart_result_t dif_uart_byte_receive_polled(const dif_uart_t *uart,
                                               uint8_t *byte) {
200022b6:	862a                	mv	a2,a0
200022b8:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:455
  if (uart == NULL || byte == NULL) {
200022ba:	c205                	beqz	a2,200022da <dif_uart_byte_receive_polled+0x24>
200022bc:	cd99                	beqz	a1,200022da <dif_uart_byte_receive_polled+0x24>
200022be:	4210                	lw	a2,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200022c0:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200022c2:	02057513          	andi	a0,a0,32
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:460
    return kDifUartBadArg;
  }

  // Busy wait for the RX message in the FIFO.
  while (uart_rx_empty(uart)) {
200022c6:	fd6d                	bnez	a0,200022c0 <dif_uart_byte_receive_polled+0xa>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200022c8:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200022ca:	02057693          	andi	a3,a0,32
200022ce:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
200022d0:	e689                	bnez	a3,200022da <dif_uart_byte_receive_polled+0x24>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200022d2:	4a50                	lw	a2,20(a2)
200022d4:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
200022d6:	00c58023          	sb	a2,0(a1)
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:466
  }

  (void)uart_bytes_receive(uart, 1, byte);

  return kDifUartOk;
}
200022da:	8082                	ret

200022dc <dif_uart_rx_bytes_available>:
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:469

dif_uart_result_t dif_uart_rx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200022dc:	862a                	mv	a2,a0
200022de:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:470
  if (uart == NULL || num_bytes == NULL) {
200022e0:	ca09                	beqz	a2,200022f2 <dif_uart_rx_bytes_available+0x16>
200022e2:	c981                	beqz	a1,200022f2 <dif_uart_rx_bytes_available+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:476
    return kDifUartBadArg;
  }

  // RX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200022e4:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200022e6:	5110                	lw	a2,32(a0)
200022e8:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
200022ea:	8241                	srli	a2,a2,0x10
200022ec:	03f67613          	andi	a2,a2,63
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:477
  *num_bytes = (size_t)bitfield_field32_read(reg, UART_FIFO_STATUS_RXLVL_FIELD);
200022f0:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:480

  return kDifUartOk;
}
200022f2:	8082                	ret

200022f4 <dif_uart_tx_bytes_available>:
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:483

dif_uart_result_t dif_uart_tx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200022f4:	862a                	mv	a2,a0
200022f6:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:484
  if (uart == NULL || num_bytes == NULL) {
200022f8:	ce01                	beqz	a2,20002310 <dif_uart_tx_bytes_available+0x1c>
200022fa:	c999                	beqz	a1,20002310 <dif_uart_tx_bytes_available+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:490
    return kDifUartBadArg;
  }

  // TX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200022fc:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200022fe:	5110                	lw	a2,32(a0)
20002300:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
20002302:	03f67613          	andi	a2,a2,63
20002306:	02000693          	li	a3,32
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:493
  uint32_t fill_bytes =
      bitfield_field32_read(reg, UART_FIFO_STATUS_TXLVL_FIELD);
  *num_bytes = kDifUartFifoSizeBytes - fill_bytes;
2000230a:	40c68633          	sub	a2,a3,a2
2000230e:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:496

  return kDifUartOk;
}
20002310:	8082                	ret

20002312 <dif_uart_fifo_reset>:
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:500

dif_uart_result_t dif_uart_fifo_reset(const dif_uart_t *uart,
                                      dif_uart_fifo_reset_t reset) {
  if (uart == NULL) {
20002312:	c11d                	beqz	a0,20002338 <dif_uart_fifo_reset+0x26>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:505
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
20002314:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20002316:	4e48                	lw	a0,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507

  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
20002318:	ffd5f693          	andi	a3,a1,-3
2000231c:	0016b693          	seqz	a3,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
    reg = bitfield_bit32_write(reg, UART_FIFO_CTRL_RXRST_BIT, true);
  }

  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
20002320:	fff58713          	addi	a4,a1,-1
20002324:	4789                	li	a5,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507
  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
20002326:	00d565b3          	or	a1,a0,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
2000232a:	00f77463          	bgeu	a4,a5,20002332 <dif_uart_fifo_reset+0x20>
2000232e:	0025e593          	ori	a1,a1,2
20002332:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002334:	ce4c                	sw	a1,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:518
  }

  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
20002336:	8082                	ret
20002338:	4509                	li	a0,2
2000233a:	8082                	ret

2000233c <dif_uart_loopback_set>:
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:523

dif_uart_result_t dif_uart_loopback_set(const dif_uart_t *uart,
                                        dif_uart_loopback_t loopback,
                                        dif_uart_toggle_t enable) {
  if (uart == NULL) {
2000233c:	c515                	beqz	a0,20002368 <dif_uart_loopback_set+0x2c>
2000233e:	4681                	li	a3,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:529
    return kDifUartBadArg;
  }

  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_CTRL_REG_OFFSET);
20002340:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:527
  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
20002342:	0015b593          	seqz	a1,a1
20002346:	4715                	li	a4,5
20002348:	40b705b3          	sub	a1,a4,a1
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000234c:	4558                	lw	a4,12(a0)
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:530
  reg = bitfield_bit32_write(reg, index, enable == kDifUartToggleEnabled);
2000234e:	00163613          	seqz	a2,a2
20002352:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20002354:	00b797b3          	sll	a5,a5,a1
20002358:	fff7c793          	not	a5,a5
2000235c:	8f7d                	and	a4,a4,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
2000235e:	00b615b3          	sll	a1,a2,a1
20002362:	8dd9                	or	a1,a1,a4
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20002364:	c54c                	sw	a1,12(a0)
20002366:	a011                	j	2000236a <dif_uart_loopback_set+0x2e>
20002368:	4689                	li	a3,2
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:534
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
2000236a:	8536                	mv	a0,a3
2000236c:	8082                	ret

2000236e <dif_uart_enable_rx_timeout>:
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:537

dif_uart_result_t dif_uart_enable_rx_timeout(const dif_uart_t *uart,
                                             uint32_t duration_ticks) {
2000236e:	862a                	mv	a2,a0
20002370:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:538
  if (uart == NULL || (duration_ticks & ~UART_TIMEOUT_CTRL_VAL_MASK) != 0) {
20002372:	ca11                	beqz	a2,20002386 <dif_uart_enable_rx_timeout+0x18>
20002374:	0185d693          	srli	a3,a1,0x18
20002378:	e699                	bnez	a3,20002386 <dif_uart_enable_rx_timeout+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:545
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, true);
  reg =
      bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, duration_ticks);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
2000237a:	4210                	lw	a2,0(a2)
2000237c:	4501                	li	a0,0
2000237e:	800006b7          	lui	a3,0x80000
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
20002382:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002384:	d64c                	sw	a1,44(a2)
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:549
                      reg);

  return kDifUartOk;
}
20002386:	8082                	ret

20002388 <dif_uart_disable_rx_timeout>:
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:552

dif_uart_result_t dif_uart_disable_rx_timeout(const dif_uart_t *uart) {
  if (uart == NULL) {
20002388:	c511                	beqz	a0,20002394 <dif_uart_disable_rx_timeout+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:558
    return kDifUartBadArg;
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, false);
  reg = bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, 0);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
2000238a:	410c                	lw	a1,0(a0)
2000238c:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000238e:	0205a623          	sw	zero,44(a1)
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:562
                      reg);

  return kDifUartOk;
}
20002392:	8082                	ret
20002394:	4509                	li	a0,2
20002396:	8082                	ret

20002398 <dif_uart_get_rx_timeout>:
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:566

dif_uart_result_t dif_uart_get_rx_timeout(const dif_uart_t *uart,
                                          dif_uart_toggle_t *status,
                                          uint32_t *duration_ticks) {
20002398:	86aa                	mv	a3,a0
2000239a:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:567
  if (uart == NULL || status == NULL) {
2000239c:	ce99                	beqz	a3,200023ba <dif_uart_get_rx_timeout+0x22>
2000239e:	cd91                	beqz	a1,200023ba <dif_uart_get_rx_timeout+0x22>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:572
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET);
200023a0:	4288                	lw	a0,0(a3)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200023a2:	5554                	lw	a3,44(a0)
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:573
  *status = bitfield_bit32_read(reg, UART_TIMEOUT_CTRL_EN_BIT)
200023a4:	fff6c513          	not	a0,a3
200023a8:	817d                	srli	a0,a0,0x1f
200023aa:	c188                	sw	a0,0(a1)
200023ac:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:577
                ? kDifUartToggleEnabled
                : kDifUartToggleDisabled;

  if (duration_ticks != NULL) {
200023ae:	c611                	beqz	a2,200023ba <dif_uart_get_rx_timeout+0x22>
200023b0:	010005b7          	lui	a1,0x1000
200023b4:	15fd                	addi	a1,a1,-1
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
200023b6:	8df5                	and	a1,a1,a3
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:578
    *duration_ticks = bitfield_field32_read(reg, UART_TIMEOUT_CTRL_VAL_FIELD);
200023b8:	c20c                	sw	a1,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:582
  }

  return kDifUartOk;
}
200023ba:	8082                	ret

200023bc <read_32>:
read_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:68
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considred a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
200023bc:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:69
  return val;
200023be:	8082                	ret

200023c0 <write_32>:
write_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:94
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
200023c0:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:95
}
200023c2:	8082                	ret

200023c4 <memcpy>:
memcpy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24

#if !defined(HOST_BUILD)
void *memcpy(void *restrict dest, const void *restrict src, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t *src8 = (uint8_t *)src;
  for (size_t i = 0; i < len; ++i) {
200023c4:	ca11                	beqz	a2,200023d8 <memcpy+0x14>
200023c6:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:25
    dest8[i] = src8[i];
200023c8:	00058703          	lb	a4,0(a1) # 1000000 <test_status_set.kLogFields.2+0xfeff4c>
200023cc:	00e68023          	sb	a4,0(a3) # 80000000 <_data_init_start+0x5fffc468>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24
  for (size_t i = 0; i < len; ++i) {
200023d0:	167d                	addi	a2,a2,-1
200023d2:	0685                	addi	a3,a3,1
200023d4:	0585                	addi	a1,a1,1
200023d6:	fa6d                	bnez	a2,200023c8 <memcpy+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:27
  }
  return dest;
200023d8:	8082                	ret

200023da <memset>:
memset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35

#if !defined(HOST_BUILD)
void *memset(void *dest, int value, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
200023da:	c619                	beqz	a2,200023e8 <memset+0xe>
200023dc:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:36
    dest8[i] = value8;
200023de:	00b68023          	sb	a1,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35
  for (size_t i = 0; i < len; ++i) {
200023e2:	167d                	addi	a2,a2,-1
200023e4:	0685                	addi	a3,a3,1
200023e6:	fe65                	bnez	a2,200023de <memset+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:38
  }
  return dest;
200023e8:	8082                	ret

200023ea <memcmp>:
memcmp():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
};

int memcmp(const void *lhs, const void *rhs, size_t len) {
  const uint8_t *lhs8 = (uint8_t *)lhs;
  const uint8_t *rhs8 = (uint8_t *)rhs;
  for (size_t i = 0; i < len; ++i) {
200023ea:	ce09                	beqz	a2,20002404 <memcmp+0x1a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:53
    if (lhs8[i] < rhs8[i]) {
200023ec:	00054683          	lbu	a3,0(a0)
200023f0:	0005c703          	lbu	a4,0(a1)
200023f4:	00e6ea63          	bltu	a3,a4,20002408 <memcmp+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:55
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
200023f8:	00d76b63          	bltu	a4,a3,2000240e <memcmp+0x24>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
  for (size_t i = 0; i < len; ++i) {
200023fc:	167d                	addi	a2,a2,-1
200023fe:	0585                	addi	a1,a1,1
20002400:	0505                	addi	a0,a0,1
20002402:	f66d                	bnez	a2,200023ec <memcmp+0x2>
20002404:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:60
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
20002406:	8082                	ret
20002408:	fd600513          	li	a0,-42
2000240c:	8082                	ret
2000240e:	02a00513          	li	a0,42
20002412:	8082                	ret

20002414 <memchr>:
memchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67

#if !defined(HOST_BUILD)
void *memchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
20002414:	ca11                	beqz	a2,20002428 <memchr+0x14>
20002416:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:68
    if (ptr8[i] == value8) {
2000241a:	00054683          	lbu	a3,0(a0)
2000241e:	00b68663          	beq	a3,a1,2000242a <memchr+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67
  for (size_t i = 0; i < len; ++i) {
20002422:	167d                	addi	a2,a2,-1
20002424:	0505                	addi	a0,a0,1
20002426:	fa75                	bnez	a2,2000241a <memchr+0x6>
20002428:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:73
      return ptr8 + i;
    }
  }
  return NULL;
}
2000242a:	8082                	ret

2000242c <memrchr>:
memrchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
#endif  // !defined(HOST_BUILD)

void *memrchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
2000242c:	ce09                	beqz	a2,20002446 <memrchr+0x1a>
2000242e:	fff50693          	addi	a3,a0,-1
20002432:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:81
    size_t idx = len - i - 1;
    if (ptr8[idx] == value8) {
20002436:	00c68733          	add	a4,a3,a2
2000243a:	00074703          	lbu	a4,0(a4)
2000243e:	00b70663          	beq	a4,a1,2000244a <memrchr+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
  for (size_t i = 0; i < len; ++i) {
20002442:	167d                	addi	a2,a2,-1
20002444:	fa6d                	bnez	a2,20002436 <memrchr+0xa>
20002446:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:86
      return ptr8 + idx;
    }
  }
  return NULL;
}
20002448:	8082                	ret
2000244a:	9532                	add	a0,a0,a2
2000244c:	157d                	addi	a0,a0,-1
2000244e:	8082                	ret

20002450 <handler_exception>:
handler_exception():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:33
  while (1) {
  };
}

// Below functions are default weak exception handlers meant to be overriden
__attribute__((weak)) void handler_exception(void) {
20002450:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:37
  uint32_t mcause;
  exc_id_t exc_cause;

  CSR_READ(CSR_REG_MCAUSE, &mcause);
20002452:	de06                	sw	ra,60(sp)
20002454:	dc16                	sw	t0,56(sp)
20002456:	da1a                	sw	t1,52(sp)
20002458:	d81e                	sw	t2,48(sp)
2000245a:	d62a                	sw	a0,44(sp)
2000245c:	d42e                	sw	a1,40(sp)
2000245e:	d232                	sw	a2,36(sp)
20002460:	d036                	sw	a3,32(sp)
20002462:	ce3a                	sw	a4,28(sp)
20002464:	cc3e                	sw	a5,24(sp)
20002466:	ca42                	sw	a6,20(sp)
20002468:	c846                	sw	a7,16(sp)
2000246a:	c672                	sw	t3,12(sp)
2000246c:	c476                	sw	t4,8(sp)
2000246e:	c27a                	sw	t5,4(sp)
20002470:	c07e                	sw	t6,0(sp)
20002472:	34202573          	csrr	a0,mcause
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:38
  exc_cause = (exc_id_t)(mcause & kIdMax);
20002476:	897d                	andi	a0,a0,31
20002478:	4589                	li	a1,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40

  switch (exc_cause) {
2000247a:	00a5dc63          	bge	a1,a0,20002492 <handler_exception+0x42>
2000247e:	4599                	li	a1,6
20002480:	02a5c263          	blt	a1,a0,200024a4 <handler_exception+0x54>
20002484:	458d                	li	a1,3
20002486:	02b50c63          	beq	a0,a1,200024be <handler_exception+0x6e>
2000248a:	4595                	li	a1,5
2000248c:	02b50763          	beq	a0,a1,200024ba <handler_exception+0x6a>
20002490:	a015                	j	200024b4 <handler_exception+0x64>
20002492:	c115                	beqz	a0,200024b6 <handler_exception+0x66>
20002494:	4585                	li	a1,1
20002496:	02b50063          	beq	a0,a1,200024b6 <handler_exception+0x66>
2000249a:	4589                	li	a1,2
2000249c:	00b51c63          	bne	a0,a1,200024b4 <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:48
      break;
    case kInstAccFault:
      handler_instr_acc_fault();
      break;
    case kInstIllegalFault:
      handler_instr_ill_fault();
200024a0:	208d                	jal	20002502 <handler_instr_ill_fault>
200024a2:	a839                	j	200024c0 <handler_exception+0x70>
200024a4:	459d                	li	a1,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40
  switch (exc_cause) {
200024a6:	00b50a63          	beq	a0,a1,200024ba <handler_exception+0x6a>
200024aa:	45ad                	li	a1,11
200024ac:	00b51463          	bne	a0,a1,200024b4 <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:60
      break;
    case kStrAccFault:
      handler_lsu_fault();
      break;
    case kECall:
      handler_ecall();
200024b0:	2065                	jal	20002558 <handler_ecall>
200024b2:	a039                	j	200024c0 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:63
      break;
    default:
      while (1) {
200024b4:	a001                	j	200024b4 <handler_exception+0x64>
200024b6:	2805                	jal	200024e6 <handler_instr_acc_fault>
200024b8:	a021                	j	200024c0 <handler_exception+0x70>
200024ba:	2049                	jal	2000253c <handler_lsu_fault>
200024bc:	a011                	j	200024c0 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:51
      handler_bkpt();
200024be:	208d                	jal	20002520 <handler_bkpt>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:66
      };
  }
}
200024c0:	4f82                	lw	t6,0(sp)
200024c2:	4f12                	lw	t5,4(sp)
200024c4:	4ea2                	lw	t4,8(sp)
200024c6:	4e32                	lw	t3,12(sp)
200024c8:	48c2                	lw	a7,16(sp)
200024ca:	4852                	lw	a6,20(sp)
200024cc:	47e2                	lw	a5,24(sp)
200024ce:	4772                	lw	a4,28(sp)
200024d0:	5682                	lw	a3,32(sp)
200024d2:	5612                	lw	a2,36(sp)
200024d4:	55a2                	lw	a1,40(sp)
200024d6:	5532                	lw	a0,44(sp)
200024d8:	53c2                	lw	t2,48(sp)
200024da:	5352                	lw	t1,52(sp)
200024dc:	52e2                	lw	t0,56(sp)
200024de:	50f2                	lw	ra,60(sp)
200024e0:	6121                	addi	sp,sp,64
200024e2:	30200073          	mret

200024e6 <handler_instr_acc_fault>:
handler_instr_acc_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:86
  LOG_INFO("External IRQ triggered!");
  while (1) {
  }
}

__attribute__((weak)) void handler_instr_acc_fault(void) {
200024e6:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:87
  const char fault_msg[] =
200024e8:	de06                	sw	ra,60(sp)
200024ea:	dc22                	sw	s0,56(sp)
200024ec:	00001597          	auipc	a1,0x1
200024f0:	55058593          	addi	a1,a1,1360 # 20003a3c <__clz_tab+0x710>
200024f4:	0040                	addi	s0,sp,4
200024f6:	03400613          	li	a2,52
200024fa:	8522                	mv	a0,s0
200024fc:	35e1                	jal	200023c4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:89
      "Instruction access fault, mtval shows fault address";
  print_exc_msg(fault_msg);
200024fe:	8522                	mv	a0,s0
20002500:	2271                	jal	2000268c <print_exc_msg>

20002502 <handler_instr_ill_fault>:
handler_instr_ill_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:92
}

__attribute__((weak)) void handler_instr_ill_fault(void) {
20002502:	715d                	addi	sp,sp,-80
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:93
  const char fault_msg[] =
20002504:	c686                	sw	ra,76(sp)
20002506:	c4a2                	sw	s0,72(sp)
20002508:	00001597          	auipc	a1,0x1
2000250c:	56858593          	addi	a1,a1,1384 # 20003a70 <__clz_tab+0x744>
20002510:	00d10413          	addi	s0,sp,13
20002514:	03b00613          	li	a2,59
20002518:	8522                	mv	a0,s0
2000251a:	356d                	jal	200023c4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:95
      "Illegal Instruction fault, mtval shows instruction content";
  print_exc_msg(fault_msg);
2000251c:	8522                	mv	a0,s0
2000251e:	22bd                	jal	2000268c <print_exc_msg>

20002520 <handler_bkpt>:
handler_bkpt():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:98
}

__attribute__((weak)) void handler_bkpt(void) {
20002520:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:99
  const char exc_msg[] =
20002522:	de06                	sw	ra,60(sp)
20002524:	dc22                	sw	s0,56(sp)
20002526:	00001597          	auipc	a1,0x1
2000252a:	58558593          	addi	a1,a1,1413 # 20003aab <__clz_tab+0x77f>
2000252e:	840a                	mv	s0,sp
20002530:	03800613          	li	a2,56
20002534:	8522                	mv	a0,s0
20002536:	3579                	jal	200023c4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:101
      "Breakpoint triggerd, mtval shows the breakpoint address";
  print_exc_msg(exc_msg);
20002538:	8522                	mv	a0,s0
2000253a:	2a89                	jal	2000268c <print_exc_msg>

2000253c <handler_lsu_fault>:
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:104
}

__attribute__((weak)) void handler_lsu_fault(void) {
2000253c:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:105
  const char exc_msg[] = "Load/Store fault, mtval shows the fault address";
2000253e:	de06                	sw	ra,60(sp)
20002540:	dc22                	sw	s0,56(sp)
20002542:	00001597          	auipc	a1,0x1
20002546:	5a158593          	addi	a1,a1,1441 # 20003ae3 <__clz_tab+0x7b7>
2000254a:	0020                	addi	s0,sp,8
2000254c:	03000613          	li	a2,48
20002550:	8522                	mv	a0,s0
20002552:	3d8d                	jal	200023c4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:106
  print_exc_msg(exc_msg);
20002554:	8522                	mv	a0,s0
20002556:	2a1d                	jal	2000268c <print_exc_msg>

20002558 <handler_ecall>:
handler_ecall():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:109
}

__attribute__((weak)) void handler_ecall(void) {
20002558:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:110
  LOG_INFO("Environment call encountered");
2000255a:	ce06                	sw	ra,28(sp)
2000255c:	cc22                	sw	s0,24(sp)
2000255e:	00001517          	auipc	a0,0x1
20002562:	da250513          	addi	a0,a0,-606 # 20003300 <kDeviceLogBypassUartAddress>
20002566:	4108                	lw	a0,0(a0)
20002568:	c901                	beqz	a0,20002578 <handler_ecall+0x20>
2000256a:	e000e517          	auipc	a0,0xe000e
2000256e:	afa50513          	addi	a0,a0,-1286 # 10064 <handler_ecall.kLogFields>
20002572:	4581                	li	a1,0
20002574:	241d                	jal	2000279a <base_log_internal_dv>
20002576:	a819                	j	2000258c <handler_ecall+0x34>
20002578:	00001597          	auipc	a1,0x1
2000257c:	cbc58593          	addi	a1,a1,-836 # 20003234 <kDifUartFifoSizeBytes+0x40>
20002580:	840a                	mv	s0,sp
20002582:	4651                	li	a2,20
20002584:	8522                	mv	a0,s0
20002586:	3d3d                	jal	200023c4 <memcpy>
20002588:	8522                	mv	a0,s0
2000258a:	22ad                	jal	200026f4 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:111
  while (1) {
2000258c:	a001                	j	2000258c <handler_ecall+0x34>
2000258e:	0001                	nop

20002590 <handler_irq_software>:
handler_irq_software():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:68
__attribute__((weak)) void handler_irq_software(void) {
20002590:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:69
  LOG_INFO("Software IRQ triggered!");
20002592:	ce86                	sw	ra,92(sp)
20002594:	cc96                	sw	t0,88(sp)
20002596:	ca9a                	sw	t1,84(sp)
20002598:	c89e                	sw	t2,80(sp)
2000259a:	c6a2                	sw	s0,76(sp)
2000259c:	c4aa                	sw	a0,72(sp)
2000259e:	c2ae                	sw	a1,68(sp)
200025a0:	c0b2                	sw	a2,64(sp)
200025a2:	de36                	sw	a3,60(sp)
200025a4:	dc3a                	sw	a4,56(sp)
200025a6:	da3e                	sw	a5,52(sp)
200025a8:	d842                	sw	a6,48(sp)
200025aa:	d646                	sw	a7,44(sp)
200025ac:	d472                	sw	t3,40(sp)
200025ae:	d276                	sw	t4,36(sp)
200025b0:	d07a                	sw	t5,32(sp)
200025b2:	ce7e                	sw	t6,28(sp)
200025b4:	00001517          	auipc	a0,0x1
200025b8:	d4c50513          	addi	a0,a0,-692 # 20003300 <kDeviceLogBypassUartAddress>
200025bc:	4108                	lw	a0,0(a0)
200025be:	c901                	beqz	a0,200025ce <handler_irq_software+0x3e>
200025c0:	e000e517          	auipc	a0,0xe000e
200025c4:	a6850513          	addi	a0,a0,-1432 # 10028 <handler_irq_software.kLogFields>
200025c8:	4581                	li	a1,0
200025ca:	2ac1                	jal	2000279a <base_log_internal_dv>
200025cc:	a819                	j	200025e2 <handler_irq_software+0x52>
200025ce:	00001597          	auipc	a1,0x1
200025d2:	c2a58593          	addi	a1,a1,-982 # 200031f8 <kDifUartFifoSizeBytes+0x4>
200025d6:	0020                	addi	s0,sp,8
200025d8:	4651                	li	a2,20
200025da:	8522                	mv	a0,s0
200025dc:	33e5                	jal	200023c4 <memcpy>
200025de:	8522                	mv	a0,s0
200025e0:	2a11                	jal	200026f4 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:70
  while (1) {
200025e2:	a001                	j	200025e2 <handler_irq_software+0x52>

200025e4 <handler_irq_timer>:
handler_irq_timer():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:74
__attribute__((weak)) void handler_irq_timer(void) {
200025e4:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:75
  LOG_INFO("Timer IRQ triggered!");
200025e6:	ce86                	sw	ra,92(sp)
200025e8:	cc96                	sw	t0,88(sp)
200025ea:	ca9a                	sw	t1,84(sp)
200025ec:	c89e                	sw	t2,80(sp)
200025ee:	c6a2                	sw	s0,76(sp)
200025f0:	c4aa                	sw	a0,72(sp)
200025f2:	c2ae                	sw	a1,68(sp)
200025f4:	c0b2                	sw	a2,64(sp)
200025f6:	de36                	sw	a3,60(sp)
200025f8:	dc3a                	sw	a4,56(sp)
200025fa:	da3e                	sw	a5,52(sp)
200025fc:	d842                	sw	a6,48(sp)
200025fe:	d646                	sw	a7,44(sp)
20002600:	d472                	sw	t3,40(sp)
20002602:	d276                	sw	t4,36(sp)
20002604:	d07a                	sw	t5,32(sp)
20002606:	ce7e                	sw	t6,28(sp)
20002608:	00001517          	auipc	a0,0x1
2000260c:	cf850513          	addi	a0,a0,-776 # 20003300 <kDeviceLogBypassUartAddress>
20002610:	4108                	lw	a0,0(a0)
20002612:	c901                	beqz	a0,20002622 <handler_irq_timer+0x3e>
20002614:	e000e517          	auipc	a0,0xe000e
20002618:	a2850513          	addi	a0,a0,-1496 # 1003c <handler_irq_timer.kLogFields>
2000261c:	4581                	li	a1,0
2000261e:	2ab5                	jal	2000279a <base_log_internal_dv>
20002620:	a819                	j	20002636 <handler_irq_timer+0x52>
20002622:	00001597          	auipc	a1,0x1
20002626:	bea58593          	addi	a1,a1,-1046 # 2000320c <kDifUartFifoSizeBytes+0x18>
2000262a:	0020                	addi	s0,sp,8
2000262c:	4651                	li	a2,20
2000262e:	8522                	mv	a0,s0
20002630:	3b51                	jal	200023c4 <memcpy>
20002632:	8522                	mv	a0,s0
20002634:	20c1                	jal	200026f4 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:76
  while (1) {
20002636:	a001                	j	20002636 <handler_irq_timer+0x52>

20002638 <handler_irq_external>:
handler_irq_external():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:80
__attribute__((weak)) void handler_irq_external(void) {
20002638:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:81
  LOG_INFO("External IRQ triggered!");
2000263a:	ce86                	sw	ra,92(sp)
2000263c:	cc96                	sw	t0,88(sp)
2000263e:	ca9a                	sw	t1,84(sp)
20002640:	c89e                	sw	t2,80(sp)
20002642:	c6a2                	sw	s0,76(sp)
20002644:	c4aa                	sw	a0,72(sp)
20002646:	c2ae                	sw	a1,68(sp)
20002648:	c0b2                	sw	a2,64(sp)
2000264a:	de36                	sw	a3,60(sp)
2000264c:	dc3a                	sw	a4,56(sp)
2000264e:	da3e                	sw	a5,52(sp)
20002650:	d842                	sw	a6,48(sp)
20002652:	d646                	sw	a7,44(sp)
20002654:	d472                	sw	t3,40(sp)
20002656:	d276                	sw	t4,36(sp)
20002658:	d07a                	sw	t5,32(sp)
2000265a:	ce7e                	sw	t6,28(sp)
2000265c:	00001517          	auipc	a0,0x1
20002660:	ca450513          	addi	a0,a0,-860 # 20003300 <kDeviceLogBypassUartAddress>
20002664:	4108                	lw	a0,0(a0)
20002666:	c901                	beqz	a0,20002676 <handler_irq_external+0x3e>
20002668:	e000e517          	auipc	a0,0xe000e
2000266c:	9e850513          	addi	a0,a0,-1560 # 10050 <handler_irq_external.kLogFields>
20002670:	4581                	li	a1,0
20002672:	2225                	jal	2000279a <base_log_internal_dv>
20002674:	a819                	j	2000268a <handler_irq_external+0x52>
20002676:	00001597          	auipc	a1,0x1
2000267a:	baa58593          	addi	a1,a1,-1110 # 20003220 <kDifUartFifoSizeBytes+0x2c>
2000267e:	0020                	addi	s0,sp,8
20002680:	4651                	li	a2,20
20002682:	8522                	mv	a0,s0
20002684:	3381                	jal	200023c4 <memcpy>
20002686:	8522                	mv	a0,s0
20002688:	20b5                	jal	200026f4 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:82
  while (1) {
2000268a:	a001                	j	2000268a <handler_irq_external+0x52>

2000268c <print_exc_msg>:
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:25
static void print_exc_msg(const char *msg) {
2000268c:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
2000268e:	ce06                	sw	ra,28(sp)
20002690:	cc22                	sw	s0,24(sp)
20002692:	ca26                	sw	s1,20(sp)
20002694:	00001597          	auipc	a1,0x1
20002698:	c6c58593          	addi	a1,a1,-916 # 20003300 <kDeviceLogBypassUartAddress>
2000269c:	418c                	lw	a1,0(a1)
2000269e:	842a                	mv	s0,a0
200026a0:	c18d                	beqz	a1,200026c2 <print_exc_msg+0x36>
200026a2:	e000e517          	auipc	a0,0xe000e
200026a6:	9d650513          	addi	a0,a0,-1578 # 10078 <print_exc_msg.kLogFields>
200026aa:	4585                	li	a1,1
200026ac:	8622                	mv	a2,s0
200026ae:	20f5                	jal	2000279a <base_log_internal_dv>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
200026b0:	34302673          	csrr	a2,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
200026b4:	e000e517          	auipc	a0,0xe000e
200026b8:	9d850513          	addi	a0,a0,-1576 # 1008c <print_exc_msg.kLogFields.6>
200026bc:	4585                	li	a1,1
200026be:	28f1                	jal	2000279a <base_log_internal_dv>
200026c0:	a80d                	j	200026f2 <print_exc_msg+0x66>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
200026c2:	00001597          	auipc	a1,0x1
200026c6:	b8658593          	addi	a1,a1,-1146 # 20003248 <kDifUartFifoSizeBytes+0x54>
200026ca:	848a                	mv	s1,sp
200026cc:	4651                	li	a2,20
200026ce:	8526                	mv	a0,s1
200026d0:	39d5                	jal	200023c4 <memcpy>
200026d2:	8526                	mv	a0,s1
200026d4:	85a2                	mv	a1,s0
200026d6:	2839                	jal	200026f4 <base_log_internal_core>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
200026d8:	34302473          	csrr	s0,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
200026dc:	00001597          	auipc	a1,0x1
200026e0:	b8058593          	addi	a1,a1,-1152 # 2000325c <kDifUartFifoSizeBytes+0x68>
200026e4:	848a                	mv	s1,sp
200026e6:	4651                	li	a2,20
200026e8:	8526                	mv	a0,s1
200026ea:	39e9                	jal	200023c4 <memcpy>
200026ec:	8526                	mv	a0,s1
200026ee:	85a2                	mv	a1,s0
200026f0:	2011                	jal	200026f4 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:28
  while (1) {
200026f2:	a001                	j	200026f2 <print_exc_msg+0x66>

200026f4 <base_log_internal_core>:
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
200026f4:	7139                	addi	sp,sp,-64
200026f6:	ce06                	sw	ra,28(sp)
200026f8:	cc22                	sw	s0,24(sp)
200026fa:	ca26                	sw	s1,20(sp)
200026fc:	c84a                	sw	s2,16(sp)
200026fe:	892a                	mv	s2,a0
20002700:	de46                	sw	a7,60(sp)
20002702:	dc42                	sw	a6,56(sp)
20002704:	da3e                	sw	a5,52(sp)
20002706:	d83a                	sw	a4,48(sp)
20002708:	d636                	sw	a3,44(sp)
2000270a:	d432                	sw	a2,40(sp)
2000270c:	d22e                	sw	a1,36(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
2000270e:	4144                	lw	s1,4(a0)
20002710:	80000537          	lui	a0,0x80000
20002714:	fff50613          	addi	a2,a0,-1 # 7fffffff <_data_init_start+0x5fffc467>
20002718:	8526                	mv	a0,s1
2000271a:	4581                	li	a1,0
2000271c:	39e5                	jal	20002414 <memchr>
2000271e:	40950633          	sub	a2,a0,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
20002722:	02f00593          	li	a1,47
20002726:	8526                	mv	a0,s1
20002728:	3311                	jal	2000242c <memrchr>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
2000272a:	00092583          	lw	a1,0(s2)
2000272e:	460d                	li	a2,3
stringify_severity():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:27
  switch (severity) {
20002730:	00b66b63          	bltu	a2,a1,20002746 <base_log_internal_core+0x52>
20002734:	058a                	slli	a1,a1,0x2
20002736:	00001617          	auipc	a2,0x1
2000273a:	b3a60613          	addi	a2,a2,-1222 # 20003270 <kDifUartFifoSizeBytes+0x7c>
2000273e:	95b2                	add	a1,a1,a2
20002740:	418c                	lw	a1,0(a1)
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
20002742:	e519                	bnez	a0,20002750 <base_log_internal_core+0x5c>
20002744:	a801                	j	20002754 <base_log_internal_core+0x60>
20002746:	00001597          	auipc	a1,0x1
2000274a:	41558593          	addi	a1,a1,1045 # 20003b5b <__clz_tab+0x82f>
2000274e:	c119                	beqz	a0,20002754 <base_log_internal_core+0x60>
20002750:	00150493          	addi	s1,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
20002754:	efffe417          	auipc	s0,0xefffe
20002758:	8e440413          	addi	s0,s0,-1820 # 10000038 <base_log_internal_core.global_log_counter>
2000275c:	00045603          	lhu	a2,0(s0)
20002760:	00892703          	lw	a4,8(s2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
20002764:	00001517          	auipc	a0,0x1
20002768:	3e050513          	addi	a0,a0,992 # 20003b44 <__clz_tab+0x818>
2000276c:	86a6                	mv	a3,s1
2000276e:	20f9                	jal	2000283c <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:64
  ++global_log_counter;
20002770:	00041503          	lh	a0,0(s0)
20002774:	0505                	addi	a0,a0,1
20002776:	00a41023          	sh	a0,0(s0)
2000277a:	104c                	addi	a1,sp,36
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
2000277c:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
2000277e:	01092503          	lw	a0,16(s2)
20002782:	20dd                	jal	20002868 <base_vprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
20002784:	00001517          	auipc	a0,0x1
20002788:	3ce50513          	addi	a0,a0,974 # 20003b52 <__clz_tab+0x826>
2000278c:	2845                	jal	2000283c <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:72
}
2000278e:	4942                	lw	s2,16(sp)
20002790:	44d2                	lw	s1,20(sp)
20002792:	4462                	lw	s0,24(sp)
20002794:	40f2                	lw	ra,28(sp)
20002796:	6121                	addi	sp,sp,64
20002798:	8082                	ret

2000279a <base_log_internal_dv>:
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
2000279a:	1101                	addi	sp,sp,-32
2000279c:	ce46                	sw	a7,28(sp)
2000279e:	cc42                	sw	a6,24(sp)
200027a0:	ca3e                	sw	a5,20(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
200027a2:	00001797          	auipc	a5,0x1
200027a6:	b5e78793          	addi	a5,a5,-1186 # 20003300 <kDeviceLogBypassUartAddress>
200027aa:	439c                	lw	a5,0(a5)
200027ac:	c83a                	sw	a4,16(sp)
200027ae:	c636                	sw	a3,12(sp)
200027b0:	c432                	sw	a2,8(sp)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200027b2:	c388                	sw	a0,0(a5)
200027b4:	0028                	addi	a0,sp,8
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
200027b6:	c22a                	sw	a0,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
200027b8:	c989                	beqz	a1,200027ca <base_log_internal_dv+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
200027ba:	4512                	lw	a0,4(sp)
200027bc:	00450613          	addi	a2,a0,4
200027c0:	c232                	sw	a2,4(sp)
200027c2:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
200027c4:	15fd                	addi	a1,a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200027c6:	c388                	sw	a0,0(a5)
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
200027c8:	f9ed                	bnez	a1,200027ba <base_log_internal_dv+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
200027ca:	6105                	addi	sp,sp,32
200027cc:	8082                	ret
	...

200027d0 <base_set_stdout>:
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:56
static buffer_sink_t base_stdout = {
    .data = NULL, .sink = &base_dev_null,
};

void base_set_stdout(buffer_sink_t out) {
  if (out.sink == NULL) {
200027d0:	e589                	bnez	a1,200027da <base_set_stdout+0xa>
200027d2:	00000597          	auipc	a1,0x0
200027d6:	01258593          	addi	a1,a1,18 # 200027e4 <base_dev_null>
200027da:	80c18613          	addi	a2,gp,-2036 # 1000000c <base_stdout>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
    out.sink = &base_dev_null;
  }
  base_stdout = out;
200027de:	c208                	sw	a0,0(a2)
200027e0:	c24c                	sw	a1,4(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:60
}
200027e2:	8082                	ret

200027e4 <base_dev_null>:
base_dev_null():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:48
static size_t base_dev_null(void *data, const char *buf, size_t len) {
200027e4:	8532                	mv	a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:49
  return len;
200027e6:	8082                	ret

200027e8 <base_uart_stdout>:
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:72
    }
  }
  return len;
}

void base_uart_stdout(const dif_uart_t *uart) {
200027e8:	80c18593          	addi	a1,gp,-2036 # 1000000c <base_stdout>
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
  base_stdout = out;
200027ec:	c188                	sw	a0,0(a1)
200027ee:	00000517          	auipc	a0,0x0
200027f2:	00c50513          	addi	a0,a0,12 # 200027fa <base_dev_uart>
200027f6:	c1c8                	sw	a0,4(a1)
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:75
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}
200027f8:	8082                	ret

200027fa <base_dev_uart>:
base_dev_uart():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:62
static size_t base_dev_uart(void *data, const char *buf, size_t len) {
200027fa:	1101                	addi	sp,sp,-32
200027fc:	ce06                	sw	ra,28(sp)
200027fe:	cc22                	sw	s0,24(sp)
20002800:	ca26                	sw	s1,20(sp)
20002802:	c84a                	sw	s2,16(sp)
20002804:	c64e                	sw	s3,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
20002806:	c215                	beqz	a2,2000282a <base_dev_uart+0x30>
20002808:	8432                	mv	s0,a2
2000280a:	892e                	mv	s2,a1
2000280c:	89aa                	mv	s3,a0
2000280e:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:65
    if (dif_uart_byte_send_polled(uart, (uint8_t)buf[i]) != kDifUartOk) {
20002810:	00990533          	add	a0,s2,s1
20002814:	00054583          	lbu	a1,0(a0)
20002818:	854e                	mv	a0,s3
2000281a:	a7bff0ef          	jal	ra,20002294 <dif_uart_byte_send_polled>
2000281e:	e519                	bnez	a0,2000282c <base_dev_uart+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
20002820:	0485                	addi	s1,s1,1
20002822:	fe9417e3          	bne	s0,s1,20002810 <base_dev_uart+0x16>
20002826:	84a2                	mv	s1,s0
20002828:	a011                	j	2000282c <base_dev_uart+0x32>
2000282a:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:70
}
2000282c:	8526                	mv	a0,s1
2000282e:	49b2                	lw	s3,12(sp)
20002830:	4942                	lw	s2,16(sp)
20002832:	44d2                	lw	s1,20(sp)
20002834:	4462                	lw	s0,24(sp)
20002836:	40f2                	lw	ra,28(sp)
20002838:	6105                	addi	sp,sp,32
2000283a:	8082                	ret

2000283c <base_printf>:
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:77

size_t base_printf(const char *format, ...) {
2000283c:	7179                	addi	sp,sp,-48
2000283e:	c606                	sw	ra,12(sp)
20002840:	d646                	sw	a7,44(sp)
20002842:	d442                	sw	a6,40(sp)
20002844:	d23e                	sw	a5,36(sp)
20002846:	d03a                	sw	a4,32(sp)
20002848:	ce36                	sw	a3,28(sp)
2000284a:	cc32                	sw	a2,24(sp)
2000284c:	ca2e                	sw	a1,20(sp)
2000284e:	80c18593          	addi	a1,gp,-2036 # 1000000c <base_stdout>
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
20002852:	4190                	lw	a2,0(a1)
20002854:	41cc                	lw	a1,4(a1)
20002856:	872a                	mv	a4,a0
20002858:	0854                	addi	a3,sp,20
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:79
  va_start(args, format);
2000285a:	c436                	sw	a3,8(sp)
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
2000285c:	8532                	mv	a0,a2
2000285e:	863a                	mv	a2,a4
20002860:	2839                	jal	2000287e <base_vfprintf>
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:82
  return bytes_left;
20002862:	40b2                	lw	ra,12(sp)
20002864:	6145                	addi	sp,sp,48
20002866:	8082                	ret

20002868 <base_vprintf>:
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:85
size_t base_vprintf(const char *format, va_list args) {
20002868:	80c18693          	addi	a3,gp,-2036 # 1000000c <base_stdout>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
2000286c:	4290                	lw	a2,0(a3)
2000286e:	42d4                	lw	a3,4(a3)
20002870:	872e                	mv	a4,a1
20002872:	87aa                	mv	a5,a0
20002874:	8532                	mv	a0,a2
20002876:	85b6                	mv	a1,a3
20002878:	863e                	mv	a2,a5
2000287a:	86ba                	mv	a3,a4
2000287c:	a009                	j	2000287e <base_vfprintf>

2000287e <base_vfprintf>:
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:344
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
2000287e:	7139                	addi	sp,sp,-64
20002880:	de06                	sw	ra,60(sp)
20002882:	dc22                	sw	s0,56(sp)
20002884:	da26                	sw	s1,52(sp)
20002886:	d84a                	sw	s2,48(sp)
20002888:	d64e                	sw	s3,44(sp)
2000288a:	d452                	sw	s4,40(sp)
2000288c:	d256                	sw	s5,36(sp)
2000288e:	d05a                	sw	s6,32(sp)
20002890:	ce5e                	sw	s7,28(sp)
20002892:	cc62                	sw	s8,24(sp)
20002894:	ca66                	sw	s9,20(sp)
20002896:	c86a                	sw	s10,16(sp)
20002898:	c66e                	sw	s11,12(sp)
2000289a:	8bb2                	mv	s7,a2
2000289c:	892a                	mv	s2,a0
2000289e:	c236                	sw	a3,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:345
  if (out.sink == NULL) {
200028a0:	c199                	beqz	a1,200028a6 <base_vfprintf+0x28>
200028a2:	89ae                	mv	s3,a1
200028a4:	a029                	j	200028ae <base_vfprintf+0x30>
200028a6:	00000997          	auipc	s3,0x0
200028aa:	f3e98993          	addi	s3,s3,-194 # 200027e4 <base_dev_null>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:354
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
200028ae:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357

  size_t bytes_written = 0;
  while (format[0] != '\0') {
200028b0:	000bc503          	lbu	a0,0(s7)
200028b4:	28050f63          	beqz	a0,20002b52 <base_vfprintf+0x2d4>
200028b8:	4b01                	li	s6,0
200028ba:	02500c13          	li	s8,37
200028be:	4ca5                	li	s9,9
200028c0:	02000d13          	li	s10,32
200028c4:	06800d93          	li	s11,104
200028c8:	00001a17          	auipc	s4,0x1
200028cc:	295a0a13          	addi	s4,s4,661 # 20003b5d <__clz_tab+0x831>
200028d0:	4aa9                	li	s5,10
consume_until_percent():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:143
  size_t text_len = 0;
200028d2:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:146
    if (c == '\0' || c == kPercent) {
200028d4:	0ff57413          	andi	s0,a0,255
200028d8:	01840963          	beq	s0,s8,200028ea <base_vfprintf+0x6c>
200028dc:	c419                	beqz	s0,200028ea <base_vfprintf+0x6c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:145
    char c = (*format)[text_len];
200028de:	009b8533          	add	a0,s7,s1
200028e2:	00154503          	lbu	a0,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:153
    ++text_len;
200028e6:	0485                	addi	s1,s1,1
200028e8:	b7f5                	j	200028d4 <base_vfprintf+0x56>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:147
      if (text_len > 0) {
200028ea:	c491                	beqz	s1,200028f6 <base_vfprintf+0x78>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:148
        *bytes_written += out.sink(out.data, *format, text_len);
200028ec:	854a                	mv	a0,s2
200028ee:	85de                	mv	a1,s7
200028f0:	8626                	mv	a2,s1
200028f2:	9982                	jalr	s3
200028f4:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:358
    if (!consume_until_percent(out, &format, &bytes_written)) {
200028f6:	24040f63          	beqz	s0,20002b54 <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
200028fa:	009b8633          	add	a2,s7,s1
200028fe:	00164503          	lbu	a0,1(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20002902:	22050f63          	beqz	a0,20002b40 <base_vfprintf+0x2c2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
20002906:	fd050593          	addi	a1,a0,-48
2000290a:	0ff5f593          	andi	a1,a1,255
2000290e:	00bcf863          	bgeu	s9,a1,2000291e <base_vfprintf+0xa0>
20002912:	4401                	li	s0,0
20002914:	4581                	li	a1,0
20002916:	4605                	li	a2,1
20002918:	028d7f63          	bgeu	s10,s0,20002956 <base_vfprintf+0xd8>
2000291c:	aca1                	j	20002b74 <base_vfprintf+0x2f6>
2000291e:	4581                	li	a1,0
20002920:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20002922:	0609                	addi	a2,a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
20002924:	00b606b3          	add	a3,a2,a1
20002928:	0006c683          	lbu	a3,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
2000292c:	20068a63          	beqz	a3,20002b40 <base_vfprintf+0x2c2>
20002930:	0ff57513          	andi	a0,a0,255
20002934:	03540733          	mul	a4,s0,s5
20002938:	953a                	add	a0,a0,a4
2000293a:	fd050413          	addi	s0,a0,-48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
2000293e:	fd068513          	addi	a0,a3,-48
20002942:	0ff57713          	andi	a4,a0,255
20002946:	0585                	addi	a1,a1,1
20002948:	8536                	mv	a0,a3
2000294a:	fcecfde3          	bgeu	s9,a4,20002924 <base_vfprintf+0xa6>
2000294e:	4601                	li	a2,0
20002950:	8536                	mv	a0,a3
20002952:	228d6163          	bltu	s10,s0,20002b74 <base_vfprintf+0x2f6>
20002956:	008036b3          	snez	a3,s0
2000295a:	8e55                	or	a2,a2,a3
2000295c:	20060c63          	beqz	a2,20002b74 <base_vfprintf+0x2f6>
process_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20002960:	95de                	add	a1,a1,s7
20002962:	95a6                	add	a1,a1,s1
20002964:	00258b93          	addi	s7,a1,2
20002968:	02adce63          	blt	s11,a0,200029a4 <base_vfprintf+0x126>
2000296c:	06100593          	li	a1,97
20002970:	06a5d563          	bge	a1,a0,200029da <base_vfprintf+0x15c>
20002974:	06300593          	li	a1,99
20002978:	0ca5cb63          	blt	a1,a0,20002a4e <base_vfprintf+0x1d0>
2000297c:	06200593          	li	a1,98
20002980:	14b50a63          	beq	a0,a1,20002ad4 <base_vfprintf+0x256>
20002984:	06300593          	li	a1,99
20002988:	18b51f63          	bne	a0,a1,20002b26 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:269
      char value = (char)va_arg(*args, uint32_t);
2000298c:	4502                	lw	a0,0(sp)
2000298e:	00450593          	addi	a1,a0,4
20002992:	c02e                	sw	a1,0(sp)
20002994:	4108                	lw	a0,0(a0)
20002996:	00a105a3          	sb	a0,11(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:270
      *bytes_written += out.sink(out.data, &value, 1);
2000299a:	4605                	li	a2,1
2000299c:	854a                	mv	a0,s2
2000299e:	00b10593          	addi	a1,sp,11
200029a2:	aa41                	j	20002b32 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
200029a4:	07200593          	li	a1,114
200029a8:	04a5dd63          	bge	a1,a0,20002a02 <base_vfprintf+0x184>
200029ac:	07700593          	li	a1,119
200029b0:	0aa5c663          	blt	a1,a0,20002a5c <base_vfprintf+0x1de>
200029b4:	07300593          	li	a1,115
200029b8:	12b50963          	beq	a0,a1,20002aea <base_vfprintf+0x26c>
200029bc:	07500593          	li	a1,117
200029c0:	16b51363          	bne	a0,a1,20002b26 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:329
      uint32_t value = va_arg(*args, uint32_t);
200029c4:	4502                	lw	a0,0(sp)
200029c6:	00450593          	addi	a1,a0,4
200029ca:	c02e                	sw	a1,0(sp)
200029cc:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:330
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
200029ce:	00001797          	auipc	a5,0x1
200029d2:	8cf78793          	addi	a5,a5,-1841 # 2000329d <kDigitsLow>
200029d6:	4729                	li	a4,10
200029d8:	a8cd                	j	20002aca <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
200029da:	13850763          	beq	a0,s8,20002b08 <base_vfprintf+0x28a>
200029de:	04800593          	li	a1,72
200029e2:	00b50663          	beq	a0,a1,200029ee <base_vfprintf+0x170>
200029e6:	05800593          	li	a1,88
200029ea:	12b51e63          	bne	a0,a1,20002b26 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:324
      uint32_t value = va_arg(*args, uint32_t);
200029ee:	4502                	lw	a0,0(sp)
200029f0:	00450593          	addi	a1,a0,4
200029f4:	c02e                	sw	a1,0(sp)
200029f6:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:325
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsHigh);
200029f8:	00001797          	auipc	a5,0x1
200029fc:	8b578793          	addi	a5,a5,-1867 # 200032ad <kDigitsHigh>
20002a00:	a0e1                	j	20002ac8 <base_vfprintf+0x24a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20002a02:	06900593          	li	a1,105
20002a06:	06b50d63          	beq	a0,a1,20002a80 <base_vfprintf+0x202>
20002a0a:	06f00593          	li	a1,111
20002a0e:	10b50163          	beq	a0,a1,20002b10 <base_vfprintf+0x292>
20002a12:	07000593          	li	a1,112
20002a16:	10b51863          	bne	a0,a1,20002b26 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20002a1a:	00001597          	auipc	a1,0x1
20002a1e:	14758593          	addi	a1,a1,327 # 20003b61 <__clz_tab+0x835>
20002a22:	4609                	li	a2,2
20002a24:	854a                	mv	a0,s2
20002a26:	9982                	jalr	s3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:311
      uintptr_t value = va_arg(*args, uintptr_t);
20002a28:	4582                	lw	a1,0(sp)
20002a2a:	00458613          	addi	a2,a1,4
20002a2e:	c032                	sw	a2,0(sp)
20002a30:	4190                	lw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20002a32:	01650433          	add	s0,a0,s6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:313
          write_digits(out, value, sizeof(uintptr_t) * 2, 16, kDigitsLow);
20002a36:	00001797          	auipc	a5,0x1
20002a3a:	86778793          	addi	a5,a5,-1945 # 2000329d <kDigitsLow>
20002a3e:	46a1                	li	a3,8
20002a40:	4741                	li	a4,16
20002a42:	854a                	mv	a0,s2
20002a44:	85ce                	mv	a1,s3
20002a46:	2a5d                	jal	20002bfc <write_digits>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:312
      *bytes_written +=
20002a48:	00a40b33          	add	s6,s0,a0
20002a4c:	a0ed                	j	20002b36 <base_vfprintf+0x2b8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20002a4e:	06400593          	li	a1,100
20002a52:	02b50763          	beq	a0,a1,20002a80 <base_vfprintf+0x202>
20002a56:	07b50063          	beq	a0,s11,20002ab6 <base_vfprintf+0x238>
20002a5a:	a0f1                	j	20002b26 <base_vfprintf+0x2a8>
20002a5c:	07800593          	li	a1,120
20002a60:	04b50b63          	beq	a0,a1,20002ab6 <base_vfprintf+0x238>
20002a64:	07a00593          	li	a1,122
20002a68:	0ab51f63          	bne	a0,a1,20002b26 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:283
      size_t len = va_arg(*args, size_t);
20002a6c:	4502                	lw	a0,0(sp)
20002a6e:	00450593          	addi	a1,a0,4
20002a72:	c02e                	sw	a1,0(sp)
20002a74:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:284
      char *value = va_arg(*args, char *);
20002a76:	00850593          	addi	a1,a0,8
20002a7a:	c02e                	sw	a1,0(sp)
20002a7c:	414c                	lw	a1,4(a0)
20002a7e:	a84d                	j	20002b30 <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:290
      uint32_t value = va_arg(*args, uint32_t);
20002a80:	4502                	lw	a0,0(sp)
20002a82:	00450593          	addi	a1,a0,4
20002a86:	c02e                	sw	a1,0(sp)
20002a88:	4104                	lw	s1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:291
      if (((int32_t)value) < 0) {
20002a8a:	557d                	li	a0,-1
20002a8c:	00954c63          	blt	a0,s1,20002aa4 <base_vfprintf+0x226>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:292
        *bytes_written += out.sink(out.data, "-", 1);
20002a90:	00001597          	auipc	a1,0x1
20002a94:	0cf58593          	addi	a1,a1,207 # 20003b5f <__clz_tab+0x833>
20002a98:	4605                	li	a2,1
20002a9a:	854a                	mv	a0,s2
20002a9c:	9982                	jalr	s3
20002a9e:	9b2a                	add	s6,s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:293
        value = -value;
20002aa0:	409004b3          	neg	s1,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:295
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
20002aa4:	00000797          	auipc	a5,0x0
20002aa8:	7f978793          	addi	a5,a5,2041 # 2000329d <kDigitsLow>
20002aac:	4729                	li	a4,10
20002aae:	854a                	mv	a0,s2
20002ab0:	85ce                	mv	a1,s3
20002ab2:	8626                	mv	a2,s1
20002ab4:	a829                	j	20002ace <base_vfprintf+0x250>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:318
      uint32_t value = va_arg(*args, uint32_t);
20002ab6:	4502                	lw	a0,0(sp)
20002ab8:	00450593          	addi	a1,a0,4
20002abc:	c02e                	sw	a1,0(sp)
20002abe:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:319
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsLow);
20002ac0:	00000797          	auipc	a5,0x0
20002ac4:	7dd78793          	addi	a5,a5,2013 # 2000329d <kDigitsLow>
20002ac8:	4741                	li	a4,16
20002aca:	854a                	mv	a0,s2
20002acc:	85ce                	mv	a1,s3
20002ace:	86a2                	mv	a3,s0
20002ad0:	2235                	jal	20002bfc <write_digits>
20002ad2:	a08d                	j	20002b34 <base_vfprintf+0x2b6>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:334
      uint32_t value = va_arg(*args, uint32_t);
20002ad4:	4502                	lw	a0,0(sp)
20002ad6:	00450593          	addi	a1,a0,4
20002ada:	c02e                	sw	a1,0(sp)
20002adc:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:335
      *bytes_written += write_digits(out, value, spec.width, 2, kDigitsLow);
20002ade:	00000797          	auipc	a5,0x0
20002ae2:	7bf78793          	addi	a5,a5,1983 # 2000329d <kDigitsLow>
20002ae6:	4709                	li	a4,2
20002ae8:	b7cd                	j	20002aca <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:274
      char *value = va_arg(*args, char *);
20002aea:	4502                	lw	a0,0(sp)
20002aec:	00450593          	addi	a1,a0,4
20002af0:	c02e                	sw	a1,0(sp)
20002af2:	410c                	lw	a1,0(a0)
20002af4:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
20002af6:	00a58633          	add	a2,a1,a0
20002afa:	00064603          	lbu	a2,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:277
        ++len;
20002afe:	0505                	addi	a0,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
20002b00:	fa7d                	bnez	a2,20002af6 <base_vfprintf+0x278>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:279
      *bytes_written += out.sink(out.data, value, len);
20002b02:	fff50613          	addi	a2,a0,-1
20002b06:	a02d                	j	20002b30 <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:265
      *bytes_written += out.sink(out.data, "%", 1);
20002b08:	4605                	li	a2,1
20002b0a:	854a                	mv	a0,s2
20002b0c:	85d2                	mv	a1,s4
20002b0e:	a015                	j	20002b32 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:299
      uint32_t value = va_arg(*args, uint32_t);
20002b10:	4502                	lw	a0,0(sp)
20002b12:	00450593          	addi	a1,a0,4
20002b16:	c02e                	sw	a1,0(sp)
20002b18:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:300
      *bytes_written += write_digits(out, value, spec.width, 8, kDigitsLow);
20002b1a:	00000797          	auipc	a5,0x0
20002b1e:	78378793          	addi	a5,a5,1923 # 2000329d <kDigitsLow>
20002b22:	4721                	li	a4,8
20002b24:	b75d                	j	20002aca <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:339
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
20002b26:	00000597          	auipc	a1,0x0
20002b2a:	79758593          	addi	a1,a1,1943 # 200032bd <kUnknownSpec>
20002b2e:	463d                	li	a2,15
20002b30:	854a                	mv	a0,s2
20002b32:	9982                	jalr	s3
20002b34:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357
  while (format[0] != '\0') {
20002b36:	000bc503          	lbu	a0,0(s7)
20002b3a:	d8051ce3          	bnez	a0,200028d2 <base_vfprintf+0x54>
20002b3e:	a819                	j	20002b54 <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:190
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
20002b40:	00000597          	auipc	a1,0x0
20002b44:	74058593          	addi	a1,a1,1856 # 20003280 <kErrorNul>
20002b48:	4645                	li	a2,17
20002b4a:	854a                	mv	a0,s2
20002b4c:	9982                	jalr	s3
20002b4e:	9b2a                	add	s6,s6,a0
20002b50:	a011                	j	20002b54 <base_vfprintf+0x2d6>
20002b52:	4b01                	li	s6,0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:370

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
20002b54:	855a                	mv	a0,s6
20002b56:	4db2                	lw	s11,12(sp)
20002b58:	4d42                	lw	s10,16(sp)
20002b5a:	4cd2                	lw	s9,20(sp)
20002b5c:	4c62                	lw	s8,24(sp)
20002b5e:	4bf2                	lw	s7,28(sp)
20002b60:	5b02                	lw	s6,32(sp)
20002b62:	5a92                	lw	s5,36(sp)
20002b64:	5a22                	lw	s4,40(sp)
20002b66:	59b2                	lw	s3,44(sp)
20002b68:	5942                	lw	s2,48(sp)
20002b6a:	54d2                	lw	s1,52(sp)
20002b6c:	5462                	lw	s0,56(sp)
20002b6e:	50f2                	lw	ra,60(sp)
20002b70:	6121                	addi	sp,sp,64
20002b72:	8082                	ret
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:203
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
20002b74:	00000597          	auipc	a1,0x0
20002b78:	71d58593          	addi	a1,a1,1821 # 20003291 <kErrorTooWide>
20002b7c:	4631                	li	a2,12
20002b7e:	b7f1                	j	20002b4a <base_vfprintf+0x2cc>

20002b80 <base_snprintf>:
base_snprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:109
size_t base_snprintf(char *buf, size_t len, const char *format, ...) {
20002b80:	7179                	addi	sp,sp,-48
20002b82:	ca06                	sw	ra,20(sp)
20002b84:	d646                	sw	a7,44(sp)
20002b86:	d442                	sw	a6,40(sp)
20002b88:	d23e                	sw	a5,36(sp)
20002b8a:	d03a                	sw	a4,32(sp)
20002b8c:	ce36                	sw	a3,28(sp)
20002b8e:	0874                	addi	a3,sp,28
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:111
  va_start(args, format);
20002b90:	c836                	sw	a3,16(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:113
  snprintf_captures_t data = {
20002b92:	c42a                	sw	a0,8(sp)
20002b94:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:119
  size_t bytes_left = base_vfprintf(out, format, args);
20002b96:	00000597          	auipc	a1,0x0
20002b9a:	01258593          	addi	a1,a1,18 # 20002ba8 <snprintf_sink>
20002b9e:	0028                	addi	a0,sp,8
20002ba0:	39f9                	jal	2000287e <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:121
  return bytes_left;
20002ba2:	40d2                	lw	ra,20(sp)
20002ba4:	6145                	addi	sp,sp,48
20002ba6:	8082                	ret

20002ba8 <snprintf_sink>:
snprintf_sink():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:94
static size_t snprintf_sink(void *data, const char *buf, size_t len) {
20002ba8:	1141                	addi	sp,sp,-16
20002baa:	c606                	sw	ra,12(sp)
20002bac:	c422                	sw	s0,8(sp)
20002bae:	c226                	sw	s1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:96
  if (captures->bytes_left == 0) {
20002bb0:	4140                	lw	s0,4(a0)
20002bb2:	c00d                	beqz	s0,20002bd4 <snprintf_sink+0x2c>
20002bb4:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:100
  if (len > captures->bytes_left) {
20002bb6:	00c46363          	bltu	s0,a2,20002bbc <snprintf_sink+0x14>
20002bba:	8432                	mv	s0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:103
  memcpy(captures->buf, buf, len);
20002bbc:	4088                	lw	a0,0(s1)
20002bbe:	8622                	mv	a2,s0
20002bc0:	805ff0ef          	jal	ra,200023c4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
20002bc4:	4088                	lw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
20002bc6:	40cc                	lw	a1,4(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
20002bc8:	9522                	add	a0,a0,s0
20002bca:	c088                	sw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
20002bcc:	40858533          	sub	a0,a1,s0
20002bd0:	c0c8                	sw	a0,4(s1)
20002bd2:	a011                	j	20002bd6 <snprintf_sink+0x2e>
20002bd4:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:107
}
20002bd6:	8522                	mv	a0,s0
20002bd8:	4492                	lw	s1,4(sp)
20002bda:	4422                	lw	s0,8(sp)
20002bdc:	40b2                	lw	ra,12(sp)
20002bde:	0141                	addi	sp,sp,16
20002be0:	8082                	ret

20002be2 <base_fprintf>:
base_fprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:124
size_t base_fprintf(buffer_sink_t out, const char *format, ...) {
20002be2:	1101                	addi	sp,sp,-32
20002be4:	c206                	sw	ra,4(sp)
20002be6:	ce46                	sw	a7,28(sp)
20002be8:	cc42                	sw	a6,24(sp)
20002bea:	ca3e                	sw	a5,20(sp)
20002bec:	c83a                	sw	a4,16(sp)
20002bee:	c636                	sw	a3,12(sp)
20002bf0:	0074                	addi	a3,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:126
  va_start(args, format);
20002bf2:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:127
  size_t bytes_left = base_vfprintf(out, format, args);
20002bf4:	3169                	jal	2000287e <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:129
  return bytes_left;
20002bf6:	4092                	lw	ra,4(sp)
20002bf8:	6105                	addi	sp,sp,32
20002bfa:	8082                	ret

20002bfc <write_digits>:
write_digits():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:225
                           uint32_t base, const char *glyphs) {
20002bfc:	7139                	addi	sp,sp,-64
20002bfe:	de06                	sw	ra,60(sp)
20002c00:	dc22                	sw	s0,56(sp)
20002c02:	da26                	sw	s1,52(sp)
20002c04:	d84a                	sw	s2,48(sp)
20002c06:	d64e                	sw	s3,44(sp)
20002c08:	892e                	mv	s2,a1
20002c0a:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20002c0c:	ca05                	beqz	a2,20002c3c <write_digits+0x40>
20002c0e:	4501                	li	a0,0
20002c10:	02b10813          	addi	a6,sp,43
20002c14:	84b2                	mv	s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:234
    value /= base;
20002c16:	02e65633          	divu	a2,a2,a4
20002c1a:	02e60433          	mul	s0,a2,a4
20002c1e:	40848433          	sub	s0,s1,s0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:235
    buffer[kWordBits - 1 - len] = glyphs[digit];
20002c22:	943e                	add	s0,s0,a5
20002c24:	00040403          	lb	s0,0(s0)
20002c28:	00a805b3          	add	a1,a6,a0
20002c2c:	00858023          	sb	s0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20002c30:	157d                	addi	a0,a0,-1
20002c32:	fee4f1e3          	bgeu	s1,a4,20002c14 <write_digits+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:238
  width = width == 0 ? 1 : width;
20002c36:	40a00633          	neg	a2,a0
20002c3a:	a011                	j	20002c3e <write_digits+0x42>
20002c3c:	4601                	li	a2,0
20002c3e:	4485                	li	s1,1
20002c40:	c291                	beqz	a3,20002c44 <write_digits+0x48>
20002c42:	84b6                	mv	s1,a3
20002c44:	02000513          	li	a0,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:239
  width = width > kWordBits ? kWordBits : width;
20002c48:	00a4e463          	bltu	s1,a0,20002c50 <write_digits+0x54>
20002c4c:	02000493          	li	s1,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
20002c50:	02967063          	bgeu	a2,s1,20002c70 <write_digits+0x74>
20002c54:	0068                	addi	a0,sp,12
20002c56:	8d05                	sub	a0,a0,s1
20002c58:	02050513          	addi	a0,a0,32
20002c5c:	40c48433          	sub	s0,s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:241
    buffer[kWordBits - len - 1] = '0';
20002c60:	03000593          	li	a1,48
20002c64:	8622                	mv	a2,s0
20002c66:	f74ff0ef          	jal	ra,200023da <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
20002c6a:	147d                	addi	s0,s0,-1
20002c6c:	fc7d                	bnez	s0,20002c6a <write_digits+0x6e>
20002c6e:	8626                	mv	a2,s1
20002c70:	0068                	addi	a0,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:244
  return out.sink(out.data, buffer + (kWordBits - len), len);
20002c72:	8d11                	sub	a0,a0,a2
20002c74:	02050593          	addi	a1,a0,32
20002c78:	854e                	mv	a0,s3
20002c7a:	9902                	jalr	s2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:245
}
20002c7c:	59b2                	lw	s3,44(sp)
20002c7e:	5942                	lw	s2,48(sp)
20002c80:	54d2                	lw	s1,52(sp)
20002c82:	5462                	lw	s0,56(sp)
20002c84:	50f2                	lw	ra,60(sp)
20002c86:	6121                	addi	sp,sp,64
20002c88:	8082                	ret
	...

20002c8c <test_status_set>:
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
20002c8c:	1101                	addi	sp,sp,-32
20002c8e:	ce06                	sw	ra,28(sp)
20002c90:	cc22                	sw	s0,24(sp)
20002c92:	65b1                	lui	a1,0xc
20002c94:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:26
  switch (test_status) {
20002c98:	02b50163          	beq	a0,a1,20002cba <test_status_set+0x2e>
20002c9c:	65a5                	lui	a1,0x9
20002c9e:	05b5                	addi	a1,a1,13
20002ca0:	04b50063          	beq	a0,a1,20002ce0 <test_status_set+0x54>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
20002ca4:	00000597          	auipc	a1,0x0
20002ca8:	65858593          	addi	a1,a1,1624 # 200032fc <kDeviceTestStatusAddress>
20002cac:	418c                	lw	a1,0(a1)
20002cae:	c191                	beqz	a1,20002cb2 <test_status_set+0x26>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20002cb0:	c188                	sw	a0,0(a1)
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
20002cb2:	4462                	lw	s0,24(sp)
20002cb4:	40f2                	lw	ra,28(sp)
20002cb6:	6105                	addi	sp,sp,32
20002cb8:	8082                	ret
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
20002cba:	00000517          	auipc	a0,0x0
20002cbe:	64650513          	addi	a0,a0,1606 # 20003300 <kDeviceLogBypassUartAddress>
20002cc2:	4108                	lw	a0,0(a0)
20002cc4:	e129                	bnez	a0,20002d06 <test_status_set+0x7a>
20002cc6:	00000597          	auipc	a1,0x0
20002cca:	65258593          	addi	a1,a1,1618 # 20003318 <kDeviceLogBypassUartAddress+0x18>
20002cce:	840a                	mv	s0,sp
20002cd0:	4651                	li	a2,20
20002cd2:	8522                	mv	a0,s0
20002cd4:	ef0ff0ef          	jal	ra,200023c4 <memcpy>
20002cd8:	8522                	mv	a0,s0
20002cda:	a1bff0ef          	jal	ra,200026f4 <base_log_internal_core>
20002cde:	a81d                	j	20002d14 <test_status_set+0x88>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
20002ce0:	00000517          	auipc	a0,0x0
20002ce4:	62050513          	addi	a0,a0,1568 # 20003300 <kDeviceLogBypassUartAddress>
20002ce8:	4108                	lw	a0,0(a0)
20002cea:	ed1d                	bnez	a0,20002d28 <test_status_set+0x9c>
20002cec:	00000597          	auipc	a1,0x0
20002cf0:	61858593          	addi	a1,a1,1560 # 20003304 <kDeviceLogBypassUartAddress+0x4>
20002cf4:	840a                	mv	s0,sp
20002cf6:	4651                	li	a2,20
20002cf8:	8522                	mv	a0,s0
20002cfa:	ecaff0ef          	jal	ra,200023c4 <memcpy>
20002cfe:	8522                	mv	a0,s0
20002d00:	9f5ff0ef          	jal	ra,200026f4 <base_log_internal_core>
20002d04:	a80d                	j	20002d36 <test_status_set+0xaa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
20002d06:	e000d517          	auipc	a0,0xe000d
20002d0a:	3ae50513          	addi	a0,a0,942 # 100b4 <test_status_set.kLogFields.2>
20002d0e:	4581                	li	a1,0
20002d10:	a8bff0ef          	jal	ra,2000279a <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
20002d14:	00000517          	auipc	a0,0x0
20002d18:	5e850513          	addi	a0,a0,1512 # 200032fc <kDeviceTestStatusAddress>
20002d1c:	4108                	lw	a0,0(a0)
20002d1e:	c50d                	beqz	a0,20002d48 <test_status_set+0xbc>
20002d20:	65b1                	lui	a1,0xc
20002d22:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
20002d26:	a005                	j	20002d46 <test_status_set+0xba>
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
20002d28:	e000d517          	auipc	a0,0xe000d
20002d2c:	37850513          	addi	a0,a0,888 # 100a0 <test_status_set.kLogFields>
20002d30:	4581                	li	a1,0
20002d32:	a69ff0ef          	jal	ra,2000279a <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
20002d36:	00000517          	auipc	a0,0x0
20002d3a:	5c650513          	addi	a0,a0,1478 # 200032fc <kDeviceTestStatusAddress>
20002d3e:	4108                	lw	a0,0(a0)
20002d40:	c501                	beqz	a0,20002d48 <test_status_set+0xbc>
20002d42:	65a5                	lui	a1,0x9
20002d44:	05b5                	addi	a1,a1,13
20002d46:	c10c                	sw	a1,0(a0)
20002d48:	2049                	jal	20002dca <abort>
	...

20002d4c <wait_for_interrupt>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
 * Hints to the processor that we don't have anything better to be doing, and to
 * go into low-power mode until an interrupt is serviced.
 *
 * This function may behave as if it is a no-op.
 */
inline void wait_for_interrupt(void) { asm volatile("wfi"); }
20002d4c:	10500073          	wfi
20002d50:	8082                	ret

20002d52 <usleep>:
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:14
#include "sw/device/lib/arch/device.h"
#include "sw/device/lib/runtime/ibex.h"

extern void wait_for_interrupt(void);

void usleep(uint32_t usec) {
20002d52:	1141                	addi	sp,sp,-16
20002d54:	c606                	sw	ra,12(sp)
20002d56:	00000597          	auipc	a1,0x0
20002d5a:	58258593          	addi	a1,a1,1410 # 200032d8 <kClockFreqCpuHz>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:15
  uint64_t cycles = kClockFreqCpuHz * usec / 1000000;
20002d5e:	41d0                	lw	a2,4(a1)
20002d60:	4194                	lw	a3,0(a1)
20002d62:	02a605b3          	mul	a1,a2,a0
20002d66:	02a6b633          	mulhu	a2,a3,a0
20002d6a:	95b2                	add	a1,a1,a2
20002d6c:	02a68533          	mul	a0,a3,a0
20002d70:	000f4637          	lui	a2,0xf4
20002d74:	24060613          	addi	a2,a2,576 # f4240 <test_status_set.kLogFields.2+0xe418c>
20002d78:	4681                	li	a3,0
20002d7a:	2899                	jal	20002dd0 <__udivdi3>
ibex_mcycle_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/ibex.h:32
 */
inline uint64_t ibex_mcycle_read(void) {
  uint32_t cycle_low = 0;
  uint32_t cycle_high = 0;
  uint32_t cycle_high_2 = 0;
  asm volatile(
20002d7c:	4801                	li	a6,0
20002d7e:	4701                	li	a4,0

20002d80 <read0>:
20002d80:	b8002873          	csrr	a6,mcycleh
20002d84:	b00026f3          	csrr	a3,mcycle
20002d88:	b8002773          	csrr	a4,mcycleh
20002d8c:	fee81ae3          	bne	a6,a4,20002d80 <read0>
20002d90:	4781                	li	a5,0
20002d92:	4601                	li	a2,0

20002d94 <read1>:
20002d94:	b80027f3          	csrr	a5,mcycleh
20002d98:	b0002773          	csrr	a4,mcycle
20002d9c:	b8002673          	csrr	a2,mcycleh
20002da0:	fec79ae3          	bne	a5,a2,20002d94 <read1>
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:17
  uint64_t start = ibex_mcycle_read();
  while ((ibex_mcycle_read() - start) < cycles) {
20002da4:	00d73633          	sltu	a2,a4,a3
20002da8:	410787b3          	sub	a5,a5,a6
20002dac:	8f91                	sub	a5,a5,a2
20002dae:	00b78663          	beq	a5,a1,20002dba <read1+0x26>
20002db2:	00b7b733          	sltu	a4,a5,a1
20002db6:	ff69                	bnez	a4,20002d90 <read0+0x10>
20002db8:	a031                	j	20002dc4 <read1+0x30>
20002dba:	40d70633          	sub	a2,a4,a3
20002dbe:	00a63733          	sltu	a4,a2,a0
20002dc2:	f779                	bnez	a4,20002d90 <read0+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:19
  }
}
20002dc4:	40b2                	lw	ra,12(sp)
20002dc6:	0141                	addi	sp,sp,16
20002dc8:	8082                	ret

20002dca <abort>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
20002dca:	10500073          	wfi
abort():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:22

noreturn void abort(void) {
  while (true) {
20002dce:	bff5                	j	20002dca <abort>

20002dd0 <__udivdi3>:
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1319
20002dd0:	88aa                	mv	a7,a0
20002dd2:	87ae                	mv	a5,a1
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1024
20002dd4:	8832                	mv	a6,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1025
20002dd6:	8536                	mv	a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1026
20002dd8:	8346                	mv	t1,a7
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1064
20002dda:	20069963          	bnez	a3,20002fec <__udivdi3+0x21c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1066
20002dde:	200036b7          	lui	a3,0x20003
20002de2:	32c68693          	addi	a3,a3,812 # 2000332c <__clz_tab>
20002de6:	0cc5f063          	bgeu	a1,a2,20002ea6 <__udivdi3+0xd6>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
20002dea:	6741                	lui	a4,0x10
20002dec:	0ae67663          	bgeu	a2,a4,20002e98 <__udivdi3+0xc8>
20002df0:	0ff00713          	li	a4,255
20002df4:	00c73733          	sltu	a4,a4,a2
20002df8:	070e                	slli	a4,a4,0x3
20002dfa:	00e65533          	srl	a0,a2,a4
20002dfe:	96aa                	add	a3,a3,a0
20002e00:	0006c683          	lbu	a3,0(a3)
20002e04:	02000513          	li	a0,32
20002e08:	9736                	add	a4,a4,a3
20002e0a:	40e506b3          	sub	a3,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1072
20002e0e:	00e50c63          	beq	a0,a4,20002e26 <__udivdi3+0x56>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
20002e12:	00d797b3          	sll	a5,a5,a3
20002e16:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1077
20002e1a:	00d61833          	sll	a6,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
20002e1e:	00f765b3          	or	a1,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1079
20002e22:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1082
20002e26:	01085893          	srli	a7,a6,0x10
20002e2a:	0315d7b3          	divu	a5,a1,a7
20002e2e:	01081613          	slli	a2,a6,0x10
20002e32:	8241                	srli	a2,a2,0x10
20002e34:	01035713          	srli	a4,t1,0x10
20002e38:	0315f6b3          	remu	a3,a1,a7
20002e3c:	853e                	mv	a0,a5
20002e3e:	02f605b3          	mul	a1,a2,a5
20002e42:	06c2                	slli	a3,a3,0x10
20002e44:	8f55                	or	a4,a4,a3
20002e46:	00b77c63          	bgeu	a4,a1,20002e5e <__udivdi3+0x8e>
20002e4a:	9742                	add	a4,a4,a6
20002e4c:	fff78513          	addi	a0,a5,-1
20002e50:	01076763          	bltu	a4,a6,20002e5e <__udivdi3+0x8e>
20002e54:	00b77563          	bgeu	a4,a1,20002e5e <__udivdi3+0x8e>
20002e58:	ffe78513          	addi	a0,a5,-2
20002e5c:	9742                	add	a4,a4,a6
20002e5e:	8f0d                	sub	a4,a4,a1
20002e60:	031777b3          	remu	a5,a4,a7
20002e64:	0342                	slli	t1,t1,0x10
20002e66:	01035313          	srli	t1,t1,0x10
20002e6a:	03175733          	divu	a4,a4,a7
20002e6e:	07c2                	slli	a5,a5,0x10
20002e70:	0067e333          	or	t1,a5,t1
20002e74:	02e606b3          	mul	a3,a2,a4
20002e78:	863a                	mv	a2,a4
20002e7a:	00d37b63          	bgeu	t1,a3,20002e90 <__udivdi3+0xc0>
20002e7e:	9342                	add	t1,t1,a6
20002e80:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
20002e84:	01036663          	bltu	t1,a6,20002e90 <__udivdi3+0xc0>
20002e88:	00d37463          	bgeu	t1,a3,20002e90 <__udivdi3+0xc0>
20002e8c:	ffe70613          	addi	a2,a4,-2
20002e90:	0542                	slli	a0,a0,0x10
20002e92:	8d51                	or	a0,a0,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
20002e94:	4581                	li	a1,0
20002e96:	a85d                	j	20002f4c <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
20002e98:	01000537          	lui	a0,0x1000
20002e9c:	4741                	li	a4,16
20002e9e:	f4a66ee3          	bltu	a2,a0,20002dfa <__udivdi3+0x2a>
20002ea2:	4761                	li	a4,24
20002ea4:	bf99                	j	20002dfa <__udivdi3+0x2a>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1091
20002ea6:	e601                	bnez	a2,20002eae <__udivdi3+0xde>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1092
20002ea8:	4705                	li	a4,1
20002eaa:	02c75833          	divu	a6,a4,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
20002eae:	6741                	lui	a4,0x10
20002eb0:	08e87f63          	bgeu	a6,a4,20002f4e <__udivdi3+0x17e>
20002eb4:	0ff00713          	li	a4,255
20002eb8:	01077363          	bgeu	a4,a6,20002ebe <__udivdi3+0xee>
20002ebc:	4521                	li	a0,8
20002ebe:	00a85733          	srl	a4,a6,a0
20002ec2:	96ba                	add	a3,a3,a4
20002ec4:	0006c703          	lbu	a4,0(a3)
20002ec8:	02000613          	li	a2,32
20002ecc:	972a                	add	a4,a4,a0
20002ece:	40e606b3          	sub	a3,a2,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1096
20002ed2:	08e61563          	bne	a2,a4,20002f5c <__udivdi3+0x18c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1105
20002ed6:	410787b3          	sub	a5,a5,a6
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1106
20002eda:	4585                	li	a1,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1124
20002edc:	01085893          	srli	a7,a6,0x10
20002ee0:	01081613          	slli	a2,a6,0x10
20002ee4:	8241                	srli	a2,a2,0x10
20002ee6:	01035713          	srli	a4,t1,0x10
20002eea:	0317f6b3          	remu	a3,a5,a7
20002eee:	0317d7b3          	divu	a5,a5,a7
20002ef2:	06c2                	slli	a3,a3,0x10
20002ef4:	8f55                	or	a4,a4,a3
20002ef6:	02f60e33          	mul	t3,a2,a5
20002efa:	853e                	mv	a0,a5
20002efc:	01c77c63          	bgeu	a4,t3,20002f14 <__udivdi3+0x144>
20002f00:	9742                	add	a4,a4,a6
20002f02:	fff78513          	addi	a0,a5,-1
20002f06:	01076763          	bltu	a4,a6,20002f14 <__udivdi3+0x144>
20002f0a:	01c77563          	bgeu	a4,t3,20002f14 <__udivdi3+0x144>
20002f0e:	ffe78513          	addi	a0,a5,-2
20002f12:	9742                	add	a4,a4,a6
20002f14:	41c70733          	sub	a4,a4,t3
20002f18:	031777b3          	remu	a5,a4,a7
20002f1c:	0342                	slli	t1,t1,0x10
20002f1e:	01035313          	srli	t1,t1,0x10
20002f22:	03175733          	divu	a4,a4,a7
20002f26:	07c2                	slli	a5,a5,0x10
20002f28:	0067e333          	or	t1,a5,t1
20002f2c:	02e606b3          	mul	a3,a2,a4
20002f30:	863a                	mv	a2,a4
20002f32:	00d37b63          	bgeu	t1,a3,20002f48 <__udivdi3+0x178>
20002f36:	9342                	add	t1,t1,a6
20002f38:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
20002f3c:	01036663          	bltu	t1,a6,20002f48 <__udivdi3+0x178>
20002f40:	00d37463          	bgeu	t1,a3,20002f48 <__udivdi3+0x178>
20002f44:	ffe70613          	addi	a2,a4,-2
20002f48:	0542                	slli	a0,a0,0x10
20002f4a:	8d51                	or	a0,a0,a2
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1321
20002f4c:	8082                	ret
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
20002f4e:	01000737          	lui	a4,0x1000
20002f52:	4541                	li	a0,16
20002f54:	f6e865e3          	bltu	a6,a4,20002ebe <__udivdi3+0xee>
20002f58:	4561                	li	a0,24
20002f5a:	b795                	j	20002ebe <__udivdi3+0xee>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1114
20002f5c:	00d81833          	sll	a6,a6,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1115
20002f60:	00e7d5b3          	srl	a1,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1117
20002f64:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
20002f68:	00d797b3          	sll	a5,a5,a3
20002f6c:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
20002f70:	01085893          	srli	a7,a6,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
20002f74:	00f76633          	or	a2,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
20002f78:	0315f733          	remu	a4,a1,a7
20002f7c:	01081793          	slli	a5,a6,0x10
20002f80:	83c1                	srli	a5,a5,0x10
20002f82:	01065513          	srli	a0,a2,0x10
20002f86:	0315d5b3          	divu	a1,a1,a7
20002f8a:	0742                	slli	a4,a4,0x10
20002f8c:	8f49                	or	a4,a4,a0
20002f8e:	02b786b3          	mul	a3,a5,a1
20002f92:	852e                	mv	a0,a1
20002f94:	00d77c63          	bgeu	a4,a3,20002fac <__udivdi3+0x1dc>
20002f98:	9742                	add	a4,a4,a6
20002f9a:	fff58513          	addi	a0,a1,-1
20002f9e:	01076763          	bltu	a4,a6,20002fac <__udivdi3+0x1dc>
20002fa2:	00d77563          	bgeu	a4,a3,20002fac <__udivdi3+0x1dc>
20002fa6:	ffe58513          	addi	a0,a1,-2
20002faa:	9742                	add	a4,a4,a6
20002fac:	40d706b3          	sub	a3,a4,a3
20002fb0:	0316f733          	remu	a4,a3,a7
20002fb4:	0642                	slli	a2,a2,0x10
20002fb6:	8241                	srli	a2,a2,0x10
20002fb8:	0316d6b3          	divu	a3,a3,a7
20002fbc:	0742                	slli	a4,a4,0x10
20002fbe:	02d788b3          	mul	a7,a5,a3
20002fc2:	00c767b3          	or	a5,a4,a2
20002fc6:	8736                	mv	a4,a3
20002fc8:	0117fc63          	bgeu	a5,a7,20002fe0 <__udivdi3+0x210>
20002fcc:	97c2                	add	a5,a5,a6
20002fce:	fff68713          	addi	a4,a3,-1
20002fd2:	0107e763          	bltu	a5,a6,20002fe0 <__udivdi3+0x210>
20002fd6:	0117f563          	bgeu	a5,a7,20002fe0 <__udivdi3+0x210>
20002fda:	ffe68713          	addi	a4,a3,-2
20002fde:	97c2                	add	a5,a5,a6
20002fe0:	01051593          	slli	a1,a0,0x10
20002fe4:	411787b3          	sub	a5,a5,a7
20002fe8:	8dd9                	or	a1,a1,a4
20002fea:	bdcd                	j	20002edc <__udivdi3+0x10c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1140
20002fec:	14d5e263          	bltu	a1,a3,20003130 <__udivdi3+0x360>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20002ff0:	6741                	lui	a4,0x10
20002ff2:	02e6ff63          	bgeu	a3,a4,20003030 <__udivdi3+0x260>
20002ff6:	0ff00713          	li	a4,255
20002ffa:	00d735b3          	sltu	a1,a4,a3
20002ffe:	058e                	slli	a1,a1,0x3
20003000:	20003737          	lui	a4,0x20003
20003004:	00b6d533          	srl	a0,a3,a1
20003008:	32c70713          	addi	a4,a4,812 # 2000332c <__clz_tab>
2000300c:	972a                	add	a4,a4,a0
2000300e:	00074703          	lbu	a4,0(a4)
20003012:	02000513          	li	a0,32
20003016:	972e                	add	a4,a4,a1
20003018:	40e505b3          	sub	a1,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1160
2000301c:	02e51163          	bne	a0,a4,2000303e <__udivdi3+0x26e>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1172
20003020:	4505                	li	a0,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1170
20003022:	f2f6e5e3          	bltu	a3,a5,20002f4c <__udivdi3+0x17c>
20003026:	00c8b533          	sltu	a0,a7,a2
2000302a:	00154513          	xori	a0,a0,1
2000302e:	bf39                	j	20002f4c <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20003030:	01000737          	lui	a4,0x1000
20003034:	45c1                	li	a1,16
20003036:	fce6e5e3          	bltu	a3,a4,20003000 <__udivdi3+0x230>
2000303a:	45e1                	li	a1,24
2000303c:	b7d1                	j	20003000 <__udivdi3+0x230>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1194
2000303e:	00e65333          	srl	t1,a2,a4
20003042:	00b696b3          	sll	a3,a3,a1
20003046:	00d36333          	or	t1,t1,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
2000304a:	01035513          	srli	a0,t1,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1195
2000304e:	00b61eb3          	sll	t4,a2,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1196
20003052:	00e7d633          	srl	a2,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20003056:	02a676b3          	remu	a3,a2,a0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1197
2000305a:	00b797b3          	sll	a5,a5,a1
2000305e:	00e8d733          	srl	a4,a7,a4
20003062:	00f76833          	or	a6,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20003066:	01031793          	slli	a5,t1,0x10
2000306a:	83c1                	srli	a5,a5,0x10
2000306c:	01085713          	srli	a4,a6,0x10
20003070:	02a65633          	divu	a2,a2,a0
20003074:	06c2                	slli	a3,a3,0x10
20003076:	8f55                	or	a4,a4,a3
20003078:	02c78f33          	mul	t5,a5,a2
2000307c:	8e32                	mv	t3,a2
2000307e:	01e77c63          	bgeu	a4,t5,20003096 <__udivdi3+0x2c6>
20003082:	971a                	add	a4,a4,t1
20003084:	fff60e13          	addi	t3,a2,-1
20003088:	00676763          	bltu	a4,t1,20003096 <__udivdi3+0x2c6>
2000308c:	01e77563          	bgeu	a4,t5,20003096 <__udivdi3+0x2c6>
20003090:	ffe60e13          	addi	t3,a2,-2
20003094:	971a                	add	a4,a4,t1
20003096:	41e70733          	sub	a4,a4,t5
2000309a:	02a776b3          	remu	a3,a4,a0
2000309e:	02a75733          	divu	a4,a4,a0
200030a2:	06c2                	slli	a3,a3,0x10
200030a4:	02e78633          	mul	a2,a5,a4
200030a8:	01081793          	slli	a5,a6,0x10
200030ac:	83c1                	srli	a5,a5,0x10
200030ae:	8fd5                	or	a5,a5,a3
200030b0:	86ba                	mv	a3,a4
200030b2:	00c7fc63          	bgeu	a5,a2,200030ca <__udivdi3+0x2fa>
200030b6:	979a                	add	a5,a5,t1
200030b8:	fff70693          	addi	a3,a4,-1 # ffffff <test_status_set.kLogFields.2+0xfeff4b>
200030bc:	0067e763          	bltu	a5,t1,200030ca <__udivdi3+0x2fa>
200030c0:	00c7f563          	bgeu	a5,a2,200030ca <__udivdi3+0x2fa>
200030c4:	ffe70693          	addi	a3,a4,-2
200030c8:	979a                	add	a5,a5,t1
200030ca:	010e1513          	slli	a0,t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
200030ce:	6e41                	lui	t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
200030d0:	8d55                	or	a0,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
200030d2:	fffe0693          	addi	a3,t3,-1 # ffff <_stack_size+0xdfff>
200030d6:	00d57833          	and	a6,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
200030da:	8f91                	sub	a5,a5,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
200030dc:	00def6b3          	and	a3,t4,a3
200030e0:	01055613          	srli	a2,a0,0x10
200030e4:	010ede93          	srli	t4,t4,0x10
200030e8:	02d80333          	mul	t1,a6,a3
200030ec:	02d606b3          	mul	a3,a2,a3
200030f0:	01035713          	srli	a4,t1,0x10
200030f4:	03d80833          	mul	a6,a6,t4
200030f8:	9836                	add	a6,a6,a3
200030fa:	9742                	add	a4,a4,a6
200030fc:	03d60633          	mul	a2,a2,t4
20003100:	00d77363          	bgeu	a4,a3,20003106 <__udivdi3+0x336>
20003104:	9672                	add	a2,a2,t3
20003106:	01075693          	srli	a3,a4,0x10
2000310a:	9636                	add	a2,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
2000310c:	02c7e063          	bltu	a5,a2,2000312c <__udivdi3+0x35c>
20003110:	d8c792e3          	bne	a5,a2,20002e94 <__udivdi3+0xc4>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20003114:	67c1                	lui	a5,0x10
20003116:	17fd                	addi	a5,a5,-1
20003118:	8f7d                	and	a4,a4,a5
2000311a:	0742                	slli	a4,a4,0x10
2000311c:	00f37333          	and	t1,t1,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1198
20003120:	00b898b3          	sll	a7,a7,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20003124:	971a                	add	a4,a4,t1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
20003126:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
20003128:	e2e8f2e3          	bgeu	a7,a4,20002f4c <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1205
2000312c:	157d                	addi	a0,a0,-1
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1206
2000312e:	b39d                	j	20002e94 <__udivdi3+0xc4>
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1145
20003130:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1144
20003132:	4501                	li	a0,0
20003134:	bd21                	j	20002f4c <__udivdi3+0x17c>
