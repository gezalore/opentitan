
sw/device/tests/pmp_smoketest_napot_sim_dv.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .flash_header 00000004  20000000  20000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .crt          000000da  20000004  20000004  00001004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .vectors      00000080  20000100  20000100  00001100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .init_array   00000000  20000180  20000180  00004008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .text         000019e2  20000180  20000180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .rodata       00000688  20001b68  20001b68  00002b68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         00000008  10000000  200021f0  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000c00  10000400  20002800  00004400  2**10
                  ALLOC
  8 .logs.fields  00000140  00010000  00010000  00004008  2**2
                  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  00004148  2**0
                  CONTENTS, READONLY
 10 .debug_info   00006902  00000000  00000000  0000416e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001555  00000000  00000000  0000aa70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000098  00000000  00000000  0000bfc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00004017  00000000  00000000  0000c05d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000036f1  00000000  00000000  00010074  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000330  00000000  00000000  00013765  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00002221  00000000  00000000  00013a95  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  0000075c  00000000  00000000  00015cb8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .crt:

20000004 <_start>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:38
_start:
  .globl _start

  // Set up the stack. We have no expectation that the rom that
  // jumps here will have the correct stack start linked in.
  la sp, _stack_end
20000004:	f0020117          	auipc	sp,0xf0020
20000008:	ffc10113          	addi	sp,sp,-4 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:44

  // Set up the global pointer. This requires that we disable linker relaxations
  // (or it will be relaxed to `mv gp, gp`).
  .option push
  .option norelax
  la gp, __global_pointer$
2000000c:	f0000197          	auipc	gp,0xf0000
20000010:	7f418193          	addi	gp,gp,2036 # 10000800 <__global_pointer$>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:48
  .option pop

  // Set up the new interrupt vector.
  la   t0, crt_interrupt_vector
20000014:	00000297          	auipc	t0,0x0
20000018:	0ec28293          	addi	t0,t0,236 # 20000100 <crt_interrupt_vector>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:49
  csrw mtvec, t0
2000001c:	30529073          	csrw	mtvec,t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:52

  // Zero out the `.bss` segment.
  la   a0, _bss_start
20000020:	c0018513          	addi	a0,gp,-1024 # 10000400 <_bss_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:53
  la   a1, _bss_end
20000024:	f0001597          	auipc	a1,0xf0001
20000028:	fdc58593          	addi	a1,a1,-36 # 10001000 <_bss_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:54
  call crt_section_clear
2000002c:	2891                	jal	20000080 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:57

  // Zero out the stack
  la   a0, _stack_start
2000002e:	f001e517          	auipc	a0,0xf001e
20000032:	fd250513          	addi	a0,a0,-46 # 1001e000 <_stack_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:58
  la   a1, _stack_end
20000036:	f0020597          	auipc	a1,0xf0020
2000003a:	fca58593          	addi	a1,a1,-54 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:59
  call crt_section_clear
2000003e:	2089                	jal	20000080 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:62

  // Initialize the `.data` segment from the `.idata` segment.
  la   a0, _data_start
20000040:	f0000517          	auipc	a0,0xf0000
20000044:	fc050513          	addi	a0,a0,-64 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:63
  la   a1, _data_end
20000048:	80818593          	addi	a1,gp,-2040 # 10000008 <_data_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:64
  la   a2, _data_init_start
2000004c:	00002617          	auipc	a2,0x2
20000050:	1a460613          	addi	a2,a2,420 # 200021f0 <_data_init_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:65
  call crt_section_copy
20000054:	2881                	jal	200000a4 <crt_section_copy>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:77
  // functions must be called before the instrumented functions in the program.
  //
  // We use `s0` and `s1` to represent the start and end pointers of
  // `.init_array`, respectively, and `t0` to store the addresses of the
  // functions to be called.
  la   s0, _init_array_start
20000056:	00000417          	auipc	s0,0x0
2000005a:	12a40413          	addi	s0,s0,298 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:78
  la   s1, _init_array_end
2000005e:	00000497          	auipc	s1,0x0
20000062:	12248493          	addi	s1,s1,290 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:79
  bgeu s0, s1, init_array_loop_end
20000066:	00947863          	bgeu	s0,s1,20000076 <init_array_loop_end>

2000006a <init_array_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:81
init_array_loop:
  lw   t0, 0(s0)
2000006a:	00042283          	lw	t0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:82
  jalr t0
2000006e:	9282                	jalr	t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:83
  addi s0, s0, 0x4
20000070:	0411                	addi	s0,s0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:84
  bltu s0, s1, init_array_loop
20000072:	fe946ce3          	bltu	s0,s1,2000006a <init_array_loop>

20000076 <init_array_loop_end>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:89
init_array_loop_end:

  // Jump into the C program entry point. This is your standard
  // C `main()`, so we need to pass dummy values for `argc` and `argv`.
  li   a0, 0x0  // argc = 0
20000076:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:90
  li   a1, 0x0  // argv = NULL
20000078:	4581                	li	a1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:91
  call main
2000007a:	432000ef          	jal	ra,200004ac <main>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:94

  // Halt the core (wfi loop)
  tail abort
2000007e:	a249                	j	20000200 <abort>

20000080 <crt_section_clear>:
crt_section_clear():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:36
crt_section_clear:
  .globl crt_section_clear
  .type crt_section_clear, @function

  // Check that start is before end.
  bgeu a0, a1, L_clear_nothing
20000080:	00b57e63          	bgeu	a0,a1,2000009c <L_clear_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:39

  // Check that start and end are word aligned.
  or   t0, a0, a1
20000084:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:40
  andi t0, t0, 0x3
20000088:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:41
  bnez t0, L_clear_error
2000008c:	00029b63          	bnez	t0,200000a2 <L_clear_error>

20000090 <L_clear_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:46

L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
20000090:	00052023          	sw	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:47
  addi a0, a0, 4
20000094:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:48
  bltu a0, a1, L_clear_loop
20000096:	feb56de3          	bltu	a0,a1,20000090 <L_clear_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:49
  ret
2000009a:	8082                	ret

2000009c <L_clear_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:54

L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_clear_error
2000009c:	00b51363          	bne	a0,a1,200000a2 <L_clear_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:55
  ret
200000a0:	8082                	ret

200000a2 <L_clear_error>:
	...

200000a4 <crt_section_copy>:
crt_section_copy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:87
crt_section_copy:
  .global crt_section_copy
  .type crt_section_copy, @function

  // Check that start is before end.
  bgeu a0, a1, L_copy_nothing
200000a4:	02b57963          	bgeu	a0,a1,200000d6 <L_copy_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:90

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
200000a8:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:91
  or   t0, t0, a2
200000ac:	00c2e2b3          	or	t0,t0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:92
  andi t0, t0, 0x3
200000b0:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:93
  bnez t0, L_copy_error
200000b4:	02029463          	bnez	t0,200000dc <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:110
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
200000b8:	40c502b3          	sub	t0,a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:111
  sub  t1, a1, a0           // end - start
200000bc:	40a58333          	sub	t1,a1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:112
  bltu t0, t1, L_copy_error
200000c0:	0062ee63          	bltu	t0,t1,200000dc <L_copy_error>

200000c4 <L_copy_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:117

L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
200000c4:	00062283          	lw	t0,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:118
  addi a2, a2, 4
200000c8:	0611                	addi	a2,a2,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:119
  sw   t0, 0(a0)
200000ca:	00552023          	sw	t0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:120
  addi a0, a0, 4
200000ce:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:121
  bltu a0, a1, L_copy_loop
200000d0:	feb56ae3          	bltu	a0,a1,200000c4 <L_copy_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:122
  ret
200000d4:	8082                	ret

200000d6 <L_copy_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:127

L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_copy_error
200000d6:	00b51363          	bne	a0,a1,200000dc <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:128
  ret
200000da:	8082                	ret

200000dc <L_copy_error>:
	...

Disassembly of section .vectors:

20000100 <crt_interrupt_vector>:
crt_interrupt_vector():
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:49
  .balign 256
crt_interrupt_vector:
  .global crt_interrupt_vector

  // exception Handler and user software interrupt
  j handler_exception
20000100:	1080006f          	j	20000208 <handler_exception>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:51
  // supervisor software interrupt
  unimp
20000104:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:53
  // reserved
  unimp
20000108:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:55
  // machine software interrupt handler
  j handler_irq_software
2000010c:	23c0006f          	j	20000348 <handler_irq_software>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:58

  // user timer interrupt
  unimp
20000110:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:60
  // supervisor timer interrupt
  unimp
20000114:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:62
  // reserved
  unimp
20000118:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:64
  // machine timer interrupt handler
  j handler_irq_timer
2000011c:	2800006f          	j	2000039c <handler_irq_timer>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:67

  // user external interrupt
  unimp
20000120:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:69
  // supervisor external interrupt
  unimp
20000124:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:71
  // reserved
  unimp
20000128:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:73
  // machine external interrupt handler
  j handler_irq_external
2000012c:	2c40006f          	j	200003f0 <handler_irq_external>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:76

  // reserved
  unimp
20000130:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:77
  unimp
20000134:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:78
  unimp
20000138:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:79
  unimp
2000013c:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:82

  // vendor interrupts: on Ibex interrupt ids 30-16 are the "fast" interrupts
  .rept 15
20000140:	c0001073          	unimp
20000144:	c0001073          	unimp
20000148:	c0001073          	unimp
2000014c:	c0001073          	unimp
20000150:	c0001073          	unimp
20000154:	c0001073          	unimp
20000158:	c0001073          	unimp
2000015c:	c0001073          	unimp
20000160:	c0001073          	unimp
20000164:	c0001073          	unimp
20000168:	c0001073          	unimp
2000016c:	c0001073          	unimp
20000170:	c0001073          	unimp
20000174:	c0001073          	unimp
20000178:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:87
  unimp
  .endr

  // vendor interrupts: on Ibex interrupt id 31 is for non-maskable interrupts
  unimp
2000017c:	c0001073          	unimp

Disassembly of section .text:

20000180 <wait_for_interrupt>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
 * Hints to the processor that we don't have anything better to be doing, and to
 * go into low-power mode until an interrupt is serviced.
 *
 * This function may behave as if it is a no-op.
 */
inline void wait_for_interrupt(void) { asm volatile("wfi"); }
20000180:	10500073          	wfi
20000184:	8082                	ret

20000186 <usleep>:
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:14
#include "sw/device/lib/arch/device.h"
#include "sw/device/lib/runtime/ibex.h"

extern void wait_for_interrupt(void);

void usleep(uint32_t usec) {
20000186:	1141                	addi	sp,sp,-16
20000188:	c606                	sw	ra,12(sp)
2000018a:	00002597          	auipc	a1,0x2
2000018e:	a8658593          	addi	a1,a1,-1402 # 20001c10 <kClockFreqCpuHz>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:15
  uint64_t cycles = kClockFreqCpuHz * usec / 1000000;
20000192:	41d0                	lw	a2,4(a1)
20000194:	4194                	lw	a3,0(a1)
20000196:	02a605b3          	mul	a1,a2,a0
2000019a:	02a6b633          	mulhu	a2,a3,a0
2000019e:	95b2                	add	a1,a1,a2
200001a0:	02a68533          	mul	a0,a3,a0
200001a4:	000f4637          	lui	a2,0xf4
200001a8:	24060613          	addi	a2,a2,576 # f4240 <test_status_set.kLogFields.2+0xe4114>
200001ac:	4681                	li	a3,0
200001ae:	64e010ef          	jal	ra,200017fc <__udivdi3>
ibex_mcycle_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/ibex.h:32
 */
inline uint64_t ibex_mcycle_read(void) {
  uint32_t cycle_low = 0;
  uint32_t cycle_high = 0;
  uint32_t cycle_high_2 = 0;
  asm volatile(
200001b2:	4801                	li	a6,0
200001b4:	4701                	li	a4,0

200001b6 <read0>:
200001b6:	b8002873          	csrr	a6,mcycleh
200001ba:	b00026f3          	csrr	a3,mcycle
200001be:	b8002773          	csrr	a4,mcycleh
200001c2:	fee81ae3          	bne	a6,a4,200001b6 <read0>
200001c6:	4781                	li	a5,0
200001c8:	4601                	li	a2,0

200001ca <read1>:
200001ca:	b80027f3          	csrr	a5,mcycleh
200001ce:	b0002773          	csrr	a4,mcycle
200001d2:	b8002673          	csrr	a2,mcycleh
200001d6:	fec79ae3          	bne	a5,a2,200001ca <read1>
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:17
  uint64_t start = ibex_mcycle_read();
  while ((ibex_mcycle_read() - start) < cycles) {
200001da:	00d73633          	sltu	a2,a4,a3
200001de:	410787b3          	sub	a5,a5,a6
200001e2:	8f91                	sub	a5,a5,a2
200001e4:	00b78663          	beq	a5,a1,200001f0 <read1+0x26>
200001e8:	00b7b733          	sltu	a4,a5,a1
200001ec:	ff69                	bnez	a4,200001c6 <read0+0x10>
200001ee:	a031                	j	200001fa <read1+0x30>
200001f0:	40d70633          	sub	a2,a4,a3
200001f4:	00a63733          	sltu	a4,a2,a0
200001f8:	f779                	bnez	a4,200001c6 <read0+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:19
  }
}
200001fa:	40b2                	lw	ra,12(sp)
200001fc:	0141                	addi	sp,sp,16
200001fe:	8082                	ret

20000200 <abort>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
20000200:	10500073          	wfi
abort():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:22

noreturn void abort(void) {
  while (true) {
20000204:	bff5                	j	20000200 <abort>
	...

20000208 <handler_exception>:
handler_exception():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:33
  while (1) {
  };
}

// Below functions are default weak exception handlers meant to be overriden
__attribute__((weak)) void handler_exception(void) {
20000208:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:37
  uint32_t mcause;
  exc_id_t exc_cause;

  CSR_READ(CSR_REG_MCAUSE, &mcause);
2000020a:	de06                	sw	ra,60(sp)
2000020c:	dc16                	sw	t0,56(sp)
2000020e:	da1a                	sw	t1,52(sp)
20000210:	d81e                	sw	t2,48(sp)
20000212:	d62a                	sw	a0,44(sp)
20000214:	d42e                	sw	a1,40(sp)
20000216:	d232                	sw	a2,36(sp)
20000218:	d036                	sw	a3,32(sp)
2000021a:	ce3a                	sw	a4,28(sp)
2000021c:	cc3e                	sw	a5,24(sp)
2000021e:	ca42                	sw	a6,20(sp)
20000220:	c846                	sw	a7,16(sp)
20000222:	c672                	sw	t3,12(sp)
20000224:	c476                	sw	t4,8(sp)
20000226:	c27a                	sw	t5,4(sp)
20000228:	c07e                	sw	t6,0(sp)
2000022a:	34202573          	csrr	a0,mcause
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:38
  exc_cause = (exc_id_t)(mcause & kIdMax);
2000022e:	897d                	andi	a0,a0,31
20000230:	4589                	li	a1,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40

  switch (exc_cause) {
20000232:	00a5dc63          	bge	a1,a0,2000024a <handler_exception+0x42>
20000236:	4599                	li	a1,6
20000238:	02a5c263          	blt	a1,a0,2000025c <handler_exception+0x54>
2000023c:	458d                	li	a1,3
2000023e:	02b50c63          	beq	a0,a1,20000276 <handler_exception+0x6e>
20000242:	4595                	li	a1,5
20000244:	02b50763          	beq	a0,a1,20000272 <handler_exception+0x6a>
20000248:	a015                	j	2000026c <handler_exception+0x64>
2000024a:	c115                	beqz	a0,2000026e <handler_exception+0x66>
2000024c:	4585                	li	a1,1
2000024e:	02b50063          	beq	a0,a1,2000026e <handler_exception+0x66>
20000252:	4589                	li	a1,2
20000254:	00b51c63          	bne	a0,a1,2000026c <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:48
      break;
    case kInstAccFault:
      handler_instr_acc_fault();
      break;
    case kInstIllegalFault:
      handler_instr_ill_fault();
20000258:	208d                	jal	200002ba <handler_instr_ill_fault>
2000025a:	a839                	j	20000278 <handler_exception+0x70>
2000025c:	459d                	li	a1,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40
  switch (exc_cause) {
2000025e:	00b50a63          	beq	a0,a1,20000272 <handler_exception+0x6a>
20000262:	45ad                	li	a1,11
20000264:	00b51463          	bne	a0,a1,2000026c <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:60
      break;
    case kStrAccFault:
      handler_lsu_fault();
      break;
    case kECall:
      handler_ecall();
20000268:	2065                	jal	20000310 <handler_ecall>
2000026a:	a039                	j	20000278 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:63
      break;
    default:
      while (1) {
2000026c:	a001                	j	2000026c <handler_exception+0x64>
2000026e:	2805                	jal	2000029e <handler_instr_acc_fault>
20000270:	a021                	j	20000278 <handler_exception+0x70>
20000272:	26dd                	jal	20000658 <handler_lsu_fault>
20000274:	a011                	j	20000278 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:51
      handler_bkpt();
20000276:	208d                	jal	200002d8 <handler_bkpt>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:66
      };
  }
}
20000278:	4f82                	lw	t6,0(sp)
2000027a:	4f12                	lw	t5,4(sp)
2000027c:	4ea2                	lw	t4,8(sp)
2000027e:	4e32                	lw	t3,12(sp)
20000280:	48c2                	lw	a7,16(sp)
20000282:	4852                	lw	a6,20(sp)
20000284:	47e2                	lw	a5,24(sp)
20000286:	4772                	lw	a4,28(sp)
20000288:	5682                	lw	a3,32(sp)
2000028a:	5612                	lw	a2,36(sp)
2000028c:	55a2                	lw	a1,40(sp)
2000028e:	5532                	lw	a0,44(sp)
20000290:	53c2                	lw	t2,48(sp)
20000292:	5352                	lw	t1,52(sp)
20000294:	52e2                	lw	t0,56(sp)
20000296:	50f2                	lw	ra,60(sp)
20000298:	6121                	addi	sp,sp,64
2000029a:	30200073          	mret

2000029e <handler_instr_acc_fault>:
handler_instr_acc_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:86
  LOG_INFO("External IRQ triggered!");
  while (1) {
  }
}

__attribute__((weak)) void handler_instr_acc_fault(void) {
2000029e:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:87
  const char fault_msg[] =
200002a0:	de06                	sw	ra,60(sp)
200002a2:	dc22                	sw	s0,56(sp)
200002a4:	00002597          	auipc	a1,0x2
200002a8:	bfc58593          	addi	a1,a1,-1028 # 20001ea0 <__clz_tab+0x160>
200002ac:	0040                	addi	s0,sp,4
200002ae:	03400613          	li	a2,52
200002b2:	8522                	mv	a0,s0
200002b4:	2e21                	jal	200005cc <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:89
      "Instruction access fault, mtval shows fault address";
  print_exc_msg(fault_msg);
200002b6:	8522                	mv	a0,s0
200002b8:	2271                	jal	20000444 <print_exc_msg>

200002ba <handler_instr_ill_fault>:
handler_instr_ill_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:92
}

__attribute__((weak)) void handler_instr_ill_fault(void) {
200002ba:	715d                	addi	sp,sp,-80
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:93
  const char fault_msg[] =
200002bc:	c686                	sw	ra,76(sp)
200002be:	c4a2                	sw	s0,72(sp)
200002c0:	00002597          	auipc	a1,0x2
200002c4:	c1458593          	addi	a1,a1,-1004 # 20001ed4 <__clz_tab+0x194>
200002c8:	00d10413          	addi	s0,sp,13
200002cc:	03b00613          	li	a2,59
200002d0:	8522                	mv	a0,s0
200002d2:	2ced                	jal	200005cc <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:95
      "Illegal Instruction fault, mtval shows instruction content";
  print_exc_msg(fault_msg);
200002d4:	8522                	mv	a0,s0
200002d6:	22bd                	jal	20000444 <print_exc_msg>

200002d8 <handler_bkpt>:
handler_bkpt():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:98
}

__attribute__((weak)) void handler_bkpt(void) {
200002d8:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:99
  const char exc_msg[] =
200002da:	de06                	sw	ra,60(sp)
200002dc:	dc22                	sw	s0,56(sp)
200002de:	00002597          	auipc	a1,0x2
200002e2:	c3158593          	addi	a1,a1,-975 # 20001f0f <__clz_tab+0x1cf>
200002e6:	840a                	mv	s0,sp
200002e8:	03800613          	li	a2,56
200002ec:	8522                	mv	a0,s0
200002ee:	2cf9                	jal	200005cc <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:101
      "Breakpoint triggerd, mtval shows the breakpoint address";
  print_exc_msg(exc_msg);
200002f0:	8522                	mv	a0,s0
200002f2:	2a89                	jal	20000444 <print_exc_msg>
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:104
}

__attribute__((weak)) void handler_lsu_fault(void) {
200002f4:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:105
  const char exc_msg[] = "Load/Store fault, mtval shows the fault address";
200002f6:	de06                	sw	ra,60(sp)
200002f8:	dc22                	sw	s0,56(sp)
200002fa:	00002597          	auipc	a1,0x2
200002fe:	c4d58593          	addi	a1,a1,-947 # 20001f47 <__clz_tab+0x207>
20000302:	0020                	addi	s0,sp,8
20000304:	03000613          	li	a2,48
20000308:	8522                	mv	a0,s0
2000030a:	24c9                	jal	200005cc <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:106
  print_exc_msg(exc_msg);
2000030c:	8522                	mv	a0,s0
2000030e:	2a1d                	jal	20000444 <print_exc_msg>

20000310 <handler_ecall>:
handler_ecall():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:109
}

__attribute__((weak)) void handler_ecall(void) {
20000310:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:110
  LOG_INFO("Environment call encountered");
20000312:	ce06                	sw	ra,28(sp)
20000314:	cc22                	sw	s0,24(sp)
20000316:	00002517          	auipc	a0,0x2
2000031a:	92250513          	addi	a0,a0,-1758 # 20001c38 <kDeviceLogBypassUartAddress>
2000031e:	4108                	lw	a0,0(a0)
20000320:	c901                	beqz	a0,20000330 <handler_ecall+0x20>
20000322:	e0010517          	auipc	a0,0xe0010
20000326:	d1a50513          	addi	a0,a0,-742 # 1003c <handler_ecall.kLogFields>
2000032a:	4581                	li	a1,0
2000032c:	2b7d                	jal	200008ea <base_log_internal_dv>
2000032e:	a819                	j	20000344 <handler_ecall+0x34>
20000330:	00002597          	auipc	a1,0x2
20000334:	87458593          	addi	a1,a1,-1932 # 20001ba4 <__udivdi3+0x3a8>
20000338:	840a                	mv	s0,sp
2000033a:	4651                	li	a2,20
2000033c:	8522                	mv	a0,s0
2000033e:	2479                	jal	200005cc <memcpy>
20000340:	8522                	mv	a0,s0
20000342:	2319                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:111
  while (1) {
20000344:	a001                	j	20000344 <handler_ecall+0x34>
20000346:	0001                	nop

20000348 <handler_irq_software>:
handler_irq_software():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:68
__attribute__((weak)) void handler_irq_software(void) {
20000348:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:69
  LOG_INFO("Software IRQ triggered!");
2000034a:	ce86                	sw	ra,92(sp)
2000034c:	cc96                	sw	t0,88(sp)
2000034e:	ca9a                	sw	t1,84(sp)
20000350:	c89e                	sw	t2,80(sp)
20000352:	c6a2                	sw	s0,76(sp)
20000354:	c4aa                	sw	a0,72(sp)
20000356:	c2ae                	sw	a1,68(sp)
20000358:	c0b2                	sw	a2,64(sp)
2000035a:	de36                	sw	a3,60(sp)
2000035c:	dc3a                	sw	a4,56(sp)
2000035e:	da3e                	sw	a5,52(sp)
20000360:	d842                	sw	a6,48(sp)
20000362:	d646                	sw	a7,44(sp)
20000364:	d472                	sw	t3,40(sp)
20000366:	d276                	sw	t4,36(sp)
20000368:	d07a                	sw	t5,32(sp)
2000036a:	ce7e                	sw	t6,28(sp)
2000036c:	00002517          	auipc	a0,0x2
20000370:	8cc50513          	addi	a0,a0,-1844 # 20001c38 <kDeviceLogBypassUartAddress>
20000374:	4108                	lw	a0,0(a0)
20000376:	c901                	beqz	a0,20000386 <handler_irq_software+0x3e>
20000378:	e0010517          	auipc	a0,0xe0010
2000037c:	c8850513          	addi	a0,a0,-888 # 10000 <_dv_log_offset>
20000380:	4581                	li	a1,0
20000382:	23a5                	jal	200008ea <base_log_internal_dv>
20000384:	a819                	j	2000039a <handler_irq_software+0x52>
20000386:	00001597          	auipc	a1,0x1
2000038a:	7e258593          	addi	a1,a1,2018 # 20001b68 <__udivdi3+0x36c>
2000038e:	0020                	addi	s0,sp,8
20000390:	4651                	li	a2,20
20000392:	8522                	mv	a0,s0
20000394:	2c25                	jal	200005cc <memcpy>
20000396:	8522                	mv	a0,s0
20000398:	2945                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:70
  while (1) {
2000039a:	a001                	j	2000039a <handler_irq_software+0x52>

2000039c <handler_irq_timer>:
handler_irq_timer():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:74
__attribute__((weak)) void handler_irq_timer(void) {
2000039c:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:75
  LOG_INFO("Timer IRQ triggered!");
2000039e:	ce86                	sw	ra,92(sp)
200003a0:	cc96                	sw	t0,88(sp)
200003a2:	ca9a                	sw	t1,84(sp)
200003a4:	c89e                	sw	t2,80(sp)
200003a6:	c6a2                	sw	s0,76(sp)
200003a8:	c4aa                	sw	a0,72(sp)
200003aa:	c2ae                	sw	a1,68(sp)
200003ac:	c0b2                	sw	a2,64(sp)
200003ae:	de36                	sw	a3,60(sp)
200003b0:	dc3a                	sw	a4,56(sp)
200003b2:	da3e                	sw	a5,52(sp)
200003b4:	d842                	sw	a6,48(sp)
200003b6:	d646                	sw	a7,44(sp)
200003b8:	d472                	sw	t3,40(sp)
200003ba:	d276                	sw	t4,36(sp)
200003bc:	d07a                	sw	t5,32(sp)
200003be:	ce7e                	sw	t6,28(sp)
200003c0:	00002517          	auipc	a0,0x2
200003c4:	87850513          	addi	a0,a0,-1928 # 20001c38 <kDeviceLogBypassUartAddress>
200003c8:	4108                	lw	a0,0(a0)
200003ca:	c901                	beqz	a0,200003da <handler_irq_timer+0x3e>
200003cc:	e0010517          	auipc	a0,0xe0010
200003d0:	c4850513          	addi	a0,a0,-952 # 10014 <handler_irq_timer.kLogFields>
200003d4:	4581                	li	a1,0
200003d6:	2b11                	jal	200008ea <base_log_internal_dv>
200003d8:	a819                	j	200003ee <handler_irq_timer+0x52>
200003da:	00001597          	auipc	a1,0x1
200003de:	7a258593          	addi	a1,a1,1954 # 20001b7c <__udivdi3+0x380>
200003e2:	0020                	addi	s0,sp,8
200003e4:	4651                	li	a2,20
200003e6:	8522                	mv	a0,s0
200003e8:	22d5                	jal	200005cc <memcpy>
200003ea:	8522                	mv	a0,s0
200003ec:	29b1                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:76
  while (1) {
200003ee:	a001                	j	200003ee <handler_irq_timer+0x52>

200003f0 <handler_irq_external>:
handler_irq_external():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:80
__attribute__((weak)) void handler_irq_external(void) {
200003f0:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:81
  LOG_INFO("External IRQ triggered!");
200003f2:	ce86                	sw	ra,92(sp)
200003f4:	cc96                	sw	t0,88(sp)
200003f6:	ca9a                	sw	t1,84(sp)
200003f8:	c89e                	sw	t2,80(sp)
200003fa:	c6a2                	sw	s0,76(sp)
200003fc:	c4aa                	sw	a0,72(sp)
200003fe:	c2ae                	sw	a1,68(sp)
20000400:	c0b2                	sw	a2,64(sp)
20000402:	de36                	sw	a3,60(sp)
20000404:	dc3a                	sw	a4,56(sp)
20000406:	da3e                	sw	a5,52(sp)
20000408:	d842                	sw	a6,48(sp)
2000040a:	d646                	sw	a7,44(sp)
2000040c:	d472                	sw	t3,40(sp)
2000040e:	d276                	sw	t4,36(sp)
20000410:	d07a                	sw	t5,32(sp)
20000412:	ce7e                	sw	t6,28(sp)
20000414:	00002517          	auipc	a0,0x2
20000418:	82450513          	addi	a0,a0,-2012 # 20001c38 <kDeviceLogBypassUartAddress>
2000041c:	4108                	lw	a0,0(a0)
2000041e:	c901                	beqz	a0,2000042e <handler_irq_external+0x3e>
20000420:	e0010517          	auipc	a0,0xe0010
20000424:	c0850513          	addi	a0,a0,-1016 # 10028 <handler_irq_external.kLogFields>
20000428:	4581                	li	a1,0
2000042a:	21c1                	jal	200008ea <base_log_internal_dv>
2000042c:	a819                	j	20000442 <handler_irq_external+0x52>
2000042e:	00001597          	auipc	a1,0x1
20000432:	76258593          	addi	a1,a1,1890 # 20001b90 <__udivdi3+0x394>
20000436:	0020                	addi	s0,sp,8
20000438:	4651                	li	a2,20
2000043a:	8522                	mv	a0,s0
2000043c:	2a41                	jal	200005cc <memcpy>
2000043e:	8522                	mv	a0,s0
20000440:	2121                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:82
  while (1) {
20000442:	a001                	j	20000442 <handler_irq_external+0x52>

20000444 <print_exc_msg>:
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:25
static void print_exc_msg(const char *msg) {
20000444:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
20000446:	ce06                	sw	ra,28(sp)
20000448:	cc22                	sw	s0,24(sp)
2000044a:	ca26                	sw	s1,20(sp)
2000044c:	00001597          	auipc	a1,0x1
20000450:	7ec58593          	addi	a1,a1,2028 # 20001c38 <kDeviceLogBypassUartAddress>
20000454:	418c                	lw	a1,0(a1)
20000456:	842a                	mv	s0,a0
20000458:	c18d                	beqz	a1,2000047a <print_exc_msg+0x36>
2000045a:	e0010517          	auipc	a0,0xe0010
2000045e:	bf650513          	addi	a0,a0,-1034 # 10050 <print_exc_msg.kLogFields>
20000462:	4585                	li	a1,1
20000464:	8622                	mv	a2,s0
20000466:	2151                	jal	200008ea <base_log_internal_dv>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
20000468:	34302673          	csrr	a2,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
2000046c:	e0010517          	auipc	a0,0xe0010
20000470:	bf850513          	addi	a0,a0,-1032 # 10064 <print_exc_msg.kLogFields.6>
20000474:	4585                	li	a1,1
20000476:	2995                	jal	200008ea <base_log_internal_dv>
20000478:	a80d                	j	200004aa <print_exc_msg+0x66>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
2000047a:	00001597          	auipc	a1,0x1
2000047e:	73e58593          	addi	a1,a1,1854 # 20001bb8 <__udivdi3+0x3bc>
20000482:	848a                	mv	s1,sp
20000484:	4651                	li	a2,20
20000486:	8526                	mv	a0,s1
20000488:	2291                	jal	200005cc <memcpy>
2000048a:	8526                	mv	a0,s1
2000048c:	85a2                	mv	a1,s0
2000048e:	2e6d                	jal	20000848 <base_log_internal_core>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
20000490:	34302473          	csrr	s0,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
20000494:	00001597          	auipc	a1,0x1
20000498:	73858593          	addi	a1,a1,1848 # 20001bcc <__udivdi3+0x3d0>
2000049c:	848a                	mv	s1,sp
2000049e:	4651                	li	a2,20
200004a0:	8526                	mv	a0,s1
200004a2:	222d                	jal	200005cc <memcpy>
200004a4:	8526                	mv	a0,s1
200004a6:	85a2                	mv	a1,s0
200004a8:	2645                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:28
  while (1) {
200004aa:	a001                	j	200004aa <print_exc_msg+0x66>

200004ac <main>:
main():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:37
                           }) == kDifUartConfigOk,
        "failed to configure UART");
  base_uart_stdout(&uart0);
}

int main(int argc, char **argv) {
200004ac:	1141                	addi	sp,sp,-16
200004ae:	c606                	sw	ra,12(sp)
200004b0:	c422                	sw	s0,8(sp)
200004b2:	6511                	lui	a0,0x4
200004b4:	35450513          	addi	a0,a0,852 # 4354 <_stack_size+0x2354>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:38
  test_status_set(kTestStatusInTest);
200004b8:	284010ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:41

  // Initialize the UART to enable logging for non-DV simulation platforms.
  if (kDeviceType != kDeviceSimDV) {
200004bc:	00001517          	auipc	a0,0x1
200004c0:	74c50513          	addi	a0,a0,1868 # 20001c08 <kDeviceType>
200004c4:	4108                	lw	a0,0(a0)
200004c6:	c111                	beqz	a0,200004ca <main+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:42
    init_uart();
200004c8:	2815                	jal	200004fc <init_uart>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:46
  }

  // Run the SW test which is fully contained within `test_main()`.
  bool result = test_main();
200004ca:	2add                	jal	200006c0 <test_main>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:49

  // Must happen before any debug output.
  if (kTestConfig.can_clobber_uart) {
200004cc:	00001597          	auipc	a1,0x1
200004d0:	78458593          	addi	a1,a1,1924 # 20001c50 <kTestConfig>
200004d4:	0005c583          	lbu	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:46
  bool result = test_main();
200004d8:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:49
  if (kTestConfig.can_clobber_uart) {
200004da:	c191                	beqz	a1,200004de <main+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:50
    init_uart();
200004dc:	2005                	jal	200004fc <init_uart>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:53
  }

  test_coverage_send_buffer();
200004de:	20cd                	jal	200005c0 <test_coverage_send_buffer>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:54
  test_status_set(result ? kTestStatusPassed : kTestStatusFailed);
200004e0:	e409                	bnez	s0,200004ea <main+0x3e>
200004e2:	6531                	lui	a0,0xc
200004e4:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
200004e8:	a019                	j	200004ee <main+0x42>
200004ea:	6525                	lui	a0,0x9
200004ec:	0535                	addi	a0,a0,13
200004ee:	24e010ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:57

  // Unreachable code.
  return 1;
200004f2:	4505                	li	a0,1
200004f4:	4422                	lw	s0,8(sp)
200004f6:	40b2                	lw	ra,12(sp)
200004f8:	0141                	addi	sp,sp,16
200004fa:	8082                	ret

200004fc <init_uart>:
init_uart():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:18
static void init_uart(void) {
200004fc:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:19
  CHECK(
200004fe:	ce06                	sw	ra,28(sp)
20000500:	cc22                	sw	s0,24(sp)
20000502:	ca26                	sw	s1,20(sp)
20000504:	f0000597          	auipc	a1,0xf0000
20000508:	efc58593          	addi	a1,a1,-260 # 10000400 <_bss_start>
2000050c:	40000537          	lui	a0,0x40000
20000510:	0d9000ef          	jal	ra,20000de8 <dif_uart_init>
20000514:	00001497          	auipc	s1,0x1
20000518:	72448493          	addi	s1,s1,1828 # 20001c38 <kDeviceLogBypassUartAddress>
2000051c:	c90d                	beqz	a0,2000054e <init_uart+0x52>
2000051e:	4088                	lw	a0,0(s1)
20000520:	c901                	beqz	a0,20000530 <init_uart+0x34>
20000522:	e0010517          	auipc	a0,0xe0010
20000526:	b5650513          	addi	a0,a0,-1194 # 10078 <init_uart.kLogFields>
2000052a:	4581                	li	a1,0
2000052c:	2e7d                	jal	200008ea <base_log_internal_dv>
2000052e:	a819                	j	20000544 <init_uart+0x48>
20000530:	00001597          	auipc	a1,0x1
20000534:	6b058593          	addi	a1,a1,1712 # 20001be0 <__udivdi3+0x3e4>
20000538:	840a                	mv	s0,sp
2000053a:	4651                	li	a2,20
2000053c:	8522                	mv	a0,s0
2000053e:	2079                	jal	200005cc <memcpy>
20000540:	8522                	mv	a0,s0
20000542:	2619                	jal	20000848 <base_log_internal_core>
20000544:	6531                	lui	a0,0xc
20000546:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
2000054a:	1f2010ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:26
  CHECK(dif_uart_configure(&uart0,
2000054e:	00001517          	auipc	a0,0x1
20000552:	6da50513          	addi	a0,a0,1754 # 20001c28 <kUartBaudrate>
20000556:	4108                	lw	a0,0(a0)
20000558:	00001597          	auipc	a1,0x1
2000055c:	6c058593          	addi	a1,a1,1728 # 20001c18 <kClockFreqPeripheralHz>
20000560:	418c                	lw	a1,0(a1)
20000562:	c02a                	sw	a0,0(sp)
20000564:	c22e                	sw	a1,4(sp)
20000566:	4505                	li	a0,1
20000568:	c42a                	sw	a0,8(sp)
2000056a:	c62a                	sw	a0,12(sp)
2000056c:	f0000517          	auipc	a0,0xf0000
20000570:	e9450513          	addi	a0,a0,-364 # 10000400 <_bss_start>
20000574:	858a                	mv	a1,sp
20000576:	081000ef          	jal	ra,20000df6 <dif_uart_configure>
2000057a:	c90d                	beqz	a0,200005ac <init_uart+0xb0>
2000057c:	4088                	lw	a0,0(s1)
2000057e:	c901                	beqz	a0,2000058e <init_uart+0x92>
20000580:	e0010517          	auipc	a0,0xe0010
20000584:	b0c50513          	addi	a0,a0,-1268 # 1008c <init_uart.kLogFields.2>
20000588:	4581                	li	a1,0
2000058a:	2685                	jal	200008ea <base_log_internal_dv>
2000058c:	a819                	j	200005a2 <init_uart+0xa6>
2000058e:	00001597          	auipc	a1,0x1
20000592:	66658593          	addi	a1,a1,1638 # 20001bf4 <__udivdi3+0x3f8>
20000596:	840a                	mv	s0,sp
20000598:	4651                	li	a2,20
2000059a:	8522                	mv	a0,s0
2000059c:	2805                	jal	200005cc <memcpy>
2000059e:	8522                	mv	a0,s0
200005a0:	2465                	jal	20000848 <base_log_internal_core>
200005a2:	6531                	lui	a0,0xc
200005a4:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
200005a8:	194010ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:34
  base_uart_stdout(&uart0);
200005ac:	f0000517          	auipc	a0,0xf0000
200005b0:	e5450513          	addi	a0,a0,-428 # 10000400 <_bss_start>
200005b4:	2661                	jal	2000093c <base_uart_stdout>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:35
}
200005b6:	44d2                	lw	s1,20(sp)
200005b8:	4462                	lw	s0,24(sp)
200005ba:	40f2                	lw	ra,28(sp)
200005bc:	6105                	addi	sp,sp,32
200005be:	8082                	ret

200005c0 <test_coverage_send_buffer>:
test_coverage_send_buffer():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_coverage_none.c:9

#include "sw/device/lib/testing/test_coverage.h"

// This NOP function gets linked in when coverage is disabled. See
// `test_coverage_llvm.c` for its actual definition when coverage is enabled.
void test_coverage_send_buffer(void) {}
200005c0:	8082                	ret
	...

200005c4 <read_32>:
read_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:68
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considred a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
200005c4:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:69
  return val;
200005c6:	8082                	ret

200005c8 <write_32>:
write_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:94
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
200005c8:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:95
}
200005ca:	8082                	ret

200005cc <memcpy>:
memcpy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24

#if !defined(HOST_BUILD)
void *memcpy(void *restrict dest, const void *restrict src, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t *src8 = (uint8_t *)src;
  for (size_t i = 0; i < len; ++i) {
200005cc:	ca11                	beqz	a2,200005e0 <memcpy+0x14>
200005ce:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:25
    dest8[i] = src8[i];
200005d0:	00058703          	lb	a4,0(a1)
200005d4:	00e68023          	sb	a4,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24
  for (size_t i = 0; i < len; ++i) {
200005d8:	167d                	addi	a2,a2,-1
200005da:	0685                	addi	a3,a3,1
200005dc:	0585                	addi	a1,a1,1
200005de:	fa6d                	bnez	a2,200005d0 <memcpy+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:27
  }
  return dest;
200005e0:	8082                	ret

200005e2 <memset>:
memset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35

#if !defined(HOST_BUILD)
void *memset(void *dest, int value, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
200005e2:	c619                	beqz	a2,200005f0 <memset+0xe>
200005e4:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:36
    dest8[i] = value8;
200005e6:	00b68023          	sb	a1,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35
  for (size_t i = 0; i < len; ++i) {
200005ea:	167d                	addi	a2,a2,-1
200005ec:	0685                	addi	a3,a3,1
200005ee:	fe65                	bnez	a2,200005e6 <memset+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:38
  }
  return dest;
200005f0:	8082                	ret

200005f2 <memcmp>:
memcmp():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
};

int memcmp(const void *lhs, const void *rhs, size_t len) {
  const uint8_t *lhs8 = (uint8_t *)lhs;
  const uint8_t *rhs8 = (uint8_t *)rhs;
  for (size_t i = 0; i < len; ++i) {
200005f2:	ce09                	beqz	a2,2000060c <memcmp+0x1a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:53
    if (lhs8[i] < rhs8[i]) {
200005f4:	00054683          	lbu	a3,0(a0)
200005f8:	0005c703          	lbu	a4,0(a1)
200005fc:	00e6ea63          	bltu	a3,a4,20000610 <memcmp+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:55
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
20000600:	00d76b63          	bltu	a4,a3,20000616 <memcmp+0x24>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
  for (size_t i = 0; i < len; ++i) {
20000604:	167d                	addi	a2,a2,-1
20000606:	0585                	addi	a1,a1,1
20000608:	0505                	addi	a0,a0,1
2000060a:	f66d                	bnez	a2,200005f4 <memcmp+0x2>
2000060c:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:60
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
2000060e:	8082                	ret
20000610:	fd600513          	li	a0,-42
20000614:	8082                	ret
20000616:	02a00513          	li	a0,42
2000061a:	8082                	ret

2000061c <memchr>:
memchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67

#if !defined(HOST_BUILD)
void *memchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
2000061c:	ca11                	beqz	a2,20000630 <memchr+0x14>
2000061e:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:68
    if (ptr8[i] == value8) {
20000622:	00054683          	lbu	a3,0(a0)
20000626:	00b68663          	beq	a3,a1,20000632 <memchr+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67
  for (size_t i = 0; i < len; ++i) {
2000062a:	167d                	addi	a2,a2,-1
2000062c:	0505                	addi	a0,a0,1
2000062e:	fa75                	bnez	a2,20000622 <memchr+0x6>
20000630:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:73
      return ptr8 + i;
    }
  }
  return NULL;
}
20000632:	8082                	ret

20000634 <memrchr>:
memrchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
#endif  // !defined(HOST_BUILD)

void *memrchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
20000634:	ce09                	beqz	a2,2000064e <memrchr+0x1a>
20000636:	fff50693          	addi	a3,a0,-1
2000063a:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:81
    size_t idx = len - i - 1;
    if (ptr8[idx] == value8) {
2000063e:	00c68733          	add	a4,a3,a2
20000642:	00074703          	lbu	a4,0(a4)
20000646:	00b70663          	beq	a4,a1,20000652 <memrchr+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
  for (size_t i = 0; i < len; ++i) {
2000064a:	167d                	addi	a2,a2,-1
2000064c:	fa6d                	bnez	a2,2000063e <memrchr+0xa>
2000064e:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:86
      return ptr8 + idx;
    }
  }
  return NULL;
}
20000650:	8082                	ret
20000652:	9532                	add	a0,a0,a2
20000654:	157d                	addi	a0,a0,-1
20000656:	8082                	ret

20000658 <handler_lsu_fault>:
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:41
  return mepc;
}

static void set_mepc(uint32_t mepc) { CSR_WRITE(CSR_REG_MEPC, mepc); }

void handler_lsu_fault(void) {
20000658:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:42
  pmp_load_exception = true;
2000065a:	ce06                	sw	ra,28(sp)
2000065c:	cc22                	sw	s0,24(sp)
2000065e:	ca26                	sw	s1,20(sp)
20000660:	c0418513          	addi	a0,gp,-1020 # 10000404 <pmp_load_exception>
20000664:	4585                	li	a1,1
20000666:	00b50023          	sb	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:45

  uint32_t mepc = get_mepc();
  LOG_INFO("Load fault exception handler: mepc = 0x%x", mepc);
2000066a:	00001517          	auipc	a0,0x1
2000066e:	5ce50513          	addi	a0,a0,1486 # 20001c38 <kDeviceLogBypassUartAddress>
20000672:	4108                	lw	a0,0(a0)
get_mepc():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:35
  CSR_READ(CSR_REG_MEPC, &mepc);
20000674:	34102473          	csrr	s0,mepc
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:45
  LOG_INFO("Load fault exception handler: mepc = 0x%x", mepc);
20000678:	c909                	beqz	a0,2000068a <handler_lsu_fault+0x32>
2000067a:	e0010517          	auipc	a0,0xe0010
2000067e:	a2650513          	addi	a0,a0,-1498 # 100a0 <handler_lsu_fault.kLogFields>
20000682:	4585                	li	a1,1
20000684:	8622                	mv	a2,s0
20000686:	2495                	jal	200008ea <base_log_internal_dv>
20000688:	a821                	j	200006a0 <handler_lsu_fault+0x48>
2000068a:	00001597          	auipc	a1,0x1
2000068e:	5b258593          	addi	a1,a1,1458 # 20001c3c <kDeviceLogBypassUartAddress+0x4>
20000692:	848a                	mv	s1,sp
20000694:	4651                	li	a2,20
20000696:	8526                	mv	a0,s1
20000698:	3f15                	jal	200005cc <memcpy>
2000069a:	8526                	mv	a0,s1
2000069c:	85a2                	mv	a1,s0
2000069e:	226d                	jal	20000848 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:58
  // instructions can start on 16bit boundary.
  //
  // Please see:
  // "“C” Standard Extension for Compressed Instructions, Version 2.0",
  // section 16.1.
  uint32_t fault_instruction = *((uint32_t *)mepc);
200006a0:	4008                	lw	a0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:59
  bool not_compressed = (fault_instruction & 0x3) == 0x3;
200006a2:	00357593          	andi	a1,a0,3
200006a6:	460d                	li	a2,3
200006a8:	4511                	li	a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:60
  mepc = not_compressed ? (mepc + 4) : (mepc + 2);
200006aa:	00c58363          	beq	a1,a2,200006b0 <handler_lsu_fault+0x58>
200006ae:	4509                	li	a0,2
200006b0:	9522                	add	a0,a0,s0
set_mepc():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:39
static void set_mepc(uint32_t mepc) { CSR_WRITE(CSR_REG_MEPC, mepc); }
200006b2:	34151073          	csrw	mepc,a0
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:62
  set_mepc(mepc);
}
200006b6:	44d2                	lw	s1,20(sp)
200006b8:	4462                	lw	s0,24(sp)
200006ba:	40f2                	lw	ra,28(sp)
200006bc:	6105                	addi	sp,sp,32
200006be:	8082                	ret

200006c0 <test_main>:
test_main():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:83

const test_config_t kTestConfig = {
    .can_clobber_uart = false,
};

bool test_main(void) {
200006c0:	7179                	addi	sp,sp,-48
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:84
  pmp_load_exception = false;
200006c2:	d606                	sw	ra,44(sp)
200006c4:	d422                	sw	s0,40(sp)
200006c6:	d226                	sw	s1,36(sp)
200006c8:	d04a                	sw	s2,32(sp)
200006ca:	ce4e                	sw	s3,28(sp)
200006cc:	cc52                	sw	s4,24(sp)
200006ce:	c0418413          	addi	s0,gp,-1020 # 10000404 <pmp_load_exception>
200006d2:	00040023          	sb	zero,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:85
  char load = pmp_load_store_test_data[PMP_LOAD_RANGE_BOTTOM_OFFSET];
200006d6:	f0000517          	auipc	a0,0xf0000
200006da:	12a50513          	addi	a0,a0,298 # 10000800 <__global_pointer$>
200006de:	00050503          	lb	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:86
  CHECK(!pmp_load_exception, "Load access violation before PMP configuration");
200006e2:	00044503          	lbu	a0,0(s0)
200006e6:	00001a17          	auipc	s4,0x1
200006ea:	552a0a13          	addi	s4,s4,1362 # 20001c38 <kDeviceLogBypassUartAddress>
200006ee:	c915                	beqz	a0,20000722 <test_main+0x62>
200006f0:	000a2503          	lw	a0,0(s4)
200006f4:	c901                	beqz	a0,20000704 <test_main+0x44>
200006f6:	e0010517          	auipc	a0,0xe0010
200006fa:	9be50513          	addi	a0,a0,-1602 # 100b4 <test_main.kLogFields>
200006fe:	4581                	li	a1,0
20000700:	22ed                	jal	200008ea <base_log_internal_dv>
20000702:	a819                	j	20000718 <test_main+0x58>
20000704:	00001597          	auipc	a1,0x1
20000708:	55058593          	addi	a1,a1,1360 # 20001c54 <kTestConfig+0x4>
2000070c:	848a                	mv	s1,sp
2000070e:	4651                	li	a2,20
20000710:	8526                	mv	a0,s1
20000712:	3d6d                	jal	200005cc <memcpy>
20000714:	8526                	mv	a0,s1
20000716:	2a0d                	jal	20000848 <base_log_internal_core>
20000718:	6531                	lui	a0,0xc
2000071a:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
2000071e:	01e010ef          	jal	ra,2000173c <test_status_set>
pmp_configure_load_napot():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:73
  pmp_region_configure_napot_result_t result = pmp_region_configure_napot(
20000722:	f0000997          	auipc	s3,0xf0000
20000726:	0de98993          	addi	s3,s3,222 # 10000800 <__global_pointer$>
2000072a:	4585                	li	a1,1
2000072c:	40000713          	li	a4,1024
20000730:	4501                	li	a0,0
20000732:	4601                	li	a2,0
20000734:	86ce                	mv	a3,s3
20000736:	5c5000ef          	jal	ra,200014fa <pmp_region_configure_napot>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:75
  CHECK(result == kPmpRegionConfigureNapotOk,
2000073a:	cd0d                	beqz	a0,20000774 <test_main+0xb4>
2000073c:	84aa                	mv	s1,a0
2000073e:	000a2503          	lw	a0,0(s4)
20000742:	c909                	beqz	a0,20000754 <test_main+0x94>
20000744:	e0010517          	auipc	a0,0xe0010
20000748:	9c050513          	addi	a0,a0,-1600 # 10104 <pmp_configure_load_napot.kLogFields>
2000074c:	4585                	li	a1,1
2000074e:	8626                	mv	a2,s1
20000750:	2a69                	jal	200008ea <base_log_internal_dv>
20000752:	a821                	j	2000076a <test_main+0xaa>
20000754:	00001597          	auipc	a1,0x1
20000758:	55058593          	addi	a1,a1,1360 # 20001ca4 <kTestConfig+0x54>
2000075c:	890a                	mv	s2,sp
2000075e:	4651                	li	a2,20
20000760:	854a                	mv	a0,s2
20000762:	35ad                	jal	200005cc <memcpy>
20000764:	854a                	mv	a0,s2
20000766:	85a6                	mv	a1,s1
20000768:	20c5                	jal	20000848 <base_log_internal_core>
2000076a:	6531                	lui	a0,0xc
2000076c:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
20000770:	7cd000ef          	jal	ra,2000173c <test_status_set>
test_main():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:90

  pmp_configure_load_napot();

  pmp_load_exception = false;
20000774:	00040023          	sb	zero,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:91
  load = pmp_load_store_test_data[PMP_LOAD_RANGE_BOTTOM_OFFSET];
20000778:	00098503          	lb	a0,0(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:92
  CHECK(pmp_load_exception,
2000077c:	00044503          	lbu	a0,0(s0)
20000780:	e915                	bnez	a0,200007b4 <test_main+0xf4>
20000782:	000a2503          	lw	a0,0(s4)
20000786:	c901                	beqz	a0,20000796 <test_main+0xd6>
20000788:	e0010517          	auipc	a0,0xe0010
2000078c:	94050513          	addi	a0,a0,-1728 # 100c8 <test_main.kLogFields.3>
20000790:	4581                	li	a1,0
20000792:	2aa1                	jal	200008ea <base_log_internal_dv>
20000794:	a819                	j	200007aa <test_main+0xea>
20000796:	00001597          	auipc	a1,0x1
2000079a:	4d258593          	addi	a1,a1,1234 # 20001c68 <kTestConfig+0x18>
2000079e:	848a                	mv	s1,sp
200007a0:	4651                	li	a2,20
200007a2:	8526                	mv	a0,s1
200007a4:	3525                	jal	200005cc <memcpy>
200007a6:	8526                	mv	a0,s1
200007a8:	2045                	jal	20000848 <base_log_internal_core>
200007aa:	6531                	lui	a0,0xc
200007ac:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
200007b0:	78d000ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:95
        "No load access violation on the bottom of the range load");

  pmp_load_exception = false;
200007b4:	00040023          	sb	zero,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:96
  load = pmp_load_store_test_data[PMP_LOAD_RANGE_TOP_OFFSET];
200007b8:	3ff98503          	lb	a0,1023(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:97
  CHECK(pmp_load_exception,
200007bc:	00044503          	lbu	a0,0(s0)
200007c0:	e915                	bnez	a0,200007f4 <test_main+0x134>
200007c2:	000a2503          	lw	a0,0(s4)
200007c6:	c901                	beqz	a0,200007d6 <test_main+0x116>
200007c8:	e0010517          	auipc	a0,0xe0010
200007cc:	91450513          	addi	a0,a0,-1772 # 100dc <test_main.kLogFields.6>
200007d0:	4581                	li	a1,0
200007d2:	2a21                	jal	200008ea <base_log_internal_dv>
200007d4:	a819                	j	200007ea <test_main+0x12a>
200007d6:	00001597          	auipc	a1,0x1
200007da:	4a658593          	addi	a1,a1,1190 # 20001c7c <kTestConfig+0x2c>
200007de:	848a                	mv	s1,sp
200007e0:	4651                	li	a2,20
200007e2:	8526                	mv	a0,s1
200007e4:	33e5                	jal	200005cc <memcpy>
200007e6:	8526                	mv	a0,s1
200007e8:	2085                	jal	20000848 <base_log_internal_core>
200007ea:	6531                	lui	a0,0xc
200007ec:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
200007f0:	74d000ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:100
        "No load access violation on the top of the range load");

  pmp_load_exception = false;
200007f4:	00040023          	sb	zero,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:101
  load = pmp_load_store_test_data[PMP_LOAD_RANGE_TOP_OFFSET + 1];
200007f8:	40098503          	lb	a0,1024(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:102
  CHECK(!pmp_load_exception, "Load access violation on top of the range + 1");
200007fc:	00044503          	lbu	a0,0(s0)
20000800:	c915                	beqz	a0,20000834 <test_main+0x174>
20000802:	000a2503          	lw	a0,0(s4)
20000806:	c901                	beqz	a0,20000816 <test_main+0x156>
20000808:	e0010517          	auipc	a0,0xe0010
2000080c:	8e850513          	addi	a0,a0,-1816 # 100f0 <test_main.kLogFields.9>
20000810:	4581                	li	a1,0
20000812:	28e1                	jal	200008ea <base_log_internal_dv>
20000814:	a819                	j	2000082a <test_main+0x16a>
20000816:	00001597          	auipc	a1,0x1
2000081a:	47a58593          	addi	a1,a1,1146 # 20001c90 <kTestConfig+0x40>
2000081e:	840a                	mv	s0,sp
20000820:	4651                	li	a2,20
20000822:	8522                	mv	a0,s0
20000824:	3365                	jal	200005cc <memcpy>
20000826:	8522                	mv	a0,s0
20000828:	2005                	jal	20000848 <base_log_internal_core>
2000082a:	6531                	lui	a0,0xc
2000082c:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
20000830:	70d000ef          	jal	ra,2000173c <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/pmp_smoketest_napot.c:106

  (void)load;

  return true;
20000834:	4505                	li	a0,1
20000836:	4a62                	lw	s4,24(sp)
20000838:	49f2                	lw	s3,28(sp)
2000083a:	5902                	lw	s2,32(sp)
2000083c:	5492                	lw	s1,36(sp)
2000083e:	5422                	lw	s0,40(sp)
20000840:	50b2                	lw	ra,44(sp)
20000842:	6145                	addi	sp,sp,48
20000844:	8082                	ret
	...

20000848 <base_log_internal_core>:
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
20000848:	7139                	addi	sp,sp,-64
2000084a:	ce06                	sw	ra,28(sp)
2000084c:	cc22                	sw	s0,24(sp)
2000084e:	ca26                	sw	s1,20(sp)
20000850:	c84a                	sw	s2,16(sp)
20000852:	892a                	mv	s2,a0
20000854:	de46                	sw	a7,60(sp)
20000856:	dc42                	sw	a6,56(sp)
20000858:	da3e                	sw	a5,52(sp)
2000085a:	d83a                	sw	a4,48(sp)
2000085c:	d636                	sw	a3,44(sp)
2000085e:	d432                	sw	a2,40(sp)
20000860:	d22e                	sw	a1,36(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
20000862:	4144                	lw	s1,4(a0)
20000864:	80000537          	lui	a0,0x80000
20000868:	fff50613          	addi	a2,a0,-1 # 7fffffff <_data_init_start+0x5fffde0f>
2000086c:	8526                	mv	a0,s1
2000086e:	4581                	li	a1,0
20000870:	3375                	jal	2000061c <memchr>
20000872:	40950633          	sub	a2,a0,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
20000876:	02f00593          	li	a1,47
2000087a:	8526                	mv	a0,s1
2000087c:	3b65                	jal	20000634 <memrchr>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
2000087e:	00092583          	lw	a1,0(s2)
20000882:	460d                	li	a2,3
stringify_severity():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:27
  switch (severity) {
20000884:	00b66b63          	bltu	a2,a1,2000089a <base_log_internal_core+0x52>
20000888:	058a                	slli	a1,a1,0x2
2000088a:	00001617          	auipc	a2,0x1
2000088e:	42e60613          	addi	a2,a2,1070 # 20001cb8 <kTestConfig+0x68>
20000892:	95b2                	add	a1,a1,a2
20000894:	418c                	lw	a1,0(a1)
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
20000896:	e519                	bnez	a0,200008a4 <base_log_internal_core+0x5c>
20000898:	a801                	j	200008a8 <base_log_internal_core+0x60>
2000089a:	00002597          	auipc	a1,0x2
2000089e:	91a58593          	addi	a1,a1,-1766 # 200021b4 <__clz_tab+0x474>
200008a2:	c119                	beqz	a0,200008a8 <base_log_internal_core+0x60>
200008a4:	00150493          	addi	s1,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
200008a8:	c0618413          	addi	s0,gp,-1018 # 10000406 <base_log_internal_core.global_log_counter>
200008ac:	00045603          	lhu	a2,0(s0)
200008b0:	00892703          	lw	a4,8(s2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
200008b4:	00002517          	auipc	a0,0x2
200008b8:	8e750513          	addi	a0,a0,-1817 # 2000219b <__clz_tab+0x45b>
200008bc:	86a6                	mv	a3,s1
200008be:	28d1                	jal	20000992 <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:64
  ++global_log_counter;
200008c0:	00041503          	lh	a0,0(s0)
200008c4:	0505                	addi	a0,a0,1
200008c6:	00a41023          	sh	a0,0(s0)
200008ca:	104c                	addi	a1,sp,36
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
200008cc:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
200008ce:	01092503          	lw	a0,16(s2)
200008d2:	28c5                	jal	200009c2 <base_vprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
200008d4:	00002517          	auipc	a0,0x2
200008d8:	8d550513          	addi	a0,a0,-1835 # 200021a9 <__clz_tab+0x469>
200008dc:	285d                	jal	20000992 <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:72
}
200008de:	4942                	lw	s2,16(sp)
200008e0:	44d2                	lw	s1,20(sp)
200008e2:	4462                	lw	s0,24(sp)
200008e4:	40f2                	lw	ra,28(sp)
200008e6:	6121                	addi	sp,sp,64
200008e8:	8082                	ret

200008ea <base_log_internal_dv>:
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
200008ea:	1101                	addi	sp,sp,-32
200008ec:	ce46                	sw	a7,28(sp)
200008ee:	cc42                	sw	a6,24(sp)
200008f0:	ca3e                	sw	a5,20(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
200008f2:	00001797          	auipc	a5,0x1
200008f6:	34678793          	addi	a5,a5,838 # 20001c38 <kDeviceLogBypassUartAddress>
200008fa:	439c                	lw	a5,0(a5)
200008fc:	c83a                	sw	a4,16(sp)
200008fe:	c636                	sw	a3,12(sp)
20000900:	c432                	sw	a2,8(sp)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000902:	c388                	sw	a0,0(a5)
20000904:	0028                	addi	a0,sp,8
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
20000906:	c22a                	sw	a0,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
20000908:	c989                	beqz	a1,2000091a <base_log_internal_dv+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
2000090a:	4512                	lw	a0,4(sp)
2000090c:	00450613          	addi	a2,a0,4
20000910:	c232                	sw	a2,4(sp)
20000912:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
20000914:	15fd                	addi	a1,a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000916:	c388                	sw	a0,0(a5)
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
20000918:	f9ed                	bnez	a1,2000090a <base_log_internal_dv+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
2000091a:	6105                	addi	sp,sp,32
2000091c:	8082                	ret
	...

20000920 <base_set_stdout>:
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:56
static buffer_sink_t base_stdout = {
    .data = NULL, .sink = &base_dev_null,
};

void base_set_stdout(buffer_sink_t out) {
  if (out.sink == NULL) {
20000920:	e589                	bnez	a1,2000092a <base_set_stdout+0xa>
20000922:	00000597          	auipc	a1,0x0
20000926:	01658593          	addi	a1,a1,22 # 20000938 <base_dev_null>
2000092a:	effff617          	auipc	a2,0xeffff
2000092e:	6d660613          	addi	a2,a2,1750 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
    out.sink = &base_dev_null;
  }
  base_stdout = out;
20000932:	c208                	sw	a0,0(a2)
20000934:	c24c                	sw	a1,4(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:60
}
20000936:	8082                	ret

20000938 <base_dev_null>:
base_dev_null():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:48
static size_t base_dev_null(void *data, const char *buf, size_t len) {
20000938:	8532                	mv	a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:49
  return len;
2000093a:	8082                	ret

2000093c <base_uart_stdout>:
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:72
    }
  }
  return len;
}

void base_uart_stdout(const dif_uart_t *uart) {
2000093c:	effff597          	auipc	a1,0xeffff
20000940:	6c458593          	addi	a1,a1,1732 # 10000000 <_data_start>
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
  base_stdout = out;
20000944:	c188                	sw	a0,0(a1)
20000946:	00000517          	auipc	a0,0x0
2000094a:	00c50513          	addi	a0,a0,12 # 20000952 <base_dev_uart>
2000094e:	c1c8                	sw	a0,4(a1)
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:75
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}
20000950:	8082                	ret

20000952 <base_dev_uart>:
base_dev_uart():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:62
static size_t base_dev_uart(void *data, const char *buf, size_t len) {
20000952:	1101                	addi	sp,sp,-32
20000954:	ce06                	sw	ra,28(sp)
20000956:	cc22                	sw	s0,24(sp)
20000958:	ca26                	sw	s1,20(sp)
2000095a:	c84a                	sw	s2,16(sp)
2000095c:	c64e                	sw	s3,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
2000095e:	c20d                	beqz	a2,20000980 <base_dev_uart+0x2e>
20000960:	8432                	mv	s0,a2
20000962:	892e                	mv	s2,a1
20000964:	89aa                	mv	s3,a0
20000966:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:65
    if (dif_uart_byte_send_polled(uart, (uint8_t)buf[i]) != kDifUartOk) {
20000968:	00990533          	add	a0,s2,s1
2000096c:	00054583          	lbu	a1,0(a0)
20000970:	854e                	mv	a0,s3
20000972:	2f19                	jal	20001088 <dif_uart_byte_send_polled>
20000974:	e519                	bnez	a0,20000982 <base_dev_uart+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
20000976:	0485                	addi	s1,s1,1
20000978:	fe9418e3          	bne	s0,s1,20000968 <base_dev_uart+0x16>
2000097c:	84a2                	mv	s1,s0
2000097e:	a011                	j	20000982 <base_dev_uart+0x30>
20000980:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:70
}
20000982:	8526                	mv	a0,s1
20000984:	49b2                	lw	s3,12(sp)
20000986:	4942                	lw	s2,16(sp)
20000988:	44d2                	lw	s1,20(sp)
2000098a:	4462                	lw	s0,24(sp)
2000098c:	40f2                	lw	ra,28(sp)
2000098e:	6105                	addi	sp,sp,32
20000990:	8082                	ret

20000992 <base_printf>:
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:77

size_t base_printf(const char *format, ...) {
20000992:	7179                	addi	sp,sp,-48
20000994:	c606                	sw	ra,12(sp)
20000996:	d646                	sw	a7,44(sp)
20000998:	d442                	sw	a6,40(sp)
2000099a:	d23e                	sw	a5,36(sp)
2000099c:	d03a                	sw	a4,32(sp)
2000099e:	ce36                	sw	a3,28(sp)
200009a0:	cc32                	sw	a2,24(sp)
200009a2:	ca2e                	sw	a1,20(sp)
200009a4:	effff597          	auipc	a1,0xeffff
200009a8:	65c58593          	addi	a1,a1,1628 # 10000000 <_data_start>
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
200009ac:	4190                	lw	a2,0(a1)
200009ae:	41cc                	lw	a1,4(a1)
200009b0:	872a                	mv	a4,a0
200009b2:	0854                	addi	a3,sp,20
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:79
  va_start(args, format);
200009b4:	c436                	sw	a3,8(sp)
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
200009b6:	8532                	mv	a0,a2
200009b8:	863a                	mv	a2,a4
200009ba:	200d                	jal	200009dc <base_vfprintf>
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:82
  return bytes_left;
200009bc:	40b2                	lw	ra,12(sp)
200009be:	6145                	addi	sp,sp,48
200009c0:	8082                	ret

200009c2 <base_vprintf>:
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:85
size_t base_vprintf(const char *format, va_list args) {
200009c2:	effff697          	auipc	a3,0xeffff
200009c6:	63e68693          	addi	a3,a3,1598 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
200009ca:	4290                	lw	a2,0(a3)
200009cc:	42d4                	lw	a3,4(a3)
200009ce:	872e                	mv	a4,a1
200009d0:	87aa                	mv	a5,a0
200009d2:	8532                	mv	a0,a2
200009d4:	85b6                	mv	a1,a3
200009d6:	863e                	mv	a2,a5
200009d8:	86ba                	mv	a3,a4
200009da:	a009                	j	200009dc <base_vfprintf>

200009dc <base_vfprintf>:
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:344
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
200009dc:	7139                	addi	sp,sp,-64
200009de:	de06                	sw	ra,60(sp)
200009e0:	dc22                	sw	s0,56(sp)
200009e2:	da26                	sw	s1,52(sp)
200009e4:	d84a                	sw	s2,48(sp)
200009e6:	d64e                	sw	s3,44(sp)
200009e8:	d452                	sw	s4,40(sp)
200009ea:	d256                	sw	s5,36(sp)
200009ec:	d05a                	sw	s6,32(sp)
200009ee:	ce5e                	sw	s7,28(sp)
200009f0:	cc62                	sw	s8,24(sp)
200009f2:	ca66                	sw	s9,20(sp)
200009f4:	c86a                	sw	s10,16(sp)
200009f6:	c66e                	sw	s11,12(sp)
200009f8:	8bb2                	mv	s7,a2
200009fa:	892a                	mv	s2,a0
200009fc:	c236                	sw	a3,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:345
  if (out.sink == NULL) {
200009fe:	c199                	beqz	a1,20000a04 <base_vfprintf+0x28>
20000a00:	89ae                	mv	s3,a1
20000a02:	a029                	j	20000a0c <base_vfprintf+0x30>
20000a04:	00000997          	auipc	s3,0x0
20000a08:	f3498993          	addi	s3,s3,-204 # 20000938 <base_dev_null>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:354
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
20000a0c:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357

  size_t bytes_written = 0;
  while (format[0] != '\0') {
20000a0e:	000bc503          	lbu	a0,0(s7)
20000a12:	28050f63          	beqz	a0,20000cb0 <base_vfprintf+0x2d4>
20000a16:	4b01                	li	s6,0
20000a18:	02500c13          	li	s8,37
20000a1c:	4ca5                	li	s9,9
20000a1e:	02000d13          	li	s10,32
20000a22:	06800d93          	li	s11,104
20000a26:	00001a17          	auipc	s4,0x1
20000a2a:	790a0a13          	addi	s4,s4,1936 # 200021b6 <__clz_tab+0x476>
20000a2e:	4aa9                	li	s5,10
consume_until_percent():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:143
  size_t text_len = 0;
20000a30:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:146
    if (c == '\0' || c == kPercent) {
20000a32:	0ff57413          	andi	s0,a0,255
20000a36:	01840963          	beq	s0,s8,20000a48 <base_vfprintf+0x6c>
20000a3a:	c419                	beqz	s0,20000a48 <base_vfprintf+0x6c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:145
    char c = (*format)[text_len];
20000a3c:	009b8533          	add	a0,s7,s1
20000a40:	00154503          	lbu	a0,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:153
    ++text_len;
20000a44:	0485                	addi	s1,s1,1
20000a46:	b7f5                	j	20000a32 <base_vfprintf+0x56>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:147
      if (text_len > 0) {
20000a48:	c491                	beqz	s1,20000a54 <base_vfprintf+0x78>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:148
        *bytes_written += out.sink(out.data, *format, text_len);
20000a4a:	854a                	mv	a0,s2
20000a4c:	85de                	mv	a1,s7
20000a4e:	8626                	mv	a2,s1
20000a50:	9982                	jalr	s3
20000a52:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:358
    if (!consume_until_percent(out, &format, &bytes_written)) {
20000a54:	24040f63          	beqz	s0,20000cb2 <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
20000a58:	009b8633          	add	a2,s7,s1
20000a5c:	00164503          	lbu	a0,1(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20000a60:	22050f63          	beqz	a0,20000c9e <base_vfprintf+0x2c2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
20000a64:	fd050593          	addi	a1,a0,-48
20000a68:	0ff5f593          	andi	a1,a1,255
20000a6c:	00bcf863          	bgeu	s9,a1,20000a7c <base_vfprintf+0xa0>
20000a70:	4401                	li	s0,0
20000a72:	4581                	li	a1,0
20000a74:	4605                	li	a2,1
20000a76:	028d7f63          	bgeu	s10,s0,20000ab4 <base_vfprintf+0xd8>
20000a7a:	aca1                	j	20000cd2 <base_vfprintf+0x2f6>
20000a7c:	4581                	li	a1,0
20000a7e:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20000a80:	0609                	addi	a2,a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
20000a82:	00b606b3          	add	a3,a2,a1
20000a86:	0006c683          	lbu	a3,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20000a8a:	20068a63          	beqz	a3,20000c9e <base_vfprintf+0x2c2>
20000a8e:	0ff57513          	andi	a0,a0,255
20000a92:	03540733          	mul	a4,s0,s5
20000a96:	953a                	add	a0,a0,a4
20000a98:	fd050413          	addi	s0,a0,-48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
20000a9c:	fd068513          	addi	a0,a3,-48
20000aa0:	0ff57713          	andi	a4,a0,255
20000aa4:	0585                	addi	a1,a1,1
20000aa6:	8536                	mv	a0,a3
20000aa8:	fcecfde3          	bgeu	s9,a4,20000a82 <base_vfprintf+0xa6>
20000aac:	4601                	li	a2,0
20000aae:	8536                	mv	a0,a3
20000ab0:	228d6163          	bltu	s10,s0,20000cd2 <base_vfprintf+0x2f6>
20000ab4:	008036b3          	snez	a3,s0
20000ab8:	8e55                	or	a2,a2,a3
20000aba:	20060c63          	beqz	a2,20000cd2 <base_vfprintf+0x2f6>
process_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20000abe:	95de                	add	a1,a1,s7
20000ac0:	95a6                	add	a1,a1,s1
20000ac2:	00258b93          	addi	s7,a1,2
20000ac6:	02adce63          	blt	s11,a0,20000b02 <base_vfprintf+0x126>
20000aca:	06100593          	li	a1,97
20000ace:	06a5d563          	bge	a1,a0,20000b38 <base_vfprintf+0x15c>
20000ad2:	06300593          	li	a1,99
20000ad6:	0ca5cb63          	blt	a1,a0,20000bac <base_vfprintf+0x1d0>
20000ada:	06200593          	li	a1,98
20000ade:	14b50a63          	beq	a0,a1,20000c32 <base_vfprintf+0x256>
20000ae2:	06300593          	li	a1,99
20000ae6:	18b51f63          	bne	a0,a1,20000c84 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:269
      char value = (char)va_arg(*args, uint32_t);
20000aea:	4502                	lw	a0,0(sp)
20000aec:	00450593          	addi	a1,a0,4
20000af0:	c02e                	sw	a1,0(sp)
20000af2:	4108                	lw	a0,0(a0)
20000af4:	00a105a3          	sb	a0,11(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:270
      *bytes_written += out.sink(out.data, &value, 1);
20000af8:	4605                	li	a2,1
20000afa:	854a                	mv	a0,s2
20000afc:	00b10593          	addi	a1,sp,11
20000b00:	aa41                	j	20000c90 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20000b02:	07200593          	li	a1,114
20000b06:	04a5dd63          	bge	a1,a0,20000b60 <base_vfprintf+0x184>
20000b0a:	07700593          	li	a1,119
20000b0e:	0aa5c663          	blt	a1,a0,20000bba <base_vfprintf+0x1de>
20000b12:	07300593          	li	a1,115
20000b16:	12b50963          	beq	a0,a1,20000c48 <base_vfprintf+0x26c>
20000b1a:	07500593          	li	a1,117
20000b1e:	16b51363          	bne	a0,a1,20000c84 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:329
      uint32_t value = va_arg(*args, uint32_t);
20000b22:	4502                	lw	a0,0(sp)
20000b24:	00450593          	addi	a1,a0,4
20000b28:	c02e                	sw	a1,0(sp)
20000b2a:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:330
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
20000b2c:	00001797          	auipc	a5,0x1
20000b30:	1b978793          	addi	a5,a5,441 # 20001ce5 <kDigitsLow>
20000b34:	4729                	li	a4,10
20000b36:	a8cd                	j	20000c28 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20000b38:	13850763          	beq	a0,s8,20000c66 <base_vfprintf+0x28a>
20000b3c:	04800593          	li	a1,72
20000b40:	00b50663          	beq	a0,a1,20000b4c <base_vfprintf+0x170>
20000b44:	05800593          	li	a1,88
20000b48:	12b51e63          	bne	a0,a1,20000c84 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:324
      uint32_t value = va_arg(*args, uint32_t);
20000b4c:	4502                	lw	a0,0(sp)
20000b4e:	00450593          	addi	a1,a0,4
20000b52:	c02e                	sw	a1,0(sp)
20000b54:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:325
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsHigh);
20000b56:	00001797          	auipc	a5,0x1
20000b5a:	19f78793          	addi	a5,a5,415 # 20001cf5 <kDigitsHigh>
20000b5e:	a0e1                	j	20000c26 <base_vfprintf+0x24a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20000b60:	06900593          	li	a1,105
20000b64:	06b50d63          	beq	a0,a1,20000bde <base_vfprintf+0x202>
20000b68:	06f00593          	li	a1,111
20000b6c:	10b50163          	beq	a0,a1,20000c6e <base_vfprintf+0x292>
20000b70:	07000593          	li	a1,112
20000b74:	10b51863          	bne	a0,a1,20000c84 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20000b78:	00001597          	auipc	a1,0x1
20000b7c:	64258593          	addi	a1,a1,1602 # 200021ba <__clz_tab+0x47a>
20000b80:	4609                	li	a2,2
20000b82:	854a                	mv	a0,s2
20000b84:	9982                	jalr	s3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:311
      uintptr_t value = va_arg(*args, uintptr_t);
20000b86:	4582                	lw	a1,0(sp)
20000b88:	00458613          	addi	a2,a1,4
20000b8c:	c032                	sw	a2,0(sp)
20000b8e:	4190                	lw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20000b90:	01650433          	add	s0,a0,s6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:313
          write_digits(out, value, sizeof(uintptr_t) * 2, 16, kDigitsLow);
20000b94:	00001797          	auipc	a5,0x1
20000b98:	15178793          	addi	a5,a5,337 # 20001ce5 <kDigitsLow>
20000b9c:	46a1                	li	a3,8
20000b9e:	4741                	li	a4,16
20000ba0:	854a                	mv	a0,s2
20000ba2:	85ce                	mv	a1,s3
20000ba4:	2a5d                	jal	20000d5a <write_digits>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:312
      *bytes_written +=
20000ba6:	00a40b33          	add	s6,s0,a0
20000baa:	a0ed                	j	20000c94 <base_vfprintf+0x2b8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20000bac:	06400593          	li	a1,100
20000bb0:	02b50763          	beq	a0,a1,20000bde <base_vfprintf+0x202>
20000bb4:	07b50063          	beq	a0,s11,20000c14 <base_vfprintf+0x238>
20000bb8:	a0f1                	j	20000c84 <base_vfprintf+0x2a8>
20000bba:	07800593          	li	a1,120
20000bbe:	04b50b63          	beq	a0,a1,20000c14 <base_vfprintf+0x238>
20000bc2:	07a00593          	li	a1,122
20000bc6:	0ab51f63          	bne	a0,a1,20000c84 <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:283
      size_t len = va_arg(*args, size_t);
20000bca:	4502                	lw	a0,0(sp)
20000bcc:	00450593          	addi	a1,a0,4
20000bd0:	c02e                	sw	a1,0(sp)
20000bd2:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:284
      char *value = va_arg(*args, char *);
20000bd4:	00850593          	addi	a1,a0,8
20000bd8:	c02e                	sw	a1,0(sp)
20000bda:	414c                	lw	a1,4(a0)
20000bdc:	a84d                	j	20000c8e <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:290
      uint32_t value = va_arg(*args, uint32_t);
20000bde:	4502                	lw	a0,0(sp)
20000be0:	00450593          	addi	a1,a0,4
20000be4:	c02e                	sw	a1,0(sp)
20000be6:	4104                	lw	s1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:291
      if (((int32_t)value) < 0) {
20000be8:	557d                	li	a0,-1
20000bea:	00954c63          	blt	a0,s1,20000c02 <base_vfprintf+0x226>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:292
        *bytes_written += out.sink(out.data, "-", 1);
20000bee:	00001597          	auipc	a1,0x1
20000bf2:	5ca58593          	addi	a1,a1,1482 # 200021b8 <__clz_tab+0x478>
20000bf6:	4605                	li	a2,1
20000bf8:	854a                	mv	a0,s2
20000bfa:	9982                	jalr	s3
20000bfc:	9b2a                	add	s6,s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:293
        value = -value;
20000bfe:	409004b3          	neg	s1,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:295
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
20000c02:	00001797          	auipc	a5,0x1
20000c06:	0e378793          	addi	a5,a5,227 # 20001ce5 <kDigitsLow>
20000c0a:	4729                	li	a4,10
20000c0c:	854a                	mv	a0,s2
20000c0e:	85ce                	mv	a1,s3
20000c10:	8626                	mv	a2,s1
20000c12:	a829                	j	20000c2c <base_vfprintf+0x250>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:318
      uint32_t value = va_arg(*args, uint32_t);
20000c14:	4502                	lw	a0,0(sp)
20000c16:	00450593          	addi	a1,a0,4
20000c1a:	c02e                	sw	a1,0(sp)
20000c1c:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:319
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsLow);
20000c1e:	00001797          	auipc	a5,0x1
20000c22:	0c778793          	addi	a5,a5,199 # 20001ce5 <kDigitsLow>
20000c26:	4741                	li	a4,16
20000c28:	854a                	mv	a0,s2
20000c2a:	85ce                	mv	a1,s3
20000c2c:	86a2                	mv	a3,s0
20000c2e:	2235                	jal	20000d5a <write_digits>
20000c30:	a08d                	j	20000c92 <base_vfprintf+0x2b6>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:334
      uint32_t value = va_arg(*args, uint32_t);
20000c32:	4502                	lw	a0,0(sp)
20000c34:	00450593          	addi	a1,a0,4
20000c38:	c02e                	sw	a1,0(sp)
20000c3a:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:335
      *bytes_written += write_digits(out, value, spec.width, 2, kDigitsLow);
20000c3c:	00001797          	auipc	a5,0x1
20000c40:	0a978793          	addi	a5,a5,169 # 20001ce5 <kDigitsLow>
20000c44:	4709                	li	a4,2
20000c46:	b7cd                	j	20000c28 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:274
      char *value = va_arg(*args, char *);
20000c48:	4502                	lw	a0,0(sp)
20000c4a:	00450593          	addi	a1,a0,4
20000c4e:	c02e                	sw	a1,0(sp)
20000c50:	410c                	lw	a1,0(a0)
20000c52:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
20000c54:	00a58633          	add	a2,a1,a0
20000c58:	00064603          	lbu	a2,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:277
        ++len;
20000c5c:	0505                	addi	a0,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
20000c5e:	fa7d                	bnez	a2,20000c54 <base_vfprintf+0x278>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:279
      *bytes_written += out.sink(out.data, value, len);
20000c60:	fff50613          	addi	a2,a0,-1
20000c64:	a02d                	j	20000c8e <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:265
      *bytes_written += out.sink(out.data, "%", 1);
20000c66:	4605                	li	a2,1
20000c68:	854a                	mv	a0,s2
20000c6a:	85d2                	mv	a1,s4
20000c6c:	a015                	j	20000c90 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:299
      uint32_t value = va_arg(*args, uint32_t);
20000c6e:	4502                	lw	a0,0(sp)
20000c70:	00450593          	addi	a1,a0,4
20000c74:	c02e                	sw	a1,0(sp)
20000c76:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:300
      *bytes_written += write_digits(out, value, spec.width, 8, kDigitsLow);
20000c78:	00001797          	auipc	a5,0x1
20000c7c:	06d78793          	addi	a5,a5,109 # 20001ce5 <kDigitsLow>
20000c80:	4721                	li	a4,8
20000c82:	b75d                	j	20000c28 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:339
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
20000c84:	00001597          	auipc	a1,0x1
20000c88:	08158593          	addi	a1,a1,129 # 20001d05 <kUnknownSpec>
20000c8c:	463d                	li	a2,15
20000c8e:	854a                	mv	a0,s2
20000c90:	9982                	jalr	s3
20000c92:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357
  while (format[0] != '\0') {
20000c94:	000bc503          	lbu	a0,0(s7)
20000c98:	d8051ce3          	bnez	a0,20000a30 <base_vfprintf+0x54>
20000c9c:	a819                	j	20000cb2 <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:190
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
20000c9e:	00001597          	auipc	a1,0x1
20000ca2:	02a58593          	addi	a1,a1,42 # 20001cc8 <kErrorNul>
20000ca6:	4645                	li	a2,17
20000ca8:	854a                	mv	a0,s2
20000caa:	9982                	jalr	s3
20000cac:	9b2a                	add	s6,s6,a0
20000cae:	a011                	j	20000cb2 <base_vfprintf+0x2d6>
20000cb0:	4b01                	li	s6,0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:370

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
20000cb2:	855a                	mv	a0,s6
20000cb4:	4db2                	lw	s11,12(sp)
20000cb6:	4d42                	lw	s10,16(sp)
20000cb8:	4cd2                	lw	s9,20(sp)
20000cba:	4c62                	lw	s8,24(sp)
20000cbc:	4bf2                	lw	s7,28(sp)
20000cbe:	5b02                	lw	s6,32(sp)
20000cc0:	5a92                	lw	s5,36(sp)
20000cc2:	5a22                	lw	s4,40(sp)
20000cc4:	59b2                	lw	s3,44(sp)
20000cc6:	5942                	lw	s2,48(sp)
20000cc8:	54d2                	lw	s1,52(sp)
20000cca:	5462                	lw	s0,56(sp)
20000ccc:	50f2                	lw	ra,60(sp)
20000cce:	6121                	addi	sp,sp,64
20000cd0:	8082                	ret
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:203
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
20000cd2:	00001597          	auipc	a1,0x1
20000cd6:	00758593          	addi	a1,a1,7 # 20001cd9 <kErrorTooWide>
20000cda:	4631                	li	a2,12
20000cdc:	b7f1                	j	20000ca8 <base_vfprintf+0x2cc>

20000cde <base_snprintf>:
base_snprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:109
size_t base_snprintf(char *buf, size_t len, const char *format, ...) {
20000cde:	7179                	addi	sp,sp,-48
20000ce0:	ca06                	sw	ra,20(sp)
20000ce2:	d646                	sw	a7,44(sp)
20000ce4:	d442                	sw	a6,40(sp)
20000ce6:	d23e                	sw	a5,36(sp)
20000ce8:	d03a                	sw	a4,32(sp)
20000cea:	ce36                	sw	a3,28(sp)
20000cec:	0874                	addi	a3,sp,28
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:111
  va_start(args, format);
20000cee:	c836                	sw	a3,16(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:113
  snprintf_captures_t data = {
20000cf0:	c42a                	sw	a0,8(sp)
20000cf2:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:119
  size_t bytes_left = base_vfprintf(out, format, args);
20000cf4:	00000597          	auipc	a1,0x0
20000cf8:	01258593          	addi	a1,a1,18 # 20000d06 <snprintf_sink>
20000cfc:	0028                	addi	a0,sp,8
20000cfe:	39f9                	jal	200009dc <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:121
  return bytes_left;
20000d00:	40d2                	lw	ra,20(sp)
20000d02:	6145                	addi	sp,sp,48
20000d04:	8082                	ret

20000d06 <snprintf_sink>:
snprintf_sink():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:94
static size_t snprintf_sink(void *data, const char *buf, size_t len) {
20000d06:	1141                	addi	sp,sp,-16
20000d08:	c606                	sw	ra,12(sp)
20000d0a:	c422                	sw	s0,8(sp)
20000d0c:	c226                	sw	s1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:96
  if (captures->bytes_left == 0) {
20000d0e:	4140                	lw	s0,4(a0)
20000d10:	c00d                	beqz	s0,20000d32 <snprintf_sink+0x2c>
20000d12:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:100
  if (len > captures->bytes_left) {
20000d14:	00c46363          	bltu	s0,a2,20000d1a <snprintf_sink+0x14>
20000d18:	8432                	mv	s0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:103
  memcpy(captures->buf, buf, len);
20000d1a:	4088                	lw	a0,0(s1)
20000d1c:	8622                	mv	a2,s0
20000d1e:	8afff0ef          	jal	ra,200005cc <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
20000d22:	4088                	lw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
20000d24:	40cc                	lw	a1,4(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
20000d26:	9522                	add	a0,a0,s0
20000d28:	c088                	sw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
20000d2a:	40858533          	sub	a0,a1,s0
20000d2e:	c0c8                	sw	a0,4(s1)
20000d30:	a011                	j	20000d34 <snprintf_sink+0x2e>
20000d32:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:107
}
20000d34:	8522                	mv	a0,s0
20000d36:	4492                	lw	s1,4(sp)
20000d38:	4422                	lw	s0,8(sp)
20000d3a:	40b2                	lw	ra,12(sp)
20000d3c:	0141                	addi	sp,sp,16
20000d3e:	8082                	ret

20000d40 <base_fprintf>:
base_fprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:124
size_t base_fprintf(buffer_sink_t out, const char *format, ...) {
20000d40:	1101                	addi	sp,sp,-32
20000d42:	c206                	sw	ra,4(sp)
20000d44:	ce46                	sw	a7,28(sp)
20000d46:	cc42                	sw	a6,24(sp)
20000d48:	ca3e                	sw	a5,20(sp)
20000d4a:	c83a                	sw	a4,16(sp)
20000d4c:	c636                	sw	a3,12(sp)
20000d4e:	0074                	addi	a3,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:126
  va_start(args, format);
20000d50:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:127
  size_t bytes_left = base_vfprintf(out, format, args);
20000d52:	3169                	jal	200009dc <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:129
  return bytes_left;
20000d54:	4092                	lw	ra,4(sp)
20000d56:	6105                	addi	sp,sp,32
20000d58:	8082                	ret

20000d5a <write_digits>:
write_digits():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:225
                           uint32_t base, const char *glyphs) {
20000d5a:	7139                	addi	sp,sp,-64
20000d5c:	de06                	sw	ra,60(sp)
20000d5e:	dc22                	sw	s0,56(sp)
20000d60:	da26                	sw	s1,52(sp)
20000d62:	d84a                	sw	s2,48(sp)
20000d64:	d64e                	sw	s3,44(sp)
20000d66:	892e                	mv	s2,a1
20000d68:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20000d6a:	ca05                	beqz	a2,20000d9a <write_digits+0x40>
20000d6c:	4501                	li	a0,0
20000d6e:	02b10813          	addi	a6,sp,43
20000d72:	84b2                	mv	s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:234
    value /= base;
20000d74:	02e65633          	divu	a2,a2,a4
20000d78:	02e60433          	mul	s0,a2,a4
20000d7c:	40848433          	sub	s0,s1,s0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:235
    buffer[kWordBits - 1 - len] = glyphs[digit];
20000d80:	943e                	add	s0,s0,a5
20000d82:	00040403          	lb	s0,0(s0)
20000d86:	00a805b3          	add	a1,a6,a0
20000d8a:	00858023          	sb	s0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20000d8e:	157d                	addi	a0,a0,-1
20000d90:	fee4f1e3          	bgeu	s1,a4,20000d72 <write_digits+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:238
  width = width == 0 ? 1 : width;
20000d94:	40a00633          	neg	a2,a0
20000d98:	a011                	j	20000d9c <write_digits+0x42>
20000d9a:	4601                	li	a2,0
20000d9c:	4485                	li	s1,1
20000d9e:	c291                	beqz	a3,20000da2 <write_digits+0x48>
20000da0:	84b6                	mv	s1,a3
20000da2:	02000513          	li	a0,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:239
  width = width > kWordBits ? kWordBits : width;
20000da6:	00a4e463          	bltu	s1,a0,20000dae <write_digits+0x54>
20000daa:	02000493          	li	s1,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
20000dae:	02967063          	bgeu	a2,s1,20000dce <write_digits+0x74>
20000db2:	0068                	addi	a0,sp,12
20000db4:	8d05                	sub	a0,a0,s1
20000db6:	02050513          	addi	a0,a0,32
20000dba:	40c48433          	sub	s0,s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:241
    buffer[kWordBits - len - 1] = '0';
20000dbe:	03000593          	li	a1,48
20000dc2:	8622                	mv	a2,s0
20000dc4:	81fff0ef          	jal	ra,200005e2 <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
20000dc8:	147d                	addi	s0,s0,-1
20000dca:	fc7d                	bnez	s0,20000dc8 <write_digits+0x6e>
20000dcc:	8626                	mv	a2,s1
20000dce:	0068                	addi	a0,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:244
  return out.sink(out.data, buffer + (kWordBits - len), len);
20000dd0:	8d11                	sub	a0,a0,a2
20000dd2:	02050593          	addi	a1,a0,32
20000dd6:	854e                	mv	a0,s3
20000dd8:	9902                	jalr	s2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:245
}
20000dda:	59b2                	lw	s3,44(sp)
20000ddc:	5942                	lw	s2,48(sp)
20000dde:	54d2                	lw	s1,52(sp)
20000de0:	5462                	lw	s0,56(sp)
20000de2:	50f2                	lw	ra,60(sp)
20000de4:	6121                	addi	sp,sp,64
20000de6:	8082                	ret

20000de8 <dif_uart_init>:
dif_uart_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:136

  return bytes_read;
}

dif_uart_result_t dif_uart_init(dif_uart_params_t params, dif_uart_t *uart) {
  if (uart == NULL) {
20000de8:	c581                	beqz	a1,20000df0 <dif_uart_init+0x8>
20000dea:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:140
    return kDifUartBadArg;
  }

  uart->params = params;
20000dec:	c188                	sw	a0,0(a1)
20000dee:	a011                	j	20000df2 <dif_uart_init+0xa>
20000df0:	4609                	li	a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:142
  return kDifUartOk;
}
20000df2:	8532                	mv	a0,a2
20000df4:	8082                	ret

20000df6 <dif_uart_configure>:
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:145

dif_uart_config_result_t dif_uart_configure(const dif_uart_t *uart,
                                            dif_uart_config_t config) {
20000df6:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:146
  if (uart == NULL) {
20000df8:	c606                	sw	ra,12(sp)
20000dfa:	c422                	sw	s0,8(sp)
20000dfc:	c226                	sw	s1,4(sp)
20000dfe:	c935                	beqz	a0,20000e72 <dif_uart_configure+0x7c>
20000e00:	84ae                	mv	s1,a1
20000e02:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:150
    return kDifUartConfigBadArg;
  }

  if (config.baudrate == 0 || config.clk_freq_hz == 0) {
20000e04:	418c                	lw	a1,0(a1)
20000e06:	450d                	li	a0,3
20000e08:	c5b5                	beqz	a1,20000e74 <dif_uart_configure+0x7e>
20000e0a:	40d0                	lw	a2,4(s1)
20000e0c:	c625                	beqz	a2,20000e74 <dif_uart_configure+0x7e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:169
                "NCO bit width exceeds 28 bits.");

  // NCO creates 16x of baudrate. So, in addition to the nco_width,
  // 2^4 should be multiplied.
  uint64_t nco =
      ((uint64_t)config.baudrate << (nco_width + 4)) / config.clk_freq_hz;
20000e0e:	01459513          	slli	a0,a1,0x14
20000e12:	81b1                	srli	a1,a1,0xc
20000e14:	4681                	li	a3,0
20000e16:	1e7000ef          	jal	ra,200017fc <__udivdi3>
20000e1a:	6641                	lui	a2,0x10
20000e1c:	167d                	addi	a2,a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:170
  uint32_t nco_masked = nco & UART_CTRL_NCO_MASK;
20000e1e:	8e69                	and	a2,a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:173

  // Requested baudrate is too high for the given clock frequency.
  if (nco != nco_masked) {
20000e20:	8d31                	xor	a0,a0,a2
20000e22:	8dc9                	or	a1,a1,a0
20000e24:	4511                	li	a0,4
20000e26:	e5b9                	bnez	a1,20000e74 <dif_uart_configure+0x7e>
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:92
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, 0u);
20000e28:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e2a:	00052623          	sw	zero,12(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:98
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);
20000e2e:	4008                	lw	a0,0(s0)
20000e30:	458d                	li	a1,3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e32:	cd4c                	sw	a1,28(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:100
  mmio_region_write32(uart->params.base_addr, UART_OVRD_REG_OFFSET, 0u);
20000e34:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e36:	02052223          	sw	zero,36(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:101
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET, 0u);
20000e3a:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e3c:	02052623          	sw	zero,44(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:102
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20000e40:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e42:	00052223          	sw	zero,4(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:103
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET,
20000e46:	4008                	lw	a0,0(s0)
20000e48:	55fd                	li	a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e4a:	c10c                	sw	a1,0(a0)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  // Set baudrate, enable RX and TX, configure parity.
  uint32_t reg = 0;
  reg = bitfield_field32_write(reg, UART_CTRL_NCO_FIELD, nco_masked);
  reg = bitfield_bit32_write(reg, UART_CTRL_TX_BIT, true);
  reg = bitfield_bit32_write(reg, UART_CTRL_RX_BIT, true);
  if (config.parity_enable == kDifUartToggleEnabled) {
20000e4c:	4494                	lw	a3,8(s1)
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
BITFIELD_WARN_UNUSED_RESULT
inline uint32_t bitfield_field32_write(uint32_t bitfield,
                                       bitfield_field32_t field,
                                       uint32_t value) {
  bitfield &= ~(field.mask << field.index);
  bitfield |= (value & field.mask) << field.index;
20000e4e:	01061513          	slli	a0,a2,0x10
20000e52:	04300593          	li	a1,67
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
20000e56:	c291                	beqz	a3,20000e5a <dif_uart_configure+0x64>
20000e58:	458d                	li	a1,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_EN_BIT, true);
  }
  if (config.parity == kDifUartParityOdd) {
20000e5a:	44d0                	lw	a2,12(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  if (config.parity_enable == kDifUartToggleEnabled) {
20000e5c:	8d4d                	or	a0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
  if (config.parity == kDifUartParityOdd) {
20000e5e:	e219                	bnez	a2,20000e64 <dif_uart_configure+0x6e>
20000e60:	08056513          	ori	a0,a0,128
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:191
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_ODD_BIT, true);
  }
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);
20000e64:	400c                	lw	a1,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e66:	c5c8                	sw	a0,12(a1)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:194

  // Disable interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20000e68:	400c                	lw	a1,0(s0)
20000e6a:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000e6c:	0005a223          	sw	zero,4(a1)
20000e70:	a011                	j	20000e74 <dif_uart_configure+0x7e>
20000e72:	4509                	li	a0,2
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:197

  return kDifUartConfigOk;
}
20000e74:	4492                	lw	s1,4(sp)
20000e76:	4422                	lw	s0,8(sp)
20000e78:	40b2                	lw	ra,12(sp)
20000e7a:	0141                	addi	sp,sp,16
20000e7c:	8082                	ret

20000e7e <dif_uart_irq_is_pending>:
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:201

dif_uart_result_t dif_uart_irq_is_pending(const dif_uart_t *uart,
                                          dif_uart_irq_t irq,
                                          bool *is_pending) {
20000e7e:	1141                	addi	sp,sp,-16
20000e80:	c606                	sw	ra,12(sp)
20000e82:	c422                	sw	s0,8(sp)
20000e84:	c226                	sw	s1,4(sp)
20000e86:	84aa                	mv	s1,a0
20000e88:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:202
  if (uart == NULL || is_pending == NULL) {
20000e8a:	c09d                	beqz	s1,20000eb0 <dif_uart_irq_is_pending+0x32>
20000e8c:	8432                	mv	s0,a2
20000e8e:	c20d                	beqz	a2,20000eb0 <dif_uart_irq_is_pending+0x32>
20000e90:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:207
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20000e92:	852e                	mv	a0,a1
20000e94:	85b2                	mv	a1,a2
20000e96:	2015                	jal	20000eba <uart_irq_offset_get>
20000e98:	85aa                	mv	a1,a0
20000e9a:	4505                	li	a0,1
20000e9c:	c991                	beqz	a1,20000eb0 <dif_uart_irq_is_pending+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:212
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET);
20000e9e:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20000ea0:	410c                	lw	a1,0(a0)
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
  *is_pending = bitfield_bit32_read(reg, offset);
20000ea2:	4602                	lw	a2,0(sp)
20000ea4:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
 */
BITFIELD_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
20000ea6:	00c5d5b3          	srl	a1,a1,a2
20000eaa:	8985                	andi	a1,a1,1
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
20000eac:	00b40023          	sb	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:216

  return kDifUartOk;
}
20000eb0:	4492                	lw	s1,4(sp)
20000eb2:	4422                	lw	s0,8(sp)
20000eb4:	40b2                	lw	ra,12(sp)
20000eb6:	0141                	addi	sp,sp,16
20000eb8:	8082                	ret

20000eba <uart_irq_offset_get>:
uart_irq_offset_get():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:55
                                ptrdiff_t *offset_out) {
20000eba:	461d                	li	a2,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:57
  switch (irq_type) {
20000ebc:	00a66563          	bltu	a2,a0,20000ec6 <uart_irq_offset_get+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:86
  *offset_out = offset;
20000ec0:	c188                	sw	a0,0(a1)
20000ec2:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:89
}
20000ec4:	8082                	ret
20000ec6:	4501                	li	a0,0
20000ec8:	8082                	ret

20000eca <dif_uart_irq_acknowledge>:
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:219

dif_uart_result_t dif_uart_irq_acknowledge(const dif_uart_t *uart,
                                           dif_uart_irq_t irq) {
20000eca:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:220
  if (uart == NULL) {
20000ecc:	c606                	sw	ra,12(sp)
20000ece:	c422                	sw	s0,8(sp)
20000ed0:	c10d                	beqz	a0,20000ef2 <dif_uart_irq_acknowledge+0x28>
20000ed2:	842a                	mv	s0,a0
20000ed4:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:225
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20000ed6:	852e                	mv	a0,a1
20000ed8:	85b2                	mv	a1,a2
20000eda:	37c5                	jal	20000eba <uart_irq_offset_get>
20000edc:	85aa                	mv	a1,a0
20000ede:	4505                	li	a0,1
20000ee0:	c991                	beqz	a1,20000ef4 <dif_uart_irq_acknowledge+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:230
    return kDifUartError;
  }

  // Writing to the register clears the corresponding bits (Write-one clear).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
20000ee2:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:231
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET, reg);
20000ee4:	4010                	lw	a2,0(s0)
20000ee6:	4501                	li	a0,0
20000ee8:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20000eea:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000eee:	c20c                	sw	a1,0(a2)
20000ef0:	a011                	j	20000ef4 <dif_uart_irq_acknowledge+0x2a>
20000ef2:	4509                	li	a0,2
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:234

  return kDifUartOk;
}
20000ef4:	4422                	lw	s0,8(sp)
20000ef6:	40b2                	lw	ra,12(sp)
20000ef8:	0141                	addi	sp,sp,16
20000efa:	8082                	ret

20000efc <dif_uart_irq_disable_all>:
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:238

dif_uart_result_t dif_uart_irq_disable_all(const dif_uart_t *uart,
                                           dif_uart_irq_snapshot_t *snapshot) {
  if (uart == NULL) {
20000efc:	c911                	beqz	a0,20000f10 <dif_uart_irq_disable_all+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:243
    return kDifUartBadArg;
  }

  // Pass the current interrupt state to the caller.
  if (snapshot != NULL) {
20000efe:	c581                	beqz	a1,20000f06 <dif_uart_irq_disable_all+0xa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:245
    *snapshot =
        mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
20000f00:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20000f02:	4250                	lw	a2,4(a2)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:244
    *snapshot =
20000f04:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:249
  }

  // Disable all UART interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20000f06:	410c                	lw	a1,0(a0)
20000f08:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000f0a:	0005a223          	sw	zero,4(a1)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:252

  return kDifUartOk;
}
20000f0e:	8082                	ret
20000f10:	4509                	li	a0,2
20000f12:	8082                	ret

20000f14 <dif_uart_irq_restore_all>:
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:255

dif_uart_result_t dif_uart_irq_restore_all(
    const dif_uart_t *uart, const dif_uart_irq_snapshot_t *snapshot) {
20000f14:	862a                	mv	a2,a0
20000f16:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:256
  if (uart == NULL || snapshot == NULL) {
20000f18:	c611                	beqz	a2,20000f24 <dif_uart_irq_restore_all+0x10>
20000f1a:	c589                	beqz	a1,20000f24 <dif_uart_irq_restore_all+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:261
    return kDifUartBadArg;
  }

  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
                      *snapshot);
20000f1c:	418c                	lw	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:260
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
20000f1e:	4210                	lw	a2,0(a2)
20000f20:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000f22:	c24c                	sw	a1,4(a2)
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:264

  return kDifUartOk;
}
20000f24:	8082                	ret

20000f26 <dif_uart_irq_get_enabled>:
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:268

dif_uart_result_t dif_uart_irq_get_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t *state) {
20000f26:	1141                	addi	sp,sp,-16
20000f28:	c606                	sw	ra,12(sp)
20000f2a:	c422                	sw	s0,8(sp)
20000f2c:	c226                	sw	s1,4(sp)
20000f2e:	84aa                	mv	s1,a0
20000f30:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:269
  if (uart == NULL || state == NULL) {
20000f32:	c485                	beqz	s1,20000f5a <dif_uart_irq_get_enabled+0x34>
20000f34:	8432                	mv	s0,a2
20000f36:	c215                	beqz	a2,20000f5a <dif_uart_irq_get_enabled+0x34>
20000f38:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:274
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20000f3a:	852e                	mv	a0,a1
20000f3c:	85b2                	mv	a1,a2
20000f3e:	3fb5                	jal	20000eba <uart_irq_offset_get>
20000f40:	85aa                	mv	a1,a0
20000f42:	4505                	li	a0,1
20000f44:	c999                	beqz	a1,20000f5a <dif_uart_irq_get_enabled+0x34>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:279
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
20000f46:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20000f48:	414c                	lw	a1,4(a0)
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:281

  bool is_enabled = bitfield_bit32_read(reg, offset);
20000f4a:	4602                	lw	a2,0(sp)
20000f4c:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
20000f4e:	00c5d5b3          	srl	a1,a1,a2
20000f52:	8985                	andi	a1,a1,1
20000f54:	0015b593          	seqz	a1,a1
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:282
  *state = is_enabled ? kDifUartToggleEnabled : kDifUartToggleDisabled;
20000f58:	c00c                	sw	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:285

  return kDifUartOk;
}
20000f5a:	4492                	lw	s1,4(sp)
20000f5c:	4422                	lw	s0,8(sp)
20000f5e:	40b2                	lw	ra,12(sp)
20000f60:	0141                	addi	sp,sp,16
20000f62:	8082                	ret

20000f64 <dif_uart_irq_set_enabled>:
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:289

dif_uart_result_t dif_uart_irq_set_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t state) {
20000f64:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:290
  if (uart == NULL) {
20000f66:	c606                	sw	ra,12(sp)
20000f68:	c422                	sw	s0,8(sp)
20000f6a:	c226                	sw	s1,4(sp)
20000f6c:	c91d                	beqz	a0,20000fa2 <dif_uart_irq_set_enabled+0x3e>
20000f6e:	8432                	mv	s0,a2
20000f70:	84aa                	mv	s1,a0
20000f72:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:295
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20000f74:	852e                	mv	a0,a1
20000f76:	85b2                	mv	a1,a2
20000f78:	3789                	jal	20000eba <uart_irq_offset_get>
20000f7a:	85aa                	mv	a1,a0
20000f7c:	4505                	li	a0,1
20000f7e:	c19d                	beqz	a1,20000fa4 <dif_uart_irq_set_enabled+0x40>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:300
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
20000f80:	408c                	lw	a1,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20000f82:	41d0                	lw	a2,4(a1)
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:302
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
  reg = bitfield_bit32_write(reg, offset, bit);
20000f84:	4682                	lw	a3,0(sp)
20000f86:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:301
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
20000f88:	00143713          	seqz	a4,s0
20000f8c:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20000f8e:	00d797b3          	sll	a5,a5,a3
20000f92:	fff7c793          	not	a5,a5
20000f96:	8e7d                	and	a2,a2,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20000f98:	00d716b3          	sll	a3,a4,a3
20000f9c:	8e55                	or	a2,a2,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000f9e:	c1d0                	sw	a2,4(a1)
20000fa0:	a011                	j	20000fa4 <dif_uart_irq_set_enabled+0x40>
20000fa2:	4509                	li	a0,2
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:306
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, reg);

  return kDifUartOk;
}
20000fa4:	4492                	lw	s1,4(sp)
20000fa6:	4422                	lw	s0,8(sp)
20000fa8:	40b2                	lw	ra,12(sp)
20000faa:	0141                	addi	sp,sp,16
20000fac:	8082                	ret

20000fae <dif_uart_irq_force>:
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:309

dif_uart_result_t dif_uart_irq_force(const dif_uart_t *uart,
                                     dif_uart_irq_t irq) {
20000fae:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:310
  if (uart == NULL) {
20000fb0:	c606                	sw	ra,12(sp)
20000fb2:	c422                	sw	s0,8(sp)
20000fb4:	c10d                	beqz	a0,20000fd6 <dif_uart_irq_force+0x28>
20000fb6:	842a                	mv	s0,a0
20000fb8:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:315
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20000fba:	852e                	mv	a0,a1
20000fbc:	85b2                	mv	a1,a2
20000fbe:	3df5                	jal	20000eba <uart_irq_offset_get>
20000fc0:	85aa                	mv	a1,a0
20000fc2:	4505                	li	a0,1
20000fc4:	c991                	beqz	a1,20000fd8 <dif_uart_irq_force+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:320
    return kDifUartError;
  }

  // Force the requested interrupt (write-only).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
20000fc6:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:321
  mmio_region_write32(uart->params.base_addr, UART_INTR_TEST_REG_OFFSET, reg);
20000fc8:	4010                	lw	a2,0(s0)
20000fca:	4501                	li	a0,0
20000fcc:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20000fce:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20000fd2:	c60c                	sw	a1,8(a2)
20000fd4:	a011                	j	20000fd8 <dif_uart_irq_force+0x2a>
20000fd6:	4509                	li	a0,2
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:324

  return kDifUartOk;
}
20000fd8:	4422                	lw	s0,8(sp)
20000fda:	40b2                	lw	ra,12(sp)
20000fdc:	0141                	addi	sp,sp,16
20000fde:	8082                	ret

20000fe0 <dif_uart_watermark_rx_set>:
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:328

dif_uart_result_t dif_uart_watermark_rx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
20000fe0:	cd09                	beqz	a0,20000ffa <dif_uart_watermark_rx_set+0x1a>
20000fe2:	4691                	li	a3,4
20000fe4:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
20000fe6:	00b6eb63          	bltu	a3,a1,20000ffc <dif_uart_watermark_rx_set+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:357
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
20000fea:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20000fec:	4d54                	lw	a3,28(a0)
20000fee:	4601                	li	a2,0
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  switch (watermark) {
20000ff0:	058a                	slli	a1,a1,0x2
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
20000ff2:	9a8d                	andi	a3,a3,-29
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20000ff4:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000ff6:	cd4c                	sw	a1,28(a0)
20000ff8:	a011                	j	20000ffc <dif_uart_watermark_rx_set+0x1c>
20000ffa:	4609                	li	a2,2
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:362
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_RXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
20000ffc:	8532                	mv	a0,a2
20000ffe:	8082                	ret

20001000 <dif_uart_watermark_tx_set>:
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:366

dif_uart_result_t dif_uart_watermark_tx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
20001000:	cd11                	beqz	a0,2000101c <dif_uart_watermark_tx_set+0x1c>
20001002:	468d                	li	a3,3
20001004:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
20001006:	00b6ec63          	bltu	a3,a1,2000101e <dif_uart_watermark_tx_set+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:393
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
2000100a:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000100c:	4d54                	lw	a3,28(a0)
2000100e:	4601                	li	a2,0
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  switch (watermark) {
20001010:	0596                	slli	a1,a1,0x5
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20001012:	f9f6f693          	andi	a3,a3,-97
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001016:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001018:	cd4c                	sw	a1,28(a0)
2000101a:	a011                	j	2000101e <dif_uart_watermark_tx_set+0x1e>
2000101c:	4609                	li	a2,2
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:398
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_TXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
2000101e:	8532                	mv	a0,a2
20001020:	8082                	ret

20001022 <dif_uart_bytes_send>:
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:403

dif_uart_result_t dif_uart_bytes_send(const dif_uart_t *uart,
                                      const uint8_t *data,
                                      size_t bytes_requested,
                                      size_t *bytes_written) {
20001022:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:404
  if (uart == NULL || data == NULL) {
20001024:	c51d                	beqz	a0,20001052 <dif_uart_bytes_send+0x30>
20001026:	c595                	beqz	a1,20001052 <dif_uart_bytes_send+0x30>
20001028:	4781                	li	a5,0
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
2000102a:	c20d                	beqz	a2,2000104c <dif_uart_bytes_send+0x2a>
uart_tx_full():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:21
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
2000102c:	00052803          	lw	a6,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001030:	01082703          	lw	a4,16(a6)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
20001034:	8b05                	andi	a4,a4,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20001036:	eb19                	bnez	a4,2000104c <dif_uart_bytes_send+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:114
    uart_tx_fifo_write(uart, data[bytes_written]);
20001038:	00f58733          	add	a4,a1,a5
2000103c:	00074703          	lbu	a4,0(a4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:115
    ++bytes_written;
20001040:	0785                	addi	a5,a5,1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001042:	00e82c23          	sw	a4,24(a6)
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20001046:	fef613e3          	bne	a2,a5,2000102c <dif_uart_bytes_send+0xa>
2000104a:	87b2                	mv	a5,a2
2000104c:	4701                	li	a4,0
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:410
    return kDifUartBadArg;
  }

  // `bytes_written` is an optional parameter.
  size_t res = uart_bytes_send(uart, data, bytes_requested);
  if (bytes_written != NULL) {
2000104e:	c291                	beqz	a3,20001052 <dif_uart_bytes_send+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:411
    *bytes_written = res;
20001050:	c29c                	sw	a5,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:415
  }

  return kDifUartOk;
}
20001052:	853a                	mv	a0,a4
20001054:	8082                	ret

20001056 <dif_uart_bytes_receive>:
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:419

dif_uart_result_t dif_uart_bytes_receive(const dif_uart_t *uart,
                                         size_t bytes_requested, uint8_t *data,
                                         size_t *bytes_read) {
20001056:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:420
  if (uart == NULL || data == NULL) {
20001058:	c515                	beqz	a0,20001084 <dif_uart_bytes_receive+0x2e>
2000105a:	c60d                	beqz	a2,20001084 <dif_uart_bytes_receive+0x2e>
2000105c:	4801                	li	a6,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
2000105e:	cd99                	beqz	a1,2000107c <dif_uart_bytes_receive+0x26>
uart_rx_empty():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:33
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
20001060:	4118                	lw	a4,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001062:	4b1c                	lw	a5,16(a4)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20001064:	0207f793          	andi	a5,a5,32
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
20001068:	eb91                	bnez	a5,2000107c <dif_uart_bytes_receive+0x26>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000106a:	4b58                	lw	a4,20(a4)
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
2000106c:	010607b3          	add	a5,a2,a6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:129
    ++bytes_read;
20001070:	0805                	addi	a6,a6,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
20001072:	00e78023          	sb	a4,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
20001076:	ff0595e3          	bne	a1,a6,20001060 <dif_uart_bytes_receive+0xa>
2000107a:	882e                	mv	a6,a1
2000107c:	4701                	li	a4,0
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:426
    return kDifUartBadArg;
  }

  // `bytes_read` is an optional parameter.
  size_t res = uart_bytes_receive(uart, bytes_requested, data);
  if (bytes_read != NULL) {
2000107e:	c299                	beqz	a3,20001084 <dif_uart_bytes_receive+0x2e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:427
    *bytes_read = res;
20001080:	0106a023          	sw	a6,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:431
  }

  return kDifUartOk;
}
20001084:	853a                	mv	a0,a4
20001086:	8082                	ret

20001088 <dif_uart_byte_send_polled>:
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:435

dif_uart_result_t dif_uart_byte_send_polled(const dif_uart_t *uart,
                                            uint8_t byte) {
  if (uart == NULL) {
20001088:	cd19                	beqz	a0,200010a6 <dif_uart_byte_send_polled+0x1e>
2000108a:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000108c:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000108e:	8a85                	andi	a3,a3,1
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:440
    return kDifUartBadArg;
  }

  // Busy wait for the TX FIFO to free up.
  while (uart_tx_full(uart)) {
20001090:	fef5                	bnez	a3,2000108c <dif_uart_byte_send_polled+0x4>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001092:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20001094:	8a85                	andi	a3,a3,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20001096:	e299                	bnez	a3,2000109c <dif_uart_byte_send_polled+0x14>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001098:	ce0c                	sw	a1,24(a2)
2000109a:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000109c:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000109e:	8921                	andi	a0,a0,8
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:447

  (void)uart_bytes_send(uart, &byte, 1);

  // Busy wait for the TX FIFO to be drained and for HW to finish processing
  // the last byte.
  while (!uart_tx_idle(uart)) {
200010a0:	dd75                	beqz	a0,2000109c <dif_uart_byte_send_polled+0x14>
200010a2:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:451
  }

  return kDifUartOk;
}
200010a4:	8082                	ret
200010a6:	4509                	li	a0,2
200010a8:	8082                	ret

200010aa <dif_uart_byte_receive_polled>:
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:454

dif_uart_result_t dif_uart_byte_receive_polled(const dif_uart_t *uart,
                                               uint8_t *byte) {
200010aa:	862a                	mv	a2,a0
200010ac:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:455
  if (uart == NULL || byte == NULL) {
200010ae:	c205                	beqz	a2,200010ce <dif_uart_byte_receive_polled+0x24>
200010b0:	cd99                	beqz	a1,200010ce <dif_uart_byte_receive_polled+0x24>
200010b2:	4210                	lw	a2,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200010b4:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200010b6:	02057513          	andi	a0,a0,32
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:460
    return kDifUartBadArg;
  }

  // Busy wait for the RX message in the FIFO.
  while (uart_rx_empty(uart)) {
200010ba:	fd6d                	bnez	a0,200010b4 <dif_uart_byte_receive_polled+0xa>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200010bc:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
200010be:	02057693          	andi	a3,a0,32
200010c2:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
200010c4:	e689                	bnez	a3,200010ce <dif_uart_byte_receive_polled+0x24>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200010c6:	4a50                	lw	a2,20(a2)
200010c8:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
200010ca:	00c58023          	sb	a2,0(a1)
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:466
  }

  (void)uart_bytes_receive(uart, 1, byte);

  return kDifUartOk;
}
200010ce:	8082                	ret

200010d0 <dif_uart_rx_bytes_available>:
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:469

dif_uart_result_t dif_uart_rx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200010d0:	862a                	mv	a2,a0
200010d2:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:470
  if (uart == NULL || num_bytes == NULL) {
200010d4:	ca09                	beqz	a2,200010e6 <dif_uart_rx_bytes_available+0x16>
200010d6:	c981                	beqz	a1,200010e6 <dif_uart_rx_bytes_available+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:476
    return kDifUartBadArg;
  }

  // RX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200010d8:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200010da:	5110                	lw	a2,32(a0)
200010dc:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
200010de:	8241                	srli	a2,a2,0x10
200010e0:	03f67613          	andi	a2,a2,63
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:477
  *num_bytes = (size_t)bitfield_field32_read(reg, UART_FIFO_STATUS_RXLVL_FIELD);
200010e4:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:480

  return kDifUartOk;
}
200010e6:	8082                	ret

200010e8 <dif_uart_tx_bytes_available>:
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:483

dif_uart_result_t dif_uart_tx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200010e8:	862a                	mv	a2,a0
200010ea:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:484
  if (uart == NULL || num_bytes == NULL) {
200010ec:	ce01                	beqz	a2,20001104 <dif_uart_tx_bytes_available+0x1c>
200010ee:	c999                	beqz	a1,20001104 <dif_uart_tx_bytes_available+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:490
    return kDifUartBadArg;
  }

  // TX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200010f0:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200010f2:	5110                	lw	a2,32(a0)
200010f4:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
200010f6:	03f67613          	andi	a2,a2,63
200010fa:	02000693          	li	a3,32
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:493
  uint32_t fill_bytes =
      bitfield_field32_read(reg, UART_FIFO_STATUS_TXLVL_FIELD);
  *num_bytes = kDifUartFifoSizeBytes - fill_bytes;
200010fe:	40c68633          	sub	a2,a3,a2
20001102:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:496

  return kDifUartOk;
}
20001104:	8082                	ret

20001106 <dif_uart_fifo_reset>:
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:500

dif_uart_result_t dif_uart_fifo_reset(const dif_uart_t *uart,
                                      dif_uart_fifo_reset_t reset) {
  if (uart == NULL) {
20001106:	c11d                	beqz	a0,2000112c <dif_uart_fifo_reset+0x26>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:505
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
20001108:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000110a:	4e48                	lw	a0,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507

  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
2000110c:	ffd5f693          	andi	a3,a1,-3
20001110:	0016b693          	seqz	a3,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
    reg = bitfield_bit32_write(reg, UART_FIFO_CTRL_RXRST_BIT, true);
  }

  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
20001114:	fff58713          	addi	a4,a1,-1
20001118:	4789                	li	a5,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507
  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
2000111a:	00d565b3          	or	a1,a0,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
2000111e:	00f77463          	bgeu	a4,a5,20001126 <dif_uart_fifo_reset+0x20>
20001122:	0025e593          	ori	a1,a1,2
20001126:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001128:	ce4c                	sw	a1,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:518
  }

  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
2000112a:	8082                	ret
2000112c:	4509                	li	a0,2
2000112e:	8082                	ret

20001130 <dif_uart_loopback_set>:
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:523

dif_uart_result_t dif_uart_loopback_set(const dif_uart_t *uart,
                                        dif_uart_loopback_t loopback,
                                        dif_uart_toggle_t enable) {
  if (uart == NULL) {
20001130:	c515                	beqz	a0,2000115c <dif_uart_loopback_set+0x2c>
20001132:	4681                	li	a3,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:529
    return kDifUartBadArg;
  }

  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_CTRL_REG_OFFSET);
20001134:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:527
  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
20001136:	0015b593          	seqz	a1,a1
2000113a:	4715                	li	a4,5
2000113c:	40b705b3          	sub	a1,a4,a1
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001140:	4558                	lw	a4,12(a0)
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:530
  reg = bitfield_bit32_write(reg, index, enable == kDifUartToggleEnabled);
20001142:	00163613          	seqz	a2,a2
20001146:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20001148:	00b797b3          	sll	a5,a5,a1
2000114c:	fff7c793          	not	a5,a5
20001150:	8f7d                	and	a4,a4,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001152:	00b615b3          	sll	a1,a2,a1
20001156:	8dd9                	or	a1,a1,a4
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001158:	c54c                	sw	a1,12(a0)
2000115a:	a011                	j	2000115e <dif_uart_loopback_set+0x2e>
2000115c:	4689                	li	a3,2
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:534
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
2000115e:	8536                	mv	a0,a3
20001160:	8082                	ret

20001162 <dif_uart_enable_rx_timeout>:
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:537

dif_uart_result_t dif_uart_enable_rx_timeout(const dif_uart_t *uart,
                                             uint32_t duration_ticks) {
20001162:	862a                	mv	a2,a0
20001164:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:538
  if (uart == NULL || (duration_ticks & ~UART_TIMEOUT_CTRL_VAL_MASK) != 0) {
20001166:	ca11                	beqz	a2,2000117a <dif_uart_enable_rx_timeout+0x18>
20001168:	0185d693          	srli	a3,a1,0x18
2000116c:	e699                	bnez	a3,2000117a <dif_uart_enable_rx_timeout+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:545
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, true);
  reg =
      bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, duration_ticks);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
2000116e:	4210                	lw	a2,0(a2)
20001170:	4501                	li	a0,0
20001172:	800006b7          	lui	a3,0x80000
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
20001176:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001178:	d64c                	sw	a1,44(a2)
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:549
                      reg);

  return kDifUartOk;
}
2000117a:	8082                	ret

2000117c <dif_uart_disable_rx_timeout>:
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:552

dif_uart_result_t dif_uart_disable_rx_timeout(const dif_uart_t *uart) {
  if (uart == NULL) {
2000117c:	c511                	beqz	a0,20001188 <dif_uart_disable_rx_timeout+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:558
    return kDifUartBadArg;
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, false);
  reg = bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, 0);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
2000117e:	410c                	lw	a1,0(a0)
20001180:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001182:	0205a623          	sw	zero,44(a1)
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:562
                      reg);

  return kDifUartOk;
}
20001186:	8082                	ret
20001188:	4509                	li	a0,2
2000118a:	8082                	ret

2000118c <dif_uart_get_rx_timeout>:
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:566

dif_uart_result_t dif_uart_get_rx_timeout(const dif_uart_t *uart,
                                          dif_uart_toggle_t *status,
                                          uint32_t *duration_ticks) {
2000118c:	86aa                	mv	a3,a0
2000118e:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:567
  if (uart == NULL || status == NULL) {
20001190:	ce99                	beqz	a3,200011ae <dif_uart_get_rx_timeout+0x22>
20001192:	cd91                	beqz	a1,200011ae <dif_uart_get_rx_timeout+0x22>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:572
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET);
20001194:	4288                	lw	a0,0(a3)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001196:	5554                	lw	a3,44(a0)
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:573
  *status = bitfield_bit32_read(reg, UART_TIMEOUT_CTRL_EN_BIT)
20001198:	fff6c513          	not	a0,a3
2000119c:	817d                	srli	a0,a0,0x1f
2000119e:	c188                	sw	a0,0(a1)
200011a0:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:577
                ? kDifUartToggleEnabled
                : kDifUartToggleDisabled;

  if (duration_ticks != NULL) {
200011a2:	c611                	beqz	a2,200011ae <dif_uart_get_rx_timeout+0x22>
200011a4:	010005b7          	lui	a1,0x1000
200011a8:	15fd                	addi	a1,a1,-1
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
200011aa:	8df5                	and	a1,a1,a3
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:578
    *duration_ticks = bitfield_field32_read(reg, UART_TIMEOUT_CTRL_VAL_FIELD);
200011ac:	c20c                	sw	a1,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:582
  }

  return kDifUartOk;
}
200011ae:	8082                	ret

200011b0 <pmp_csr_address_write>:
pmp_csr_address_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:224
 * @param region PMP region to configure and set address for.
 * @param address Address to be set.
 * @return `pmp_region_configure_result_t`.
 */
pmp_region_configure_result_t pmp_csr_address_write(pmp_region_index_t region,
                                                    uintptr_t address) {
200011b0:	862a                	mv	a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:225
  uint32_t address_shifted = address >> PMP_ADDRESS_SHIFT;
200011b2:	8189                	srli	a1,a1,0x2
200011b4:	469d                	li	a3,7
200011b6:	4505                	li	a0,1
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
  switch (region) {
200011b8:	02c6c163          	blt	a3,a2,200011da <pmp_csr_address_write+0x2a>
200011bc:	468d                	li	a3,3
200011be:	02c6cf63          	blt	a3,a2,200011fc <pmp_csr_address_write+0x4c>
200011c2:	4685                	li	a3,1
200011c4:	06c6c863          	blt	a3,a2,20001234 <pmp_csr_address_write+0x84>
200011c8:	c271                	beqz	a2,2000128c <pmp_csr_address_write+0xdc>
200011ca:	4685                	li	a3,1
200011cc:	10d61b63          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:30
#ifndef PMP_REGION
#error PMP_REGION(region_id, config_reg_id) must be defined
#endif  // PMP_REGION

PMP_REGION(0, 0)
PMP_REGION(1, 0)
200011d0:	3b159073          	csrw	pmpaddr1,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:30
200011d4:	3b102673          	csrr	a2,pmpaddr1
200011d8:	a209                	j	200012da <pmp_csr_address_write+0x12a>
200011da:	46ad                	li	a3,11
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
200011dc:	02c6ce63          	blt	a3,a2,20001218 <pmp_csr_address_write+0x68>
200011e0:	46a5                	li	a3,9
200011e2:	06c6c463          	blt	a3,a2,2000124a <pmp_csr_address_write+0x9a>
200011e6:	46a1                	li	a3,8
200011e8:	0ad60763          	beq	a2,a3,20001296 <pmp_csr_address_write+0xe6>
200011ec:	46a5                	li	a3,9
200011ee:	0ed61a63          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:40
PMP_REGION(5, 1)
PMP_REGION(6, 1)
PMP_REGION(7, 1)

PMP_REGION(8, 2)
PMP_REGION(9, 2)
200011f2:	3b959073          	csrw	pmpaddr9,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:40
200011f6:	3b902673          	csrr	a2,pmpaddr9
200011fa:	a0c5                	j	200012da <pmp_csr_address_write+0x12a>
200011fc:	4695                	li	a3,5
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
200011fe:	06c6c163          	blt	a3,a2,20001260 <pmp_csr_address_write+0xb0>
20001202:	4691                	li	a3,4
20001204:	08d60e63          	beq	a2,a3,200012a0 <pmp_csr_address_write+0xf0>
20001208:	4695                	li	a3,5
2000120a:	0cd61c63          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:35
PMP_REGION(5, 1)
2000120e:	3b559073          	csrw	pmpaddr5,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:35
20001212:	3b502673          	csrr	a2,pmpaddr5
20001216:	a0d1                	j	200012da <pmp_csr_address_write+0x12a>
20001218:	46b5                	li	a3,13
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
2000121a:	04c6ce63          	blt	a3,a2,20001276 <pmp_csr_address_write+0xc6>
2000121e:	46b1                	li	a3,12
20001220:	08d60563          	beq	a2,a3,200012aa <pmp_csr_address_write+0xfa>
20001224:	46b5                	li	a3,13
20001226:	0ad61e63          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:45
PMP_REGION(10, 2)
PMP_REGION(11, 2)

PMP_REGION(12, 3)
PMP_REGION(13, 3)
2000122a:	3bd59073          	csrw	pmpaddr13,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:45
2000122e:	3bd02673          	csrr	a2,pmpaddr13
20001232:	a065                	j	200012da <pmp_csr_address_write+0x12a>
20001234:	4689                	li	a3,2
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
20001236:	06d60f63          	beq	a2,a3,200012b4 <pmp_csr_address_write+0x104>
2000123a:	468d                	li	a3,3
2000123c:	0ad61363          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:32
PMP_REGION(3, 0)
20001240:	3b359073          	csrw	pmpaddr3,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:32
20001244:	3b302673          	csrr	a2,pmpaddr3
20001248:	a849                	j	200012da <pmp_csr_address_write+0x12a>
2000124a:	46a9                	li	a3,10
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
2000124c:	06d60963          	beq	a2,a3,200012be <pmp_csr_address_write+0x10e>
20001250:	46ad                	li	a3,11
20001252:	08d61863          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:42
PMP_REGION(11, 2)
20001256:	3bb59073          	csrw	pmpaddr11,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:42
2000125a:	3bb02673          	csrr	a2,pmpaddr11
2000125e:	a8b5                	j	200012da <pmp_csr_address_write+0x12a>
20001260:	4699                	li	a3,6
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
20001262:	06d60363          	beq	a2,a3,200012c8 <pmp_csr_address_write+0x118>
20001266:	469d                	li	a3,7
20001268:	06d61d63          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:37
PMP_REGION(7, 1)
2000126c:	3b759073          	csrw	pmpaddr7,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:37
20001270:	3b702673          	csrr	a2,pmpaddr7
20001274:	a09d                	j	200012da <pmp_csr_address_write+0x12a>
20001276:	46b9                	li	a3,14
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:125
20001278:	04d60d63          	beq	a2,a3,200012d2 <pmp_csr_address_write+0x122>
2000127c:	46bd                	li	a3,15
2000127e:	06d61263          	bne	a2,a3,200012e2 <pmp_csr_address_write+0x132>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:47
PMP_REGION(14, 3)
PMP_REGION(15, 3)
20001282:	3bf59073          	csrw	pmpaddr15,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:47
20001286:	3bf02673          	csrr	a2,pmpaddr15
2000128a:	a881                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:29
PMP_REGION(0, 0)
2000128c:	3b059073          	csrw	pmpaddr0,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:29
20001290:	3b002673          	csrr	a2,pmpaddr0
20001294:	a099                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:39
PMP_REGION(8, 2)
20001296:	3b859073          	csrw	pmpaddr8,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:39
2000129a:	3b802673          	csrr	a2,pmpaddr8
2000129e:	a835                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:34
PMP_REGION(4, 1)
200012a0:	3b459073          	csrw	pmpaddr4,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:34
200012a4:	3b402673          	csrr	a2,pmpaddr4
200012a8:	a80d                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:44
PMP_REGION(12, 3)
200012aa:	3bc59073          	csrw	pmpaddr12,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:44
200012ae:	3bc02673          	csrr	a2,pmpaddr12
200012b2:	a025                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:31
PMP_REGION(2, 0)
200012b4:	3b259073          	csrw	pmpaddr2,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:31
200012b8:	3b202673          	csrr	a2,pmpaddr2
200012bc:	a839                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:41
PMP_REGION(10, 2)
200012be:	3ba59073          	csrw	pmpaddr10,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:41
200012c2:	3ba02673          	csrr	a2,pmpaddr10
200012c6:	a811                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:36
PMP_REGION(6, 1)
200012c8:	3b659073          	csrw	pmpaddr6,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:36
200012cc:	3b602673          	csrr	a2,pmpaddr6
200012d0:	a029                	j	200012da <pmp_csr_address_write+0x12a>
pmp_addr_csr_write():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:46
PMP_REGION(14, 3)
200012d2:	3be59073          	csrw	pmpaddr14,a1
pmp_addr_csr_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:46
200012d6:	3be02673          	csrr	a2,pmpaddr14
pmp_csr_address_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:231
  if (!pmp_addr_csr_write(region, address_shifted)) {
    return kPmpRegionConfigureError;
  }

  uint32_t addr_csr_after_write;
  if (!pmp_addr_csr_read(region, &addr_csr_after_write)) {
200012da:	4501                	li	a0,0
200012dc:	00c58363          	beq	a1,a2,200012e2 <pmp_csr_address_write+0x132>
200012e0:	4515                	li	a0,5
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:240
  if (address_shifted != addr_csr_after_write) {
    return kPmpRegionConfigureWarlError;
  }

  return kPmpRegionConfigureOk;
}
200012e2:	8082                	ret

200012e4 <pmp_region_configure_off>:
pmp_region_configure_off():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:351

  return kPmpRegionConfigureNapotOk;
}

pmp_region_configure_result_t pmp_region_configure_off(
    pmp_region_index_t region, uintptr_t address) {
200012e4:	1141                	addi	sp,sp,-16
200012e6:	c606                	sw	ra,12(sp)
200012e8:	c422                	sw	s0,8(sp)
200012ea:	842a                	mv	s0,a0
200012ec:	463d                	li	a2,15
200012ee:	450d                	li	a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:352
  if (region >= PMP_REGIONS_NUM) {
200012f0:	00866a63          	bltu	a2,s0,20001304 <pmp_region_configure_off+0x20>
pmp_address_aligned():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:307
  return address == (address & PMP_ADDRESS_ALIGNMENT_INVERTED_MASK);
200012f4:	ffc5f613          	andi	a2,a1,-4
200012f8:	4511                	li	a0,4
pmp_region_configure_off():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:356
    return kPmpRegionConfigureBadRegion;
  }

  if (!pmp_address_aligned(address)) {
200012fa:	00b61563          	bne	a2,a1,20001304 <pmp_region_configure_off+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:362
    return kPmpRegionConfigureBadAddress;
  }

  // Address registers must be written prior to the configuration registers to
  // ensure that they are not locked.
  pmp_region_configure_result_t result = pmp_csr_address_write(region, address);
200012fe:	8522                	mv	a0,s0
20001300:	3d45                	jal	200011b0 <pmp_csr_address_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:363
  if (result != kPmpRegionConfigureOk) {
20001302:	c509                	beqz	a0,2000130c <pmp_region_configure_off+0x28>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:374
  if (result != kPmpRegionConfigureOk) {
    return result;
  }

  return kPmpRegionConfigureOk;
}
20001304:	4422                	lw	s0,8(sp)
20001306:	40b2                	lw	ra,12(sp)
20001308:	0141                	addi	sp,sp,16
2000130a:	8082                	ret
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:368
  result = pmp_csr_cfg_field_write(region, 0);
2000130c:	8522                	mv	a0,s0
2000130e:	4581                	li	a1,0
20001310:	4422                	lw	s0,8(sp)
20001312:	40b2                	lw	ra,12(sp)
20001314:	0141                	addi	sp,sp,16
20001316:	a009                	j	20001318 <pmp_csr_cfg_field_write>

20001318 <pmp_csr_cfg_field_write>:
pmp_csr_cfg_field_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:175
    pmp_region_index_t region, uint32_t field_value) {
20001318:	1101                	addi	sp,sp,-32
2000131a:	ce06                	sw	ra,28(sp)
2000131c:	cc22                	sw	s0,24(sp)
2000131e:	ca26                	sw	s1,20(sp)
20001320:	c84a                	sw	s2,16(sp)
20001322:	842e                	mv	s0,a1
20001324:	84aa                	mv	s1,a0
20001326:	006c                	addi	a1,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:177
  if (!pmp_cfg_csr_read(region, &cfg_csr_current)) {
20001328:	2615                	jal	2000164c <pmp_cfg_csr_read>
2000132a:	4905                	li	s2,1
2000132c:	10050e63          	beqz	a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:182
  size_t field_index = (region % PMP_CFG_FIELDS_PER_REG) * PMP_CFG_FIELD_WIDTH;
20001330:	00349513          	slli	a0,s1,0x3
20001334:	8961                	andi	a0,a0,24
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:188
      bitfield_field32_write(cfg_csr_current, pmp_csr_cfg_field, field_value);
20001336:	45b2                	lw	a1,12(sp)
20001338:	0ff00613          	li	a2,255
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
2000133c:	00a61633          	sll	a2,a2,a0
20001340:	fff64613          	not	a2,a2
20001344:	8df1                	and	a1,a1,a2
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001346:	0ff47613          	andi	a2,s0,255
2000134a:	00a61533          	sll	a0,a2,a0
2000134e:	461d                	li	a2,7
20001350:	00a5e433          	or	s0,a1,a0
pmp_cfg_csr_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
  switch (region) {
20001354:	00964f63          	blt	a2,s1,20001372 <pmp_csr_cfg_field_write+0x5a>
20001358:	450d                	li	a0,3
2000135a:	02954b63          	blt	a0,s1,20001390 <pmp_csr_cfg_field_write+0x78>
2000135e:	4505                	li	a0,1
20001360:	06954063          	blt	a0,s1,200013c0 <pmp_csr_cfg_field_write+0xa8>
20001364:	c0d5                	beqz	s1,20001408 <pmp_csr_cfg_field_write+0xf0>
20001366:	4505                	li	a0,1
20001368:	0ea49063          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:30
PMP_REGION(1, 0)
2000136c:	3a041073          	csrw	pmpcfg0,s0
20001370:	a0d9                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
20001372:	452d                	li	a0,11
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
20001374:	02954a63          	blt	a0,s1,200013a8 <pmp_csr_cfg_field_write+0x90>
20001378:	4525                	li	a0,9
2000137a:	04954c63          	blt	a0,s1,200013d2 <pmp_csr_cfg_field_write+0xba>
2000137e:	4521                	li	a0,8
20001380:	08a48763          	beq	s1,a0,2000140e <pmp_csr_cfg_field_write+0xf6>
20001384:	4525                	li	a0,9
20001386:	0ca49163          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:40
PMP_REGION(9, 2)
2000138a:	3a241073          	csrw	pmpcfg2,s0
2000138e:	a065                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
20001390:	4515                	li	a0,5
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
20001392:	04954963          	blt	a0,s1,200013e4 <pmp_csr_cfg_field_write+0xcc>
20001396:	4511                	li	a0,4
20001398:	06a48e63          	beq	s1,a0,20001414 <pmp_csr_cfg_field_write+0xfc>
2000139c:	4515                	li	a0,5
2000139e:	0aa49563          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:35
PMP_REGION(5, 1)
200013a2:	3a141073          	csrw	pmpcfg1,s0
200013a6:	a841                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
200013a8:	4535                	li	a0,13
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
200013aa:	04954663          	blt	a0,s1,200013f6 <pmp_csr_cfg_field_write+0xde>
200013ae:	4531                	li	a0,12
200013b0:	06a48563          	beq	s1,a0,2000141a <pmp_csr_cfg_field_write+0x102>
200013b4:	4535                	li	a0,13
200013b6:	08a49963          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:45
PMP_REGION(13, 3)
200013ba:	3a341073          	csrw	pmpcfg3,s0
200013be:	a8a5                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
200013c0:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
200013c2:	04a48f63          	beq	s1,a0,20001420 <pmp_csr_cfg_field_write+0x108>
200013c6:	450d                	li	a0,3
200013c8:	08a49063          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:32
PMP_REGION(3, 0)
200013cc:	3a041073          	csrw	pmpcfg0,s0
200013d0:	a09d                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
200013d2:	4529                	li	a0,10
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
200013d4:	04a48963          	beq	s1,a0,20001426 <pmp_csr_cfg_field_write+0x10e>
200013d8:	452d                	li	a0,11
200013da:	06a49763          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:42
PMP_REGION(11, 2)
200013de:	3a241073          	csrw	pmpcfg2,s0
200013e2:	a891                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
200013e4:	4519                	li	a0,6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
200013e6:	04a48363          	beq	s1,a0,2000142c <pmp_csr_cfg_field_write+0x114>
200013ea:	451d                	li	a0,7
200013ec:	04a49e63          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:37
PMP_REGION(7, 1)
200013f0:	3a141073          	csrw	pmpcfg1,s0
200013f4:	a089                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
200013f6:	4539                	li	a0,14
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:82
200013f8:	02a48d63          	beq	s1,a0,20001432 <pmp_csr_cfg_field_write+0x11a>
200013fc:	453d                	li	a0,15
200013fe:	04a49563          	bne	s1,a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:47
PMP_REGION(15, 3)
20001402:	3a341073          	csrw	pmpcfg3,s0
20001406:	a805                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:29
PMP_REGION(0, 0)
20001408:	3a041073          	csrw	pmpcfg0,s0
2000140c:	a02d                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:39
PMP_REGION(8, 2)
2000140e:	3a241073          	csrw	pmpcfg2,s0
20001412:	a015                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:34
PMP_REGION(4, 1)
20001414:	3a141073          	csrw	pmpcfg1,s0
20001418:	a839                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:44
PMP_REGION(12, 3)
2000141a:	3a341073          	csrw	pmpcfg3,s0
2000141e:	a821                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:31
PMP_REGION(2, 0)
20001420:	3a041073          	csrw	pmpcfg0,s0
20001424:	a809                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:41
PMP_REGION(10, 2)
20001426:	3a241073          	csrw	pmpcfg2,s0
2000142a:	a031                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:36
PMP_REGION(6, 1)
2000142c:	3a141073          	csrw	pmpcfg1,s0
20001430:	a019                	j	20001436 <pmp_csr_cfg_field_write+0x11e>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:46
PMP_REGION(14, 3)
20001432:	3a341073          	csrw	pmpcfg3,s0
20001436:	006c                	addi	a1,sp,12
pmp_csr_cfg_field_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:194
  if (!pmp_cfg_csr_read(region, &cfg_csr_current)) {
20001438:	8526                	mv	a0,s1
2000143a:	2c09                	jal	2000164c <pmp_cfg_csr_read>
2000143c:	c511                	beqz	a0,20001448 <pmp_csr_cfg_field_write+0x130>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:198
  if (cfg_csr_current != cfg_csr_new) {
2000143e:	4532                	lw	a0,12(sp)
20001440:	4901                	li	s2,0
20001442:	00850363          	beq	a0,s0,20001448 <pmp_csr_cfg_field_write+0x130>
20001446:	4915                	li	s2,5
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:203
}
20001448:	854a                	mv	a0,s2
2000144a:	4942                	lw	s2,16(sp)
2000144c:	44d2                	lw	s1,20(sp)
2000144e:	4462                	lw	s0,24(sp)
20001450:	40f2                	lw	ra,28(sp)
20001452:	6105                	addi	sp,sp,32
20001454:	8082                	ret

20001456 <pmp_region_configure_na4>:
pmp_region_configure_na4():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:377

pmp_region_configure_na4_result_t pmp_region_configure_na4(
    pmp_region_index_t region, pmp_region_config_t config, uintptr_t address) {
20001456:	1101                	addi	sp,sp,-32
20001458:	ce06                	sw	ra,28(sp)
2000145a:	cc22                	sw	s0,24(sp)
2000145c:	ca26                	sw	s1,20(sp)
2000145e:	c84a                	sw	s2,16(sp)
20001460:	892e                	mv	s2,a1
20001462:	842a                	mv	s0,a0
20001464:	45bd                	li	a1,15
20001466:	450d                	li	a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:382
  if (PMP_GRANULARITY_IBEX > 0) {
    return kPmpRegionConfigureNa4Unavailable;
  }

  if (region >= PMP_REGIONS_NUM) {
20001468:	0485e263          	bltu	a1,s0,200014ac <pmp_region_configure_na4+0x56>
2000146c:	84b6                	mv	s1,a3
pmp_address_aligned():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:307
  return address == (address & PMP_ADDRESS_ALIGNMENT_INVERTED_MASK);
2000146e:	ffc6f593          	andi	a1,a3,-4
20001472:	4511                	li	a0,4
pmp_region_configure_na4():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:386
    return kPmpRegionConfigureNa4BadRegion;
  }

  if (!pmp_address_aligned(address)) {
20001474:	02d59c63          	bne	a1,a3,200014ac <pmp_region_configure_na4+0x56>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:390
    return kPmpRegionConfigureNa4BadAddress;
  }

  uint32_t field_value = 0;
20001478:	c602                	sw	zero,12(sp)
2000147a:	006c                	addi	a1,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:391
  if (!pmp_cfg_permissions_set(config.permissions, &field_value)) {
2000147c:	8532                	mv	a0,a2
2000147e:	282d                	jal	200014b8 <pmp_cfg_permissions_set>
20001480:	85aa                	mv	a1,a0
20001482:	4505                	li	a0,1
20001484:	c585                	beqz	a1,200014ac <pmp_region_configure_na4+0x56>
pmp_cfg_mode_lock_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:290
  *bitfield = bitfield_bit32_write(*bitfield, PMP_CFG_CSR_L, flag);
20001486:	4532                	lw	a0,12(sp)
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20001488:	f6757513          	andi	a0,a0,-153
2000148c:	4605                	li	a2,1
2000148e:	09000593          	li	a1,144
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001492:	00c90363          	beq	s2,a2,20001498 <pmp_region_configure_na4+0x42>
20001496:	45c1                	li	a1,16
20001498:	00a5e933          	or	s2,a1,a0
pmp_region_configure_na4():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:397
    return kPmpRegionConfigureNa4Error;
  }

  pmp_cfg_mode_lock_set(config.lock, &field_value);

  field_value = bitfield_field32_write(field_value, kPmpCfgModeField,
2000149c:	c64a                	sw	s2,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:402
                                       PMP_CFG_CSR_MODE_NA4);

  // Address registers must be written prior to the configuration registers to
  // ensure that they are not locked.
  pmp_region_configure_result_t result = pmp_csr_address_write(region, address);
2000149e:	8522                	mv	a0,s0
200014a0:	85a6                	mv	a1,s1
200014a2:	3339                	jal	200011b0 <pmp_csr_address_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:403
  if (result != kPmpRegionConfigureOk) {
200014a4:	e501                	bnez	a0,200014ac <pmp_region_configure_na4+0x56>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:407
    return (pmp_region_configure_na4_result_t)result;
  }

  result = pmp_csr_cfg_field_write(region, field_value);
200014a6:	8522                	mv	a0,s0
200014a8:	85ca                	mv	a1,s2
200014aa:	35bd                	jal	20001318 <pmp_csr_cfg_field_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:413
  if (result != kPmpRegionConfigureOk) {
    return (pmp_region_configure_na4_result_t)result;
  }

  return kPmpRegionConfigureNa4Ok;
}
200014ac:	4942                	lw	s2,16(sp)
200014ae:	44d2                	lw	s1,20(sp)
200014b0:	4462                	lw	s0,24(sp)
200014b2:	40f2                	lw	ra,28(sp)
200014b4:	6105                	addi	sp,sp,32
200014b6:	8082                	ret

200014b8 <pmp_cfg_permissions_set>:
pmp_cfg_permissions_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:251
                                    uint32_t *bitfield) {
200014b8:	4689                	li	a3,2
200014ba:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:252
  switch (perm) {
200014bc:	00a6cb63          	blt	a3,a0,200014d2 <pmp_cfg_permissions_set+0x1a>
200014c0:	c915                	beqz	a0,200014f4 <pmp_cfg_permissions_set+0x3c>
200014c2:	4685                	li	a3,1
200014c4:	02d50563          	beq	a0,a3,200014ee <pmp_cfg_permissions_set+0x36>
200014c8:	4689                	li	a3,2
200014ca:	02d51663          	bne	a0,a3,200014f6 <pmp_cfg_permissions_set+0x3e>
200014ce:	4511                	li	a0,4
200014d0:	a839                	j	200014ee <pmp_cfg_permissions_set+0x36>
200014d2:	468d                	li	a3,3
200014d4:	00d50a63          	beq	a0,a3,200014e8 <pmp_cfg_permissions_set+0x30>
200014d8:	4691                	li	a3,4
200014da:	00d50963          	beq	a0,a3,200014ec <pmp_cfg_permissions_set+0x34>
200014de:	4695                	li	a3,5
200014e0:	00d51b63          	bne	a0,a3,200014f6 <pmp_cfg_permissions_set+0x3e>
200014e4:	451d                	li	a0,7
200014e6:	a021                	j	200014ee <pmp_cfg_permissions_set+0x36>
200014e8:	4515                	li	a0,5
200014ea:	a011                	j	200014ee <pmp_cfg_permissions_set+0x36>
200014ec:	450d                	li	a0,3
200014ee:	4190                	lw	a2,0(a1)
200014f0:	8d51                	or	a0,a0,a2
200014f2:	c188                	sw	a0,0(a1)
200014f4:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:280
}
200014f6:	8532                	mv	a0,a2
200014f8:	8082                	ret

200014fa <pmp_region_configure_napot>:
pmp_region_configure_napot():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:417

pmp_region_configure_napot_result_t pmp_region_configure_napot(
    pmp_region_index_t region, pmp_region_config_t config, uintptr_t address,
    uint32_t size) {
200014fa:	1101                	addi	sp,sp,-32
200014fc:	ce06                	sw	ra,28(sp)
200014fe:	cc22                	sw	s0,24(sp)
20001500:	ca26                	sw	s1,20(sp)
20001502:	c84a                	sw	s2,16(sp)
20001504:	c64e                	sw	s3,12(sp)
20001506:	892e                	mv	s2,a1
20001508:	842a                	mv	s0,a0
2000150a:	45bd                	li	a1,15
2000150c:	450d                	li	a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:418
  if (region >= PMP_REGIONS_NUM) {
2000150e:	0685e063          	bltu	a1,s0,2000156e <pmp_region_configure_napot+0x74>
20001512:	45a1                	li	a1,8
20001514:	4511                	li	a0,4
pmp_napot_address_construct():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:328
  if (size < PMP_ADDRESS_ALIGNMENT || size < PMP_ADDRESS_MIN_ALIGNMENT_NAPOT) {
20001516:	04b76c63          	bltu	a4,a1,2000156e <pmp_region_configure_napot+0x74>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:333
  uint32_t size_mask = size - 1;
2000151a:	fff70993          	addi	s3,a4,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:334
  if ((size & size_mask) != 0) {
2000151e:	013775b3          	and	a1,a4,s3
20001522:	4519                	li	a0,6
20001524:	e5a9                	bnez	a1,2000156e <pmp_region_configure_napot+0x74>
20001526:	84b6                	mv	s1,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:339
  if (address != (address & (~size_mask))) {
20001528:	40e00533          	neg	a0,a4
2000152c:	00d575b3          	and	a1,a0,a3
20001530:	4511                	li	a0,4
20001532:	02d59e63          	bne	a1,a3,2000156e <pmp_region_configure_napot+0x74>
pmp_region_configure_napot():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:429
      pmp_napot_address_construct(address, size, &napot_address);
  if (napot_result != kPmpRegionConfigureNapotOk) {
    return napot_result;
  }

  uint32_t field_value = 0;
20001536:	c402                	sw	zero,8(sp)
20001538:	002c                	addi	a1,sp,8
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:430
  if (!pmp_cfg_permissions_set(config.permissions, &field_value)) {
2000153a:	8532                	mv	a0,a2
2000153c:	3fb5                	jal	200014b8 <pmp_cfg_permissions_set>
2000153e:	85aa                	mv	a1,a0
20001540:	4505                	li	a0,1
20001542:	c595                	beqz	a1,2000156e <pmp_region_configure_napot+0x74>
pmp_cfg_mode_lock_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:290
  *bitfield = bitfield_bit32_write(*bitfield, PMP_CFG_CSR_L, flag);
20001544:	4522                	lw	a0,8(sp)
pmp_napot_address_construct():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:345
  *pmp_address_napot = address | (size_mask >> 1);
20001546:	0019d593          	srli	a1,s3,0x1
2000154a:	8dc5                	or	a1,a1,s1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
2000154c:	f6757513          	andi	a0,a0,-153
20001550:	4685                	li	a3,1
20001552:	09800613          	li	a2,152
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001556:	00d90363          	beq	s2,a3,2000155c <pmp_region_configure_napot+0x62>
2000155a:	4661                	li	a2,24
2000155c:	00a664b3          	or	s1,a2,a0
pmp_region_configure_napot():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:436
    return kPmpRegionConfigureNapotError;
  }

  pmp_cfg_mode_lock_set(config.lock, &field_value);

  field_value = bitfield_field32_write(field_value, kPmpCfgModeField,
20001560:	c426                	sw	s1,8(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:442
                                       PMP_CFG_CSR_MODE_NAPOT);

  // Address registers must be written prior to the configuration registers to
  // ensure that they are not locked.
  pmp_region_configure_result_t result =
      pmp_csr_address_write(region, napot_address);
20001562:	8522                	mv	a0,s0
20001564:	31b1                	jal	200011b0 <pmp_csr_address_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:443
  if (result != kPmpRegionConfigureOk) {
20001566:	e501                	bnez	a0,2000156e <pmp_region_configure_napot+0x74>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:447
    return (pmp_region_configure_napot_result_t)result;
  }

  result = pmp_csr_cfg_field_write(region, field_value);
20001568:	8522                	mv	a0,s0
2000156a:	85a6                	mv	a1,s1
2000156c:	3375                	jal	20001318 <pmp_csr_cfg_field_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:453
  if (result != kPmpRegionConfigureOk) {
    return (pmp_region_configure_napot_result_t)result;
  }

  return kPmpRegionConfigureNapotOk;
}
2000156e:	49b2                	lw	s3,12(sp)
20001570:	4942                	lw	s2,16(sp)
20001572:	44d2                	lw	s1,20(sp)
20001574:	4462                	lw	s0,24(sp)
20001576:	40f2                	lw	ra,28(sp)
20001578:	6105                	addi	sp,sp,32
2000157a:	8082                	ret

2000157c <pmp_region_configure_tor>:
pmp_region_configure_tor():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:457

pmp_region_configure_result_t pmp_region_configure_tor(
    pmp_region_index_t region_end, pmp_region_config_t config,
    uintptr_t address_start, uintptr_t address_end) {
2000157c:	1101                	addi	sp,sp,-32
2000157e:	ce06                	sw	ra,28(sp)
20001580:	cc22                	sw	s0,24(sp)
20001582:	ca26                	sw	s1,20(sp)
20001584:	c84a                	sw	s2,16(sp)
20001586:	c64e                	sw	s3,12(sp)
20001588:	89ae                	mv	s3,a1
2000158a:	842a                	mv	s0,a0
2000158c:	45bd                	li	a1,15
2000158e:	450d                	li	a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:458
  if (region_end >= PMP_REGIONS_NUM) {
20001590:	0685e463          	bltu	a1,s0,200015f8 <pmp_region_configure_tor+0x7c>
20001594:	893a                	mv	s2,a4
20001596:	84b6                	mv	s1,a3
20001598:	4511                	li	a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:462
    return kPmpRegionConfigureBadRegion;
  }

  if (region_end == 0 && address_start > 0) {
2000159a:	e011                	bnez	s0,2000159e <pmp_region_configure_tor+0x22>
2000159c:	ecb1                	bnez	s1,200015f8 <pmp_region_configure_tor+0x7c>
2000159e:	008035b3          	snez	a1,s0
pmp_address_aligned():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:307
  return address == (address & PMP_ADDRESS_ALIGNMENT_INVERTED_MASK);
200015a2:	ffc4f693          	andi	a3,s1,-4
200015a6:	8ea5                	xor	a3,a3,s1
200015a8:	00d036b3          	snez	a3,a3
pmp_region_configure_tor():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:466
    return kPmpRegionConfigureBadAddress;
  }

  if (region_end > 0 && !pmp_address_aligned(address_start)) {
200015ac:	8df5                	and	a1,a1,a3
200015ae:	e5a9                	bnez	a1,200015f8 <pmp_region_configure_tor+0x7c>
200015b0:	ffc97593          	andi	a1,s2,-4
200015b4:	05259263          	bne	a1,s2,200015f8 <pmp_region_configure_tor+0x7c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:474

  if (!pmp_address_aligned(address_end)) {
    return kPmpRegionConfigureBadAddress;
  }

  uint32_t field_value = 0;
200015b8:	c402                	sw	zero,8(sp)
200015ba:	002c                	addi	a1,sp,8
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:475
  if (!pmp_cfg_permissions_set(config.permissions, &field_value)) {
200015bc:	8532                	mv	a0,a2
200015be:	3ded                	jal	200014b8 <pmp_cfg_permissions_set>
200015c0:	85aa                	mv	a1,a0
200015c2:	4505                	li	a0,1
200015c4:	c995                	beqz	a1,200015f8 <pmp_region_configure_tor+0x7c>
pmp_cfg_mode_lock_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:290
  *bitfield = bitfield_bit32_write(*bitfield, PMP_CFG_CSR_L, flag);
200015c6:	4522                	lw	a0,8(sp)
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200015c8:	f6757513          	andi	a0,a0,-153
200015cc:	4605                	li	a2,1
200015ce:	08800593          	li	a1,136
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
200015d2:	00c98363          	beq	s3,a2,200015d8 <pmp_region_configure_tor+0x5c>
200015d6:	45a1                	li	a1,8
200015d8:	00a5e9b3          	or	s3,a1,a0
pmp_region_configure_tor():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:481
    return kPmpRegionConfigureError;
  }

  pmp_cfg_mode_lock_set(config.lock, &field_value);

  field_value = bitfield_field32_write(field_value, kPmpCfgModeField,
200015dc:	c44e                	sw	s3,8(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:486
                                       PMP_CFG_CSR_MODE_TOR);

  // Address registers must be written prior to the configuration registers to
  // ensure that they are not locked.
  if (region_end != 0) {
200015de:	c411                	beqz	s0,200015ea <pmp_region_configure_tor+0x6e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:488
    pmp_region_configure_result_t result =
        pmp_csr_address_write(region_end - 1, address_start);
200015e0:	fff40513          	addi	a0,s0,-1
200015e4:	85a6                	mv	a1,s1
200015e6:	36e9                	jal	200011b0 <pmp_csr_address_write>
200015e8:	e901                	bnez	a0,200015f8 <pmp_region_configure_tor+0x7c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:495
      return result;
    }
  }

  pmp_region_configure_result_t result =
      pmp_csr_address_write(region_end, address_end);
200015ea:	8522                	mv	a0,s0
200015ec:	85ca                	mv	a1,s2
200015ee:	36c9                	jal	200011b0 <pmp_csr_address_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:496
  if (result != kPmpRegionConfigureOk) {
200015f0:	e501                	bnez	a0,200015f8 <pmp_region_configure_tor+0x7c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:500
    return result;
  }

  result = pmp_csr_cfg_field_write(region_end, field_value);
200015f2:	8522                	mv	a0,s0
200015f4:	85ce                	mv	a1,s3
200015f6:	330d                	jal	20001318 <pmp_csr_cfg_field_write>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:506
  if (result != kPmpRegionConfigureOk) {
    return result;
  }

  return kPmpRegionConfigureOk;
}
200015f8:	49b2                	lw	s3,12(sp)
200015fa:	4942                	lw	s2,16(sp)
200015fc:	44d2                	lw	s1,20(sp)
200015fe:	4462                	lw	s0,24(sp)
20001600:	40f2                	lw	ra,28(sp)
20001602:	6105                	addi	sp,sp,32
20001604:	8082                	ret

20001606 <pmp_cfg_mode_lock_status_get>:
pmp_cfg_mode_lock_status_get():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:509

pmp_region_configure_result_t pmp_cfg_mode_lock_status_get(
    pmp_region_index_t region, pmp_region_lock_t *lock) {
20001606:	1141                	addi	sp,sp,-16
20001608:	c606                	sw	ra,12(sp)
2000160a:	c422                	sw	s0,8(sp)
2000160c:	c226                	sw	s1,4(sp)
2000160e:	842e                	mv	s0,a1
20001610:	84aa                	mv	s1,a0
20001612:	45bd                	li	a1,15
20001614:	450d                	li	a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:510
  if (region >= PMP_REGIONS_NUM) {
20001616:	0295e663          	bltu	a1,s1,20001642 <pmp_cfg_mode_lock_status_get+0x3c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:514
    return kPmpRegionConfigureBadRegion;
  }

  if (lock == NULL) {
2000161a:	c00d                	beqz	s0,2000163c <pmp_cfg_mode_lock_status_get+0x36>
2000161c:	858a                	mv	a1,sp
pmp_csr_cfg_field_read():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:150
  if (!pmp_cfg_csr_read(region, &cfg_csr_original)) {
2000161e:	8526                	mv	a0,s1
20001620:	2035                	jal	2000164c <pmp_cfg_csr_read>
20001622:	cd19                	beqz	a0,20001640 <pmp_cfg_mode_lock_status_get+0x3a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:159
  *field_value = bitfield_field32_read(cfg_csr_original, pmp_csr_cfg_field);
20001624:	4582                	lw	a1,0(sp)
20001626:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:154
  size_t field_index = (region % PMP_CFG_FIELDS_PER_REG) * PMP_CFG_FIELD_WIDTH;
20001628:	00349613          	slli	a2,s1,0x3
2000162c:	8a61                	andi	a2,a2,24
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
2000162e:	00c5d5b3          	srl	a1,a1,a2
20001632:	0805f593          	andi	a1,a1,128
20001636:	819d                	srli	a1,a1,0x7
pmp_cfg_mode_lock_status_get():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:526
  if (result != kPmpRegionConfigureOk) {
    return result;
  }

  bool flag = bitfield_bit32_read(field_value, PMP_CFG_CSR_L);
  *lock = flag ? kPmpRegionLockLocked : kPmpRegionLockUnlocked;
20001638:	c00c                	sw	a1,0(s0)
2000163a:	a021                	j	20001642 <pmp_cfg_mode_lock_status_get+0x3c>
2000163c:	4509                	li	a0,2
2000163e:	a011                	j	20001642 <pmp_cfg_mode_lock_status_get+0x3c>
20001640:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:529

  return kPmpRegionConfigureOk;
}
20001642:	4492                	lw	s1,4(sp)
20001644:	4422                	lw	s0,8(sp)
20001646:	40b2                	lw	ra,12(sp)
20001648:	0141                	addi	sp,sp,16
2000164a:	8082                	ret

2000164c <pmp_cfg_csr_read>:
pmp_cfg_csr_read():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:56
static bool pmp_cfg_csr_read(pmp_region_index_t region, uint32_t *value) {
2000164c:	469d                	li	a3,7
2000164e:	862a                	mv	a2,a0
20001650:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
  switch (region) {
20001652:	00c6cf63          	blt	a3,a2,20001670 <pmp_cfg_csr_read+0x24>
20001656:	468d                	li	a3,3
20001658:	02c6cb63          	blt	a3,a2,2000168e <pmp_cfg_csr_read+0x42>
2000165c:	4685                	li	a3,1
2000165e:	06c6c063          	blt	a3,a2,200016be <pmp_cfg_csr_read+0x72>
20001662:	c255                	beqz	a2,20001706 <pmp_cfg_csr_read+0xba>
20001664:	4685                	li	a3,1
20001666:	0cd61963          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:30
PMP_REGION(1, 0)
2000166a:	3a002573          	csrr	a0,pmpcfg0
2000166e:	a0d9                	j	20001734 <pmp_cfg_csr_read+0xe8>
20001670:	46ad                	li	a3,11
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
20001672:	02c6ca63          	blt	a3,a2,200016a6 <pmp_cfg_csr_read+0x5a>
20001676:	46a5                	li	a3,9
20001678:	04c6cc63          	blt	a3,a2,200016d0 <pmp_cfg_csr_read+0x84>
2000167c:	46a1                	li	a3,8
2000167e:	08d60763          	beq	a2,a3,2000170c <pmp_cfg_csr_read+0xc0>
20001682:	46a5                	li	a3,9
20001684:	0ad61a63          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:40
PMP_REGION(9, 2)
20001688:	3a202573          	csrr	a0,pmpcfg2
2000168c:	a065                	j	20001734 <pmp_cfg_csr_read+0xe8>
2000168e:	4695                	li	a3,5
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
20001690:	04c6c963          	blt	a3,a2,200016e2 <pmp_cfg_csr_read+0x96>
20001694:	4691                	li	a3,4
20001696:	06d60e63          	beq	a2,a3,20001712 <pmp_cfg_csr_read+0xc6>
2000169a:	4695                	li	a3,5
2000169c:	08d61e63          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:35
PMP_REGION(5, 1)
200016a0:	3a102573          	csrr	a0,pmpcfg1
200016a4:	a841                	j	20001734 <pmp_cfg_csr_read+0xe8>
200016a6:	46b5                	li	a3,13
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
200016a8:	04c6c663          	blt	a3,a2,200016f4 <pmp_cfg_csr_read+0xa8>
200016ac:	46b1                	li	a3,12
200016ae:	06d60563          	beq	a2,a3,20001718 <pmp_cfg_csr_read+0xcc>
200016b2:	46b5                	li	a3,13
200016b4:	08d61263          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:45
PMP_REGION(13, 3)
200016b8:	3a302573          	csrr	a0,pmpcfg3
200016bc:	a8a5                	j	20001734 <pmp_cfg_csr_read+0xe8>
200016be:	4689                	li	a3,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
200016c0:	04d60f63          	beq	a2,a3,2000171e <pmp_cfg_csr_read+0xd2>
200016c4:	468d                	li	a3,3
200016c6:	06d61963          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:32
PMP_REGION(3, 0)
200016ca:	3a002573          	csrr	a0,pmpcfg0
200016ce:	a09d                	j	20001734 <pmp_cfg_csr_read+0xe8>
200016d0:	46a9                	li	a3,10
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
200016d2:	04d60963          	beq	a2,a3,20001724 <pmp_cfg_csr_read+0xd8>
200016d6:	46ad                	li	a3,11
200016d8:	06d61063          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:42
PMP_REGION(11, 2)
200016dc:	3a202573          	csrr	a0,pmpcfg2
200016e0:	a891                	j	20001734 <pmp_cfg_csr_read+0xe8>
200016e2:	4699                	li	a3,6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
200016e4:	04d60363          	beq	a2,a3,2000172a <pmp_cfg_csr_read+0xde>
200016e8:	469d                	li	a3,7
200016ea:	04d61763          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:37
PMP_REGION(7, 1)
200016ee:	3a102573          	csrr	a0,pmpcfg1
200016f2:	a089                	j	20001734 <pmp_cfg_csr_read+0xe8>
200016f4:	46b9                	li	a3,14
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:57
200016f6:	02d60d63          	beq	a2,a3,20001730 <pmp_cfg_csr_read+0xe4>
200016fa:	46bd                	li	a3,15
200016fc:	02d61e63          	bne	a2,a3,20001738 <pmp_cfg_csr_read+0xec>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:47
PMP_REGION(15, 3)
20001700:	3a302573          	csrr	a0,pmpcfg3
20001704:	a805                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:29
PMP_REGION(0, 0)
20001706:	3a002573          	csrr	a0,pmpcfg0
2000170a:	a02d                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:39
PMP_REGION(8, 2)
2000170c:	3a202573          	csrr	a0,pmpcfg2
20001710:	a015                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:34
PMP_REGION(4, 1)
20001712:	3a102573          	csrr	a0,pmpcfg1
20001716:	a839                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:44
PMP_REGION(12, 3)
20001718:	3a302573          	csrr	a0,pmpcfg3
2000171c:	a821                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:31
PMP_REGION(2, 0)
2000171e:	3a002573          	csrr	a0,pmpcfg0
20001722:	a809                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:41
PMP_REGION(10, 2)
20001724:	3a202573          	csrr	a0,pmpcfg2
20001728:	a031                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:36
PMP_REGION(6, 1)
2000172a:	3a102573          	csrr	a0,pmpcfg1
2000172e:	a019                	j	20001734 <pmp_cfg_csr_read+0xe8>
/home/gl/work/opentitan/repo/sw/device/lib/runtime/pmp_regions.def:46
PMP_REGION(14, 3)
20001730:	3a302573          	csrr	a0,pmpcfg3
20001734:	c188                	sw	a0,0(a1)
20001736:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/pmp.c:67
}
20001738:	8082                	ret
	...

2000173c <test_status_set>:
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
2000173c:	1101                	addi	sp,sp,-32
2000173e:	ce06                	sw	ra,28(sp)
20001740:	cc22                	sw	s0,24(sp)
20001742:	65b1                	lui	a1,0xc
20001744:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:26
  switch (test_status) {
20001748:	02b50163          	beq	a0,a1,2000176a <test_status_set+0x2e>
2000174c:	65a5                	lui	a1,0x9
2000174e:	05b5                	addi	a1,a1,13
20001750:	04b50063          	beq	a0,a1,20001790 <test_status_set+0x54>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
20001754:	00000597          	auipc	a1,0x0
20001758:	4e058593          	addi	a1,a1,1248 # 20001c34 <kDeviceTestStatusAddress>
2000175c:	418c                	lw	a1,0(a1)
2000175e:	c191                	beqz	a1,20001762 <test_status_set+0x26>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001760:	c188                	sw	a0,0(a1)
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
20001762:	4462                	lw	s0,24(sp)
20001764:	40f2                	lw	ra,28(sp)
20001766:	6105                	addi	sp,sp,32
20001768:	8082                	ret
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
2000176a:	00000517          	auipc	a0,0x0
2000176e:	4ce50513          	addi	a0,a0,1230 # 20001c38 <kDeviceLogBypassUartAddress>
20001772:	4108                	lw	a0,0(a0)
20001774:	e129                	bnez	a0,200017b6 <test_status_set+0x7a>
20001776:	00000597          	auipc	a1,0x0
2000177a:	5b658593          	addi	a1,a1,1462 # 20001d2c <kDifUartFifoSizeBytes+0x18>
2000177e:	840a                	mv	s0,sp
20001780:	4651                	li	a2,20
20001782:	8522                	mv	a0,s0
20001784:	e49fe0ef          	jal	ra,200005cc <memcpy>
20001788:	8522                	mv	a0,s0
2000178a:	8beff0ef          	jal	ra,20000848 <base_log_internal_core>
2000178e:	a81d                	j	200017c4 <test_status_set+0x88>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
20001790:	00000517          	auipc	a0,0x0
20001794:	4a850513          	addi	a0,a0,1192 # 20001c38 <kDeviceLogBypassUartAddress>
20001798:	4108                	lw	a0,0(a0)
2000179a:	ed1d                	bnez	a0,200017d8 <test_status_set+0x9c>
2000179c:	00000597          	auipc	a1,0x0
200017a0:	57c58593          	addi	a1,a1,1404 # 20001d18 <kDifUartFifoSizeBytes+0x4>
200017a4:	840a                	mv	s0,sp
200017a6:	4651                	li	a2,20
200017a8:	8522                	mv	a0,s0
200017aa:	e23fe0ef          	jal	ra,200005cc <memcpy>
200017ae:	8522                	mv	a0,s0
200017b0:	898ff0ef          	jal	ra,20000848 <base_log_internal_core>
200017b4:	a80d                	j	200017e6 <test_status_set+0xaa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
200017b6:	e000f517          	auipc	a0,0xe000f
200017ba:	97650513          	addi	a0,a0,-1674 # 1012c <test_status_set.kLogFields.2>
200017be:	4581                	li	a1,0
200017c0:	92aff0ef          	jal	ra,200008ea <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
200017c4:	00000517          	auipc	a0,0x0
200017c8:	47050513          	addi	a0,a0,1136 # 20001c34 <kDeviceTestStatusAddress>
200017cc:	4108                	lw	a0,0(a0)
200017ce:	c50d                	beqz	a0,200017f8 <test_status_set+0xbc>
200017d0:	65b1                	lui	a1,0xc
200017d2:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
200017d6:	a005                	j	200017f6 <test_status_set+0xba>
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
200017d8:	e000f517          	auipc	a0,0xe000f
200017dc:	94050513          	addi	a0,a0,-1728 # 10118 <test_status_set.kLogFields>
200017e0:	4581                	li	a1,0
200017e2:	908ff0ef          	jal	ra,200008ea <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
200017e6:	00000517          	auipc	a0,0x0
200017ea:	44e50513          	addi	a0,a0,1102 # 20001c34 <kDeviceTestStatusAddress>
200017ee:	4108                	lw	a0,0(a0)
200017f0:	c501                	beqz	a0,200017f8 <test_status_set+0xbc>
200017f2:	65a5                	lui	a1,0x9
200017f4:	05b5                	addi	a1,a1,13
200017f6:	c10c                	sw	a1,0(a0)
200017f8:	a09fe0ef          	jal	ra,20000200 <abort>

200017fc <__udivdi3>:
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1319
200017fc:	88aa                	mv	a7,a0
200017fe:	87ae                	mv	a5,a1
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1024
20001800:	8832                	mv	a6,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1025
20001802:	8536                	mv	a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1026
20001804:	8346                	mv	t1,a7
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1064
20001806:	20069963          	bnez	a3,20001a18 <__udivdi3+0x21c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1066
2000180a:	200026b7          	lui	a3,0x20002
2000180e:	d4068693          	addi	a3,a3,-704 # 20001d40 <__clz_tab>
20001812:	0cc5f063          	bgeu	a1,a2,200018d2 <__udivdi3+0xd6>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
20001816:	6741                	lui	a4,0x10
20001818:	0ae67663          	bgeu	a2,a4,200018c4 <__udivdi3+0xc8>
2000181c:	0ff00713          	li	a4,255
20001820:	00c73733          	sltu	a4,a4,a2
20001824:	070e                	slli	a4,a4,0x3
20001826:	00e65533          	srl	a0,a2,a4
2000182a:	96aa                	add	a3,a3,a0
2000182c:	0006c683          	lbu	a3,0(a3)
20001830:	02000513          	li	a0,32
20001834:	9736                	add	a4,a4,a3
20001836:	40e506b3          	sub	a3,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1072
2000183a:	00e50c63          	beq	a0,a4,20001852 <__udivdi3+0x56>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
2000183e:	00d797b3          	sll	a5,a5,a3
20001842:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1077
20001846:	00d61833          	sll	a6,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
2000184a:	00f765b3          	or	a1,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1079
2000184e:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1082
20001852:	01085893          	srli	a7,a6,0x10
20001856:	0315d7b3          	divu	a5,a1,a7
2000185a:	01081613          	slli	a2,a6,0x10
2000185e:	8241                	srli	a2,a2,0x10
20001860:	01035713          	srli	a4,t1,0x10
20001864:	0315f6b3          	remu	a3,a1,a7
20001868:	853e                	mv	a0,a5
2000186a:	02f605b3          	mul	a1,a2,a5
2000186e:	06c2                	slli	a3,a3,0x10
20001870:	8f55                	or	a4,a4,a3
20001872:	00b77c63          	bgeu	a4,a1,2000188a <__udivdi3+0x8e>
20001876:	9742                	add	a4,a4,a6
20001878:	fff78513          	addi	a0,a5,-1
2000187c:	01076763          	bltu	a4,a6,2000188a <__udivdi3+0x8e>
20001880:	00b77563          	bgeu	a4,a1,2000188a <__udivdi3+0x8e>
20001884:	ffe78513          	addi	a0,a5,-2
20001888:	9742                	add	a4,a4,a6
2000188a:	8f0d                	sub	a4,a4,a1
2000188c:	031777b3          	remu	a5,a4,a7
20001890:	0342                	slli	t1,t1,0x10
20001892:	01035313          	srli	t1,t1,0x10
20001896:	03175733          	divu	a4,a4,a7
2000189a:	07c2                	slli	a5,a5,0x10
2000189c:	0067e333          	or	t1,a5,t1
200018a0:	02e606b3          	mul	a3,a2,a4
200018a4:	863a                	mv	a2,a4
200018a6:	00d37b63          	bgeu	t1,a3,200018bc <__udivdi3+0xc0>
200018aa:	9342                	add	t1,t1,a6
200018ac:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
200018b0:	01036663          	bltu	t1,a6,200018bc <__udivdi3+0xc0>
200018b4:	00d37463          	bgeu	t1,a3,200018bc <__udivdi3+0xc0>
200018b8:	ffe70613          	addi	a2,a4,-2
200018bc:	0542                	slli	a0,a0,0x10
200018be:	8d51                	or	a0,a0,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
200018c0:	4581                	li	a1,0
200018c2:	a85d                	j	20001978 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
200018c4:	01000537          	lui	a0,0x1000
200018c8:	4741                	li	a4,16
200018ca:	f4a66ee3          	bltu	a2,a0,20001826 <__udivdi3+0x2a>
200018ce:	4761                	li	a4,24
200018d0:	bf99                	j	20001826 <__udivdi3+0x2a>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1091
200018d2:	e601                	bnez	a2,200018da <__udivdi3+0xde>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1092
200018d4:	4705                	li	a4,1
200018d6:	02c75833          	divu	a6,a4,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
200018da:	6741                	lui	a4,0x10
200018dc:	08e87f63          	bgeu	a6,a4,2000197a <__udivdi3+0x17e>
200018e0:	0ff00713          	li	a4,255
200018e4:	01077363          	bgeu	a4,a6,200018ea <__udivdi3+0xee>
200018e8:	4521                	li	a0,8
200018ea:	00a85733          	srl	a4,a6,a0
200018ee:	96ba                	add	a3,a3,a4
200018f0:	0006c703          	lbu	a4,0(a3)
200018f4:	02000613          	li	a2,32
200018f8:	972a                	add	a4,a4,a0
200018fa:	40e606b3          	sub	a3,a2,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1096
200018fe:	08e61563          	bne	a2,a4,20001988 <__udivdi3+0x18c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1105
20001902:	410787b3          	sub	a5,a5,a6
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1106
20001906:	4585                	li	a1,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1124
20001908:	01085893          	srli	a7,a6,0x10
2000190c:	01081613          	slli	a2,a6,0x10
20001910:	8241                	srli	a2,a2,0x10
20001912:	01035713          	srli	a4,t1,0x10
20001916:	0317f6b3          	remu	a3,a5,a7
2000191a:	0317d7b3          	divu	a5,a5,a7
2000191e:	06c2                	slli	a3,a3,0x10
20001920:	8f55                	or	a4,a4,a3
20001922:	02f60e33          	mul	t3,a2,a5
20001926:	853e                	mv	a0,a5
20001928:	01c77c63          	bgeu	a4,t3,20001940 <__udivdi3+0x144>
2000192c:	9742                	add	a4,a4,a6
2000192e:	fff78513          	addi	a0,a5,-1
20001932:	01076763          	bltu	a4,a6,20001940 <__udivdi3+0x144>
20001936:	01c77563          	bgeu	a4,t3,20001940 <__udivdi3+0x144>
2000193a:	ffe78513          	addi	a0,a5,-2
2000193e:	9742                	add	a4,a4,a6
20001940:	41c70733          	sub	a4,a4,t3
20001944:	031777b3          	remu	a5,a4,a7
20001948:	0342                	slli	t1,t1,0x10
2000194a:	01035313          	srli	t1,t1,0x10
2000194e:	03175733          	divu	a4,a4,a7
20001952:	07c2                	slli	a5,a5,0x10
20001954:	0067e333          	or	t1,a5,t1
20001958:	02e606b3          	mul	a3,a2,a4
2000195c:	863a                	mv	a2,a4
2000195e:	00d37b63          	bgeu	t1,a3,20001974 <__udivdi3+0x178>
20001962:	9342                	add	t1,t1,a6
20001964:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
20001968:	01036663          	bltu	t1,a6,20001974 <__udivdi3+0x178>
2000196c:	00d37463          	bgeu	t1,a3,20001974 <__udivdi3+0x178>
20001970:	ffe70613          	addi	a2,a4,-2
20001974:	0542                	slli	a0,a0,0x10
20001976:	8d51                	or	a0,a0,a2
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1321
20001978:	8082                	ret
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
2000197a:	01000737          	lui	a4,0x1000
2000197e:	4541                	li	a0,16
20001980:	f6e865e3          	bltu	a6,a4,200018ea <__udivdi3+0xee>
20001984:	4561                	li	a0,24
20001986:	b795                	j	200018ea <__udivdi3+0xee>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1114
20001988:	00d81833          	sll	a6,a6,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1115
2000198c:	00e7d5b3          	srl	a1,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1117
20001990:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
20001994:	00d797b3          	sll	a5,a5,a3
20001998:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
2000199c:	01085893          	srli	a7,a6,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
200019a0:	00f76633          	or	a2,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
200019a4:	0315f733          	remu	a4,a1,a7
200019a8:	01081793          	slli	a5,a6,0x10
200019ac:	83c1                	srli	a5,a5,0x10
200019ae:	01065513          	srli	a0,a2,0x10
200019b2:	0315d5b3          	divu	a1,a1,a7
200019b6:	0742                	slli	a4,a4,0x10
200019b8:	8f49                	or	a4,a4,a0
200019ba:	02b786b3          	mul	a3,a5,a1
200019be:	852e                	mv	a0,a1
200019c0:	00d77c63          	bgeu	a4,a3,200019d8 <__udivdi3+0x1dc>
200019c4:	9742                	add	a4,a4,a6
200019c6:	fff58513          	addi	a0,a1,-1 # 8fff <_stack_size+0x6fff>
200019ca:	01076763          	bltu	a4,a6,200019d8 <__udivdi3+0x1dc>
200019ce:	00d77563          	bgeu	a4,a3,200019d8 <__udivdi3+0x1dc>
200019d2:	ffe58513          	addi	a0,a1,-2
200019d6:	9742                	add	a4,a4,a6
200019d8:	40d706b3          	sub	a3,a4,a3
200019dc:	0316f733          	remu	a4,a3,a7
200019e0:	0642                	slli	a2,a2,0x10
200019e2:	8241                	srli	a2,a2,0x10
200019e4:	0316d6b3          	divu	a3,a3,a7
200019e8:	0742                	slli	a4,a4,0x10
200019ea:	02d788b3          	mul	a7,a5,a3
200019ee:	00c767b3          	or	a5,a4,a2
200019f2:	8736                	mv	a4,a3
200019f4:	0117fc63          	bgeu	a5,a7,20001a0c <__udivdi3+0x210>
200019f8:	97c2                	add	a5,a5,a6
200019fa:	fff68713          	addi	a4,a3,-1
200019fe:	0107e763          	bltu	a5,a6,20001a0c <__udivdi3+0x210>
20001a02:	0117f563          	bgeu	a5,a7,20001a0c <__udivdi3+0x210>
20001a06:	ffe68713          	addi	a4,a3,-2
20001a0a:	97c2                	add	a5,a5,a6
20001a0c:	01051593          	slli	a1,a0,0x10
20001a10:	411787b3          	sub	a5,a5,a7
20001a14:	8dd9                	or	a1,a1,a4
20001a16:	bdcd                	j	20001908 <__udivdi3+0x10c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1140
20001a18:	14d5e263          	bltu	a1,a3,20001b5c <__udivdi3+0x360>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20001a1c:	6741                	lui	a4,0x10
20001a1e:	02e6ff63          	bgeu	a3,a4,20001a5c <__udivdi3+0x260>
20001a22:	0ff00713          	li	a4,255
20001a26:	00d735b3          	sltu	a1,a4,a3
20001a2a:	058e                	slli	a1,a1,0x3
20001a2c:	20002737          	lui	a4,0x20002
20001a30:	00b6d533          	srl	a0,a3,a1
20001a34:	d4070713          	addi	a4,a4,-704 # 20001d40 <__clz_tab>
20001a38:	972a                	add	a4,a4,a0
20001a3a:	00074703          	lbu	a4,0(a4)
20001a3e:	02000513          	li	a0,32
20001a42:	972e                	add	a4,a4,a1
20001a44:	40e505b3          	sub	a1,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1160
20001a48:	02e51163          	bne	a0,a4,20001a6a <__udivdi3+0x26e>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1172
20001a4c:	4505                	li	a0,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1170
20001a4e:	f2f6e5e3          	bltu	a3,a5,20001978 <__udivdi3+0x17c>
20001a52:	00c8b533          	sltu	a0,a7,a2
20001a56:	00154513          	xori	a0,a0,1
20001a5a:	bf39                	j	20001978 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20001a5c:	01000737          	lui	a4,0x1000
20001a60:	45c1                	li	a1,16
20001a62:	fce6e5e3          	bltu	a3,a4,20001a2c <__udivdi3+0x230>
20001a66:	45e1                	li	a1,24
20001a68:	b7d1                	j	20001a2c <__udivdi3+0x230>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1194
20001a6a:	00e65333          	srl	t1,a2,a4
20001a6e:	00b696b3          	sll	a3,a3,a1
20001a72:	00d36333          	or	t1,t1,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001a76:	01035513          	srli	a0,t1,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1195
20001a7a:	00b61eb3          	sll	t4,a2,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1196
20001a7e:	00e7d633          	srl	a2,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001a82:	02a676b3          	remu	a3,a2,a0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1197
20001a86:	00b797b3          	sll	a5,a5,a1
20001a8a:	00e8d733          	srl	a4,a7,a4
20001a8e:	00f76833          	or	a6,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001a92:	01031793          	slli	a5,t1,0x10
20001a96:	83c1                	srli	a5,a5,0x10
20001a98:	01085713          	srli	a4,a6,0x10
20001a9c:	02a65633          	divu	a2,a2,a0
20001aa0:	06c2                	slli	a3,a3,0x10
20001aa2:	8f55                	or	a4,a4,a3
20001aa4:	02c78f33          	mul	t5,a5,a2
20001aa8:	8e32                	mv	t3,a2
20001aaa:	01e77c63          	bgeu	a4,t5,20001ac2 <__udivdi3+0x2c6>
20001aae:	971a                	add	a4,a4,t1
20001ab0:	fff60e13          	addi	t3,a2,-1 # ffff <_stack_size+0xdfff>
20001ab4:	00676763          	bltu	a4,t1,20001ac2 <__udivdi3+0x2c6>
20001ab8:	01e77563          	bgeu	a4,t5,20001ac2 <__udivdi3+0x2c6>
20001abc:	ffe60e13          	addi	t3,a2,-2
20001ac0:	971a                	add	a4,a4,t1
20001ac2:	41e70733          	sub	a4,a4,t5
20001ac6:	02a776b3          	remu	a3,a4,a0
20001aca:	02a75733          	divu	a4,a4,a0
20001ace:	06c2                	slli	a3,a3,0x10
20001ad0:	02e78633          	mul	a2,a5,a4
20001ad4:	01081793          	slli	a5,a6,0x10
20001ad8:	83c1                	srli	a5,a5,0x10
20001ada:	8fd5                	or	a5,a5,a3
20001adc:	86ba                	mv	a3,a4
20001ade:	00c7fc63          	bgeu	a5,a2,20001af6 <__udivdi3+0x2fa>
20001ae2:	979a                	add	a5,a5,t1
20001ae4:	fff70693          	addi	a3,a4,-1 # ffffff <test_status_set.kLogFields.2+0xfefed3>
20001ae8:	0067e763          	bltu	a5,t1,20001af6 <__udivdi3+0x2fa>
20001aec:	00c7f563          	bgeu	a5,a2,20001af6 <__udivdi3+0x2fa>
20001af0:	ffe70693          	addi	a3,a4,-2
20001af4:	979a                	add	a5,a5,t1
20001af6:	010e1513          	slli	a0,t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001afa:	6e41                	lui	t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001afc:	8d55                	or	a0,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001afe:	fffe0693          	addi	a3,t3,-1 # ffff <_stack_size+0xdfff>
20001b02:	00d57833          	and	a6,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001b06:	8f91                	sub	a5,a5,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001b08:	00def6b3          	and	a3,t4,a3
20001b0c:	01055613          	srli	a2,a0,0x10
20001b10:	010ede93          	srli	t4,t4,0x10
20001b14:	02d80333          	mul	t1,a6,a3
20001b18:	02d606b3          	mul	a3,a2,a3
20001b1c:	01035713          	srli	a4,t1,0x10
20001b20:	03d80833          	mul	a6,a6,t4
20001b24:	9836                	add	a6,a6,a3
20001b26:	9742                	add	a4,a4,a6
20001b28:	03d60633          	mul	a2,a2,t4
20001b2c:	00d77363          	bgeu	a4,a3,20001b32 <__udivdi3+0x336>
20001b30:	9672                	add	a2,a2,t3
20001b32:	01075693          	srli	a3,a4,0x10
20001b36:	9636                	add	a2,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
20001b38:	02c7e063          	bltu	a5,a2,20001b58 <__udivdi3+0x35c>
20001b3c:	d8c792e3          	bne	a5,a2,200018c0 <__udivdi3+0xc4>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001b40:	67c1                	lui	a5,0x10
20001b42:	17fd                	addi	a5,a5,-1
20001b44:	8f7d                	and	a4,a4,a5
20001b46:	0742                	slli	a4,a4,0x10
20001b48:	00f37333          	and	t1,t1,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1198
20001b4c:	00b898b3          	sll	a7,a7,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001b50:	971a                	add	a4,a4,t1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
20001b52:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
20001b54:	e2e8f2e3          	bgeu	a7,a4,20001978 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1205
20001b58:	157d                	addi	a0,a0,-1
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1206
20001b5a:	b39d                	j	200018c0 <__udivdi3+0xc4>
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1145
20001b5c:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1144
20001b5e:	4501                	li	a0,0
20001b60:	bd21                	j	20001978 <__udivdi3+0x17c>
