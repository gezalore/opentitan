
sw/device/tests/usbdev_test_sim_verilator.elf:     file format elf32-littleriscv

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .flash_header 00000004  20000000  20000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .crt          000000da  20000004  20000004  00001004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .vectors      00000080  20000100  20000100  00001100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .init_array   00000000  20000180  20000180  00004054  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .text         00001c6c  20000180  20000180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .rodata       000005f0  20001df0  20001df0  00002df0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         00000054  10000000  200023e0  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000168  10000054  20002434  00004054  2**2
                  ALLOC
  8 .logs.fields  00000118  00010000  00010000  00004054  2**2
                  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  0000416c  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000754e  00000000  00000000  00004192  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000188a  00000000  00000000  0000b6e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000098  00000000  00000000  0000cf6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000459b  00000000  00000000  0000d002  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00003b92  00000000  00000000  0001159d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000238  00000000  00000000  0001512f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00002245  00000000  00000000  00015367  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  000008f8  00000000  00000000  000175ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .crt:

20000004 <_start>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:38
_start:
  .globl _start

  // Set up the stack. We have no expectation that the rom that
  // jumps here will have the correct stack start linked in.
  la sp, _stack_end
20000004:	f0020117          	auipc	sp,0xf0020
20000008:	ffc10113          	addi	sp,sp,-4 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:44

  // Set up the global pointer. This requires that we disable linker relaxations
  // (or it will be relaxed to `mv gp, gp`).
  .option push
  .option norelax
  la gp, __global_pointer$
2000000c:	f0000197          	auipc	gp,0xf0000
20000010:	7f418193          	addi	gp,gp,2036 # 10000800 <__global_pointer$>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:48
  .option pop

  // Set up the new interrupt vector.
  la   t0, crt_interrupt_vector
20000014:	00000297          	auipc	t0,0x0
20000018:	0ec28293          	addi	t0,t0,236 # 20000100 <crt_interrupt_vector>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:49
  csrw mtvec, t0
2000001c:	30529073          	csrw	mtvec,t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:52

  // Zero out the `.bss` segment.
  la   a0, _bss_start
20000020:	f0000517          	auipc	a0,0xf0000
20000024:	03450513          	addi	a0,a0,52 # 10000054 <_data_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:53
  la   a1, _bss_end
20000028:	9bc18593          	addi	a1,gp,-1604 # 100001bc <_bss_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:54
  call crt_section_clear
2000002c:	2891                	jal	20000080 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:57

  // Zero out the stack
  la   a0, _stack_start
2000002e:	f001e517          	auipc	a0,0xf001e
20000032:	fd250513          	addi	a0,a0,-46 # 1001e000 <_stack_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:58
  la   a1, _stack_end
20000036:	f0020597          	auipc	a1,0xf0020
2000003a:	fca58593          	addi	a1,a1,-54 # 10020000 <_stack_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:59
  call crt_section_clear
2000003e:	2089                	jal	20000080 <crt_section_clear>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:62

  // Initialize the `.data` segment from the `.idata` segment.
  la   a0, _data_start
20000040:	f0000517          	auipc	a0,0xf0000
20000044:	fc050513          	addi	a0,a0,-64 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:63
  la   a1, _data_end
20000048:	85418593          	addi	a1,gp,-1964 # 10000054 <_data_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:64
  la   a2, _data_init_start
2000004c:	00002617          	auipc	a2,0x2
20000050:	39460613          	addi	a2,a2,916 # 200023e0 <_data_init_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:65
  call crt_section_copy
20000054:	2881                	jal	200000a4 <crt_section_copy>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:77
  // functions must be called before the instrumented functions in the program.
  //
  // We use `s0` and `s1` to represent the start and end pointers of
  // `.init_array`, respectively, and `t0` to store the addresses of the
  // functions to be called.
  la   s0, _init_array_start
20000056:	00000417          	auipc	s0,0x0
2000005a:	12a40413          	addi	s0,s0,298 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:78
  la   s1, _init_array_end
2000005e:	00000497          	auipc	s1,0x0
20000062:	12248493          	addi	s1,s1,290 # 20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:79
  bgeu s0, s1, init_array_loop_end
20000066:	00947863          	bgeu	s0,s1,20000076 <init_array_loop_end>

2000006a <init_array_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:81
init_array_loop:
  lw   t0, 0(s0)
2000006a:	00042283          	lw	t0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:82
  jalr t0
2000006e:	9282                	jalr	t0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:83
  addi s0, s0, 0x4
20000070:	0411                	addi	s0,s0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:84
  bltu s0, s1, init_array_loop
20000072:	fe946ce3          	bltu	s0,s1,2000006a <init_array_loop>

20000076 <init_array_loop_end>:
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:89
init_array_loop_end:

  // Jump into the C program entry point. This is your standard
  // C `main()`, so we need to pass dummy values for `argc` and `argv`.
  li   a0, 0x0  // argc = 0
20000076:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:90
  li   a1, 0x0  // argv = NULL
20000078:	4581                	li	a1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:91
  call main
2000007a:	26c9                	jal	2000043c <main>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/flash_crt.S:94

  // Halt the core (wfi loop)
  tail abort
2000007c:	6140006f          	j	20000690 <abort>

20000080 <crt_section_clear>:
crt_section_clear():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:36
crt_section_clear:
  .globl crt_section_clear
  .type crt_section_clear, @function

  // Check that start is before end.
  bgeu a0, a1, L_clear_nothing
20000080:	00b57e63          	bgeu	a0,a1,2000009c <L_clear_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:39

  // Check that start and end are word aligned.
  or   t0, a0, a1
20000084:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:40
  andi t0, t0, 0x3
20000088:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:41
  bnez t0, L_clear_error
2000008c:	00029b63          	bnez	t0,200000a2 <L_clear_error>

20000090 <L_clear_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:46

L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
20000090:	00052023          	sw	zero,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:47
  addi a0, a0, 4
20000094:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:48
  bltu a0, a1, L_clear_loop
20000096:	feb56de3          	bltu	a0,a1,20000090 <L_clear_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:49
  ret
2000009a:	8082                	ret

2000009c <L_clear_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:54

L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_clear_error
2000009c:	00b51363          	bne	a0,a1,200000a2 <L_clear_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:55
  ret
200000a0:	8082                	ret

200000a2 <L_clear_error>:
	...

200000a4 <crt_section_copy>:
crt_section_copy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:87
crt_section_copy:
  .global crt_section_copy
  .type crt_section_copy, @function

  // Check that start is before end.
  bgeu a0, a1, L_copy_nothing
200000a4:	02b57963          	bgeu	a0,a1,200000d6 <L_copy_nothing>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:90

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
200000a8:	00b562b3          	or	t0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:91
  or   t0, t0, a2
200000ac:	00c2e2b3          	or	t0,t0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:92
  andi t0, t0, 0x3
200000b0:	0032f293          	andi	t0,t0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:93
  bnez t0, L_copy_error
200000b4:	02029463          	bnez	t0,200000dc <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:110
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
200000b8:	40c502b3          	sub	t0,a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:111
  sub  t1, a1, a0           // end - start
200000bc:	40a58333          	sub	t1,a1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:112
  bltu t0, t1, L_copy_error
200000c0:	0062ee63          	bltu	t0,t1,200000dc <L_copy_error>

200000c4 <L_copy_loop>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:117

L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
200000c4:	00062283          	lw	t0,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:118
  addi a2, a2, 4
200000c8:	0611                	addi	a2,a2,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:119
  sw   t0, 0(a0)
200000ca:	00552023          	sw	t0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:120
  addi a0, a0, 4
200000ce:	0511                	addi	a0,a0,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:121
  bltu a0, a1, L_copy_loop
200000d0:	feb56ae3          	bltu	a0,a1,200000c4 <L_copy_loop>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:122
  ret
200000d4:	8082                	ret

200000d6 <L_copy_nothing>:
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:127

L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, L_copy_error
200000d6:	00b51363          	bne	a0,a1,200000dc <L_copy_error>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/crt/crt.S:128
  ret
200000da:	8082                	ret

200000dc <L_copy_error>:
	...

Disassembly of section .vectors:

20000100 <crt_interrupt_vector>:
crt_interrupt_vector():
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:49
  .balign 256
crt_interrupt_vector:
  .global crt_interrupt_vector

  // exception Handler and user software interrupt
  j handler_exception
20000100:	0800006f          	j	20000180 <_init_array_end>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:51
  // supervisor software interrupt
  unimp
20000104:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:53
  // reserved
  unimp
20000108:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:55
  // machine software interrupt handler
  j handler_irq_software
2000010c:	1b80006f          	j	200002c4 <handler_irq_software>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:58

  // user timer interrupt
  unimp
20000110:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:60
  // supervisor timer interrupt
  unimp
20000114:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:62
  // reserved
  unimp
20000118:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:64
  // machine timer interrupt handler
  j handler_irq_timer
2000011c:	2000006f          	j	2000031c <handler_irq_timer>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:67

  // user external interrupt
  unimp
20000120:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:69
  // supervisor external interrupt
  unimp
20000124:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:71
  // reserved
  unimp
20000128:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:73
  // machine external interrupt handler
  j handler_irq_external
2000012c:	2480006f          	j	20000374 <handler_irq_external>
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:76

  // reserved
  unimp
20000130:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:77
  unimp
20000134:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:78
  unimp
20000138:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:79
  unimp
2000013c:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:82

  // vendor interrupts: on Ibex interrupt ids 30-16 are the "fast" interrupts
  .rept 15
20000140:	c0001073          	unimp
20000144:	c0001073          	unimp
20000148:	c0001073          	unimp
2000014c:	c0001073          	unimp
20000150:	c0001073          	unimp
20000154:	c0001073          	unimp
20000158:	c0001073          	unimp
2000015c:	c0001073          	unimp
20000160:	c0001073          	unimp
20000164:	c0001073          	unimp
20000168:	c0001073          	unimp
2000016c:	c0001073          	unimp
20000170:	c0001073          	unimp
20000174:	c0001073          	unimp
20000178:	c0001073          	unimp
/home/gl/work/opentitan/repo/build-out/../sw/device/exts/common/ibex_interrupt_vectors.S:87
  unimp
  .endr

  // vendor interrupts: on Ibex interrupt id 31 is for non-maskable interrupts
  unimp
2000017c:	c0001073          	unimp

Disassembly of section .text:

20000180 <handler_exception>:
handler_exception():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:33
  while (1) {
  };
}

// Below functions are default weak exception handlers meant to be overriden
__attribute__((weak)) void handler_exception(void) {
20000180:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:37
  uint32_t mcause;
  exc_id_t exc_cause;

  CSR_READ(CSR_REG_MCAUSE, &mcause);
20000182:	de06                	sw	ra,60(sp)
20000184:	dc16                	sw	t0,56(sp)
20000186:	da1a                	sw	t1,52(sp)
20000188:	d81e                	sw	t2,48(sp)
2000018a:	d62a                	sw	a0,44(sp)
2000018c:	d42e                	sw	a1,40(sp)
2000018e:	d232                	sw	a2,36(sp)
20000190:	d036                	sw	a3,32(sp)
20000192:	ce3a                	sw	a4,28(sp)
20000194:	cc3e                	sw	a5,24(sp)
20000196:	ca42                	sw	a6,20(sp)
20000198:	c846                	sw	a7,16(sp)
2000019a:	c672                	sw	t3,12(sp)
2000019c:	c476                	sw	t4,8(sp)
2000019e:	c27a                	sw	t5,4(sp)
200001a0:	c07e                	sw	t6,0(sp)
200001a2:	34202573          	csrr	a0,mcause
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:38
  exc_cause = (exc_id_t)(mcause & kIdMax);
200001a6:	897d                	andi	a0,a0,31
200001a8:	4589                	li	a1,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40

  switch (exc_cause) {
200001aa:	00a5dc63          	bge	a1,a0,200001c2 <handler_exception+0x42>
200001ae:	4599                	li	a1,6
200001b0:	02a5c263          	blt	a1,a0,200001d4 <handler_exception+0x54>
200001b4:	458d                	li	a1,3
200001b6:	02b50c63          	beq	a0,a1,200001ee <handler_exception+0x6e>
200001ba:	4595                	li	a1,5
200001bc:	02b50763          	beq	a0,a1,200001ea <handler_exception+0x6a>
200001c0:	a015                	j	200001e4 <handler_exception+0x64>
200001c2:	c115                	beqz	a0,200001e6 <handler_exception+0x66>
200001c4:	4585                	li	a1,1
200001c6:	02b50063          	beq	a0,a1,200001e6 <handler_exception+0x66>
200001ca:	4589                	li	a1,2
200001cc:	00b51c63          	bne	a0,a1,200001e4 <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:48
      break;
    case kInstAccFault:
      handler_instr_acc_fault();
      break;
    case kInstIllegalFault:
      handler_instr_ill_fault();
200001d0:	208d                	jal	20000232 <handler_instr_ill_fault>
200001d2:	a839                	j	200001f0 <handler_exception+0x70>
200001d4:	459d                	li	a1,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:40
  switch (exc_cause) {
200001d6:	00b50a63          	beq	a0,a1,200001ea <handler_exception+0x6a>
200001da:	45ad                	li	a1,11
200001dc:	00b51463          	bne	a0,a1,200001e4 <handler_exception+0x64>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:60
      break;
    case kStrAccFault:
      handler_lsu_fault();
      break;
    case kECall:
      handler_ecall();
200001e0:	2065                	jal	20000288 <handler_ecall>
200001e2:	a039                	j	200001f0 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:63
      break;
    default:
      while (1) {
200001e4:	a001                	j	200001e4 <handler_exception+0x64>
200001e6:	2805                	jal	20000216 <handler_instr_acc_fault>
200001e8:	a021                	j	200001f0 <handler_exception+0x70>
200001ea:	2049                	jal	2000026c <handler_lsu_fault>
200001ec:	a011                	j	200001f0 <handler_exception+0x70>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:51
      handler_bkpt();
200001ee:	208d                	jal	20000250 <handler_bkpt>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:66
      };
  }
}
200001f0:	4f82                	lw	t6,0(sp)
200001f2:	4f12                	lw	t5,4(sp)
200001f4:	4ea2                	lw	t4,8(sp)
200001f6:	4e32                	lw	t3,12(sp)
200001f8:	48c2                	lw	a7,16(sp)
200001fa:	4852                	lw	a6,20(sp)
200001fc:	47e2                	lw	a5,24(sp)
200001fe:	4772                	lw	a4,28(sp)
20000200:	5682                	lw	a3,32(sp)
20000202:	5612                	lw	a2,36(sp)
20000204:	55a2                	lw	a1,40(sp)
20000206:	5532                	lw	a0,44(sp)
20000208:	53c2                	lw	t2,48(sp)
2000020a:	5352                	lw	t1,52(sp)
2000020c:	52e2                	lw	t0,56(sp)
2000020e:	50f2                	lw	ra,60(sp)
20000210:	6121                	addi	sp,sp,64
20000212:	30200073          	mret

20000216 <handler_instr_acc_fault>:
handler_instr_acc_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:86
  LOG_INFO("External IRQ triggered!");
  while (1) {
  }
}

__attribute__((weak)) void handler_instr_acc_fault(void) {
20000216:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:87
  const char fault_msg[] =
20000218:	de06                	sw	ra,60(sp)
2000021a:	dc22                	sw	s0,56(sp)
2000021c:	00002597          	auipc	a1,0x2
20000220:	ee458593          	addi	a1,a1,-284 # 20002100 <__clz_tab+0x160>
20000224:	0040                	addi	s0,sp,4
20000226:	03400613          	li	a2,52
2000022a:	8522                	mv	a0,s0
2000022c:	29a5                	jal	200006a4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:89
      "Instruction access fault, mtval shows fault address";
  print_exc_msg(fault_msg);
2000022e:	8522                	mv	a0,s0
20000230:	2a71                	jal	200003cc <print_exc_msg>

20000232 <handler_instr_ill_fault>:
handler_instr_ill_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:92
}

__attribute__((weak)) void handler_instr_ill_fault(void) {
20000232:	715d                	addi	sp,sp,-80
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:93
  const char fault_msg[] =
20000234:	c686                	sw	ra,76(sp)
20000236:	c4a2                	sw	s0,72(sp)
20000238:	00002597          	auipc	a1,0x2
2000023c:	efc58593          	addi	a1,a1,-260 # 20002134 <__clz_tab+0x194>
20000240:	00d10413          	addi	s0,sp,13
20000244:	03b00613          	li	a2,59
20000248:	8522                	mv	a0,s0
2000024a:	29a9                	jal	200006a4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:95
      "Illegal Instruction fault, mtval shows instruction content";
  print_exc_msg(fault_msg);
2000024c:	8522                	mv	a0,s0
2000024e:	2abd                	jal	200003cc <print_exc_msg>

20000250 <handler_bkpt>:
handler_bkpt():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:98
}

__attribute__((weak)) void handler_bkpt(void) {
20000250:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:99
  const char exc_msg[] =
20000252:	de06                	sw	ra,60(sp)
20000254:	dc22                	sw	s0,56(sp)
20000256:	00002597          	auipc	a1,0x2
2000025a:	f1958593          	addi	a1,a1,-231 # 2000216f <__clz_tab+0x1cf>
2000025e:	840a                	mv	s0,sp
20000260:	03800613          	li	a2,56
20000264:	8522                	mv	a0,s0
20000266:	293d                	jal	200006a4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:101
      "Breakpoint triggerd, mtval shows the breakpoint address";
  print_exc_msg(exc_msg);
20000268:	8522                	mv	a0,s0
2000026a:	228d                	jal	200003cc <print_exc_msg>

2000026c <handler_lsu_fault>:
handler_lsu_fault():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:104
}

__attribute__((weak)) void handler_lsu_fault(void) {
2000026c:	7139                	addi	sp,sp,-64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:105
  const char exc_msg[] = "Load/Store fault, mtval shows the fault address";
2000026e:	de06                	sw	ra,60(sp)
20000270:	dc22                	sw	s0,56(sp)
20000272:	00002597          	auipc	a1,0x2
20000276:	f3558593          	addi	a1,a1,-203 # 200021a7 <__clz_tab+0x207>
2000027a:	0020                	addi	s0,sp,8
2000027c:	03000613          	li	a2,48
20000280:	8522                	mv	a0,s0
20000282:	210d                	jal	200006a4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:106
  print_exc_msg(exc_msg);
20000284:	8522                	mv	a0,s0
20000286:	2299                	jal	200003cc <print_exc_msg>

20000288 <handler_ecall>:
handler_ecall():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:109
}

__attribute__((weak)) void handler_ecall(void) {
20000288:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:110
  LOG_INFO("Environment call encountered");
2000028a:	ce06                	sw	ra,28(sp)
2000028c:	cc22                	sw	s0,24(sp)
2000028e:	00002517          	auipc	a0,0x2
20000292:	c5a50513          	addi	a0,a0,-934 # 20001ee8 <kDeviceLogBypassUartAddress>
20000296:	4108                	lw	a0,0(a0)
20000298:	c909                	beqz	a0,200002aa <handler_ecall+0x22>
2000029a:	e0010517          	auipc	a0,0xe0010
2000029e:	da250513          	addi	a0,a0,-606 # 1003c <handler_ecall.kLogFields>
200002a2:	4581                	li	a1,0
200002a4:	71f000ef          	jal	ra,200011c2 <base_log_internal_dv>
200002a8:	a821                	j	200002c0 <handler_ecall+0x38>
200002aa:	00002597          	auipc	a1,0x2
200002ae:	b8258593          	addi	a1,a1,-1150 # 20001e2c <__udivdi3+0x3a6>
200002b2:	840a                	mv	s0,sp
200002b4:	4651                	li	a2,20
200002b6:	8522                	mv	a0,s0
200002b8:	26f5                	jal	200006a4 <memcpy>
200002ba:	8522                	mv	a0,s0
200002bc:	65d000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:111
  while (1) {
200002c0:	a001                	j	200002c0 <handler_ecall+0x38>
200002c2:	0001                	nop

200002c4 <handler_irq_software>:
handler_irq_software():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:68
__attribute__((weak)) void handler_irq_software(void) {
200002c4:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:69
  LOG_INFO("Software IRQ triggered!");
200002c6:	ce86                	sw	ra,92(sp)
200002c8:	cc96                	sw	t0,88(sp)
200002ca:	ca9a                	sw	t1,84(sp)
200002cc:	c89e                	sw	t2,80(sp)
200002ce:	c6a2                	sw	s0,76(sp)
200002d0:	c4aa                	sw	a0,72(sp)
200002d2:	c2ae                	sw	a1,68(sp)
200002d4:	c0b2                	sw	a2,64(sp)
200002d6:	de36                	sw	a3,60(sp)
200002d8:	dc3a                	sw	a4,56(sp)
200002da:	da3e                	sw	a5,52(sp)
200002dc:	d842                	sw	a6,48(sp)
200002de:	d646                	sw	a7,44(sp)
200002e0:	d472                	sw	t3,40(sp)
200002e2:	d276                	sw	t4,36(sp)
200002e4:	d07a                	sw	t5,32(sp)
200002e6:	ce7e                	sw	t6,28(sp)
200002e8:	00002517          	auipc	a0,0x2
200002ec:	c0050513          	addi	a0,a0,-1024 # 20001ee8 <kDeviceLogBypassUartAddress>
200002f0:	4108                	lw	a0,0(a0)
200002f2:	c909                	beqz	a0,20000304 <handler_irq_software+0x40>
200002f4:	e0010517          	auipc	a0,0xe0010
200002f8:	d0c50513          	addi	a0,a0,-756 # 10000 <_dv_log_offset>
200002fc:	4581                	li	a1,0
200002fe:	6c5000ef          	jal	ra,200011c2 <base_log_internal_dv>
20000302:	a821                	j	2000031a <handler_irq_software+0x56>
20000304:	00002597          	auipc	a1,0x2
20000308:	aec58593          	addi	a1,a1,-1300 # 20001df0 <__udivdi3+0x36a>
2000030c:	0020                	addi	s0,sp,8
2000030e:	4651                	li	a2,20
20000310:	8522                	mv	a0,s0
20000312:	2e49                	jal	200006a4 <memcpy>
20000314:	8522                	mv	a0,s0
20000316:	603000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:70
  while (1) {
2000031a:	a001                	j	2000031a <handler_irq_software+0x56>

2000031c <handler_irq_timer>:
handler_irq_timer():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:74
__attribute__((weak)) void handler_irq_timer(void) {
2000031c:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:75
  LOG_INFO("Timer IRQ triggered!");
2000031e:	ce86                	sw	ra,92(sp)
20000320:	cc96                	sw	t0,88(sp)
20000322:	ca9a                	sw	t1,84(sp)
20000324:	c89e                	sw	t2,80(sp)
20000326:	c6a2                	sw	s0,76(sp)
20000328:	c4aa                	sw	a0,72(sp)
2000032a:	c2ae                	sw	a1,68(sp)
2000032c:	c0b2                	sw	a2,64(sp)
2000032e:	de36                	sw	a3,60(sp)
20000330:	dc3a                	sw	a4,56(sp)
20000332:	da3e                	sw	a5,52(sp)
20000334:	d842                	sw	a6,48(sp)
20000336:	d646                	sw	a7,44(sp)
20000338:	d472                	sw	t3,40(sp)
2000033a:	d276                	sw	t4,36(sp)
2000033c:	d07a                	sw	t5,32(sp)
2000033e:	ce7e                	sw	t6,28(sp)
20000340:	00002517          	auipc	a0,0x2
20000344:	ba850513          	addi	a0,a0,-1112 # 20001ee8 <kDeviceLogBypassUartAddress>
20000348:	4108                	lw	a0,0(a0)
2000034a:	c909                	beqz	a0,2000035c <handler_irq_timer+0x40>
2000034c:	e0010517          	auipc	a0,0xe0010
20000350:	cc850513          	addi	a0,a0,-824 # 10014 <handler_irq_timer.kLogFields>
20000354:	4581                	li	a1,0
20000356:	66d000ef          	jal	ra,200011c2 <base_log_internal_dv>
2000035a:	a821                	j	20000372 <handler_irq_timer+0x56>
2000035c:	00002597          	auipc	a1,0x2
20000360:	aa858593          	addi	a1,a1,-1368 # 20001e04 <__udivdi3+0x37e>
20000364:	0020                	addi	s0,sp,8
20000366:	4651                	li	a2,20
20000368:	8522                	mv	a0,s0
2000036a:	2e2d                	jal	200006a4 <memcpy>
2000036c:	8522                	mv	a0,s0
2000036e:	5ab000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:76
  while (1) {
20000372:	a001                	j	20000372 <handler_irq_timer+0x56>

20000374 <handler_irq_external>:
handler_irq_external():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:80
__attribute__((weak)) void handler_irq_external(void) {
20000374:	711d                	addi	sp,sp,-96
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:81
  LOG_INFO("External IRQ triggered!");
20000376:	ce86                	sw	ra,92(sp)
20000378:	cc96                	sw	t0,88(sp)
2000037a:	ca9a                	sw	t1,84(sp)
2000037c:	c89e                	sw	t2,80(sp)
2000037e:	c6a2                	sw	s0,76(sp)
20000380:	c4aa                	sw	a0,72(sp)
20000382:	c2ae                	sw	a1,68(sp)
20000384:	c0b2                	sw	a2,64(sp)
20000386:	de36                	sw	a3,60(sp)
20000388:	dc3a                	sw	a4,56(sp)
2000038a:	da3e                	sw	a5,52(sp)
2000038c:	d842                	sw	a6,48(sp)
2000038e:	d646                	sw	a7,44(sp)
20000390:	d472                	sw	t3,40(sp)
20000392:	d276                	sw	t4,36(sp)
20000394:	d07a                	sw	t5,32(sp)
20000396:	ce7e                	sw	t6,28(sp)
20000398:	00002517          	auipc	a0,0x2
2000039c:	b5050513          	addi	a0,a0,-1200 # 20001ee8 <kDeviceLogBypassUartAddress>
200003a0:	4108                	lw	a0,0(a0)
200003a2:	c909                	beqz	a0,200003b4 <handler_irq_external+0x40>
200003a4:	e0010517          	auipc	a0,0xe0010
200003a8:	c8450513          	addi	a0,a0,-892 # 10028 <handler_irq_external.kLogFields>
200003ac:	4581                	li	a1,0
200003ae:	615000ef          	jal	ra,200011c2 <base_log_internal_dv>
200003b2:	a821                	j	200003ca <handler_irq_external+0x56>
200003b4:	00002597          	auipc	a1,0x2
200003b8:	a6458593          	addi	a1,a1,-1436 # 20001e18 <__udivdi3+0x392>
200003bc:	0020                	addi	s0,sp,8
200003be:	4651                	li	a2,20
200003c0:	8522                	mv	a0,s0
200003c2:	24cd                	jal	200006a4 <memcpy>
200003c4:	8522                	mv	a0,s0
200003c6:	553000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:82
  while (1) {
200003ca:	a001                	j	200003ca <handler_irq_external+0x56>

200003cc <print_exc_msg>:
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:25
static void print_exc_msg(const char *msg) {
200003cc:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
200003ce:	ce06                	sw	ra,28(sp)
200003d0:	cc22                	sw	s0,24(sp)
200003d2:	ca26                	sw	s1,20(sp)
200003d4:	00002597          	auipc	a1,0x2
200003d8:	b1458593          	addi	a1,a1,-1260 # 20001ee8 <kDeviceLogBypassUartAddress>
200003dc:	418c                	lw	a1,0(a1)
200003de:	842a                	mv	s0,a0
200003e0:	c19d                	beqz	a1,20000406 <print_exc_msg+0x3a>
200003e2:	e0010517          	auipc	a0,0xe0010
200003e6:	c6e50513          	addi	a0,a0,-914 # 10050 <print_exc_msg.kLogFields>
200003ea:	4585                	li	a1,1
200003ec:	8622                	mv	a2,s0
200003ee:	5d5000ef          	jal	ra,200011c2 <base_log_internal_dv>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
200003f2:	34302673          	csrr	a2,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
200003f6:	e0010517          	auipc	a0,0xe0010
200003fa:	c6e50513          	addi	a0,a0,-914 # 10064 <print_exc_msg.kLogFields.6>
200003fe:	4585                	li	a1,1
20000400:	5c3000ef          	jal	ra,200011c2 <base_log_internal_dv>
20000404:	a81d                	j	2000043a <print_exc_msg+0x6e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:26
  LOG_INFO("%s", msg);
20000406:	00002597          	auipc	a1,0x2
2000040a:	a3a58593          	addi	a1,a1,-1478 # 20001e40 <__udivdi3+0x3ba>
2000040e:	848a                	mv	s1,sp
20000410:	4651                	li	a2,20
20000412:	8526                	mv	a0,s1
20000414:	2c41                	jal	200006a4 <memcpy>
20000416:	8526                	mv	a0,s1
20000418:	85a2                	mv	a1,s0
2000041a:	4ff000ef          	jal	ra,20001118 <base_log_internal_core>
get_mtval():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:16
  CSR_READ(CSR_REG_MTVAL, &mtval);
2000041e:	34302473          	csrr	s0,mtval
print_exc_msg():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:27
  LOG_INFO("MTVAL value is 0x%x", get_mtval());
20000422:	00002597          	auipc	a1,0x2
20000426:	a3258593          	addi	a1,a1,-1486 # 20001e54 <__udivdi3+0x3ce>
2000042a:	848a                	mv	s1,sp
2000042c:	4651                	li	a2,20
2000042e:	8526                	mv	a0,s1
20000430:	2c95                	jal	200006a4 <memcpy>
20000432:	8526                	mv	a0,s1
20000434:	85a2                	mv	a1,s0
20000436:	4e3000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/handler.c:28
  while (1) {
2000043a:	a001                	j	2000043a <print_exc_msg+0x6e>

2000043c <main>:
main():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:37
                           }) == kDifUartConfigOk,
        "failed to configure UART");
  base_uart_stdout(&uart0);
}

int main(int argc, char **argv) {
2000043c:	1141                	addi	sp,sp,-16
2000043e:	c606                	sw	ra,12(sp)
20000440:	c422                	sw	s0,8(sp)
20000442:	6511                	lui	a0,0x4
20000444:	35450513          	addi	a0,a0,852 # 4354 <_stack_size+0x2354>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:38
  test_status_set(kTestStatusInTest);
20000448:	2231                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:41

  // Initialize the UART to enable logging for non-DV simulation platforms.
  if (kDeviceType != kDeviceSimDV) {
2000044a:	00002517          	auipc	a0,0x2
2000044e:	a6e50513          	addi	a0,a0,-1426 # 20001eb8 <kDeviceType>
20000452:	4108                	lw	a0,0(a0)
20000454:	c111                	beqz	a0,20000458 <main+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:42
    init_uart();
20000456:	280d                	jal	20000488 <init_uart>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:46
  }

  // Run the SW test which is fully contained within `test_main()`.
  bool result = test_main();
20000458:	2ce1                	jal	20000730 <test_main>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:49

  // Must happen before any debug output.
  if (kTestConfig.can_clobber_uart) {
2000045a:	00002597          	auipc	a1,0x2
2000045e:	ae258593          	addi	a1,a1,-1310 # 20001f3c <kTestConfig>
20000462:	0005c583          	lbu	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:46
  bool result = test_main();
20000466:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:49
  if (kTestConfig.can_clobber_uart) {
20000468:	c191                	beqz	a1,2000046c <main+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:50
    init_uart();
2000046a:	2839                	jal	20000488 <init_uart>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:53
  }

  test_coverage_send_buffer();
2000046c:	2435                	jal	20000698 <test_coverage_send_buffer>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:54
  test_status_set(result ? kTestStatusPassed : kTestStatusFailed);
2000046e:	e409                	bnez	s0,20000478 <main+0x3c>
20000470:	6531                	lui	a0,0xc
20000472:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
20000476:	a019                	j	2000047c <main+0x40>
20000478:	6525                	lui	a0,0x9
2000047a:	0535                	addi	a0,a0,13
2000047c:	28e1                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:57

  // Unreachable code.
  return 1;
2000047e:	4505                	li	a0,1
20000480:	4422                	lw	s0,8(sp)
20000482:	40b2                	lw	ra,12(sp)
20000484:	0141                	addi	sp,sp,16
20000486:	8082                	ret

20000488 <init_uart>:
init_uart():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:18
static void init_uart(void) {
20000488:	1101                	addi	sp,sp,-32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:19
  CHECK(
2000048a:	ce06                	sw	ra,28(sp)
2000048c:	cc22                	sw	s0,24(sp)
2000048e:	ca26                	sw	s1,20(sp)
20000490:	f0000597          	auipc	a1,0xf0000
20000494:	bc458593          	addi	a1,a1,-1084 # 10000054 <_data_end>
20000498:	40000537          	lui	a0,0x40000
2000049c:	224010ef          	jal	ra,200016c0 <dif_uart_init>
200004a0:	00002497          	auipc	s1,0x2
200004a4:	a4848493          	addi	s1,s1,-1464 # 20001ee8 <kDeviceLogBypassUartAddress>
200004a8:	c915                	beqz	a0,200004dc <init_uart+0x54>
200004aa:	4088                	lw	a0,0(s1)
200004ac:	c909                	beqz	a0,200004be <init_uart+0x36>
200004ae:	e0010517          	auipc	a0,0xe0010
200004b2:	bca50513          	addi	a0,a0,-1078 # 10078 <init_uart.kLogFields>
200004b6:	4581                	li	a1,0
200004b8:	50b000ef          	jal	ra,200011c2 <base_log_internal_dv>
200004bc:	a821                	j	200004d4 <init_uart+0x4c>
200004be:	00002597          	auipc	a1,0x2
200004c2:	9aa58593          	addi	a1,a1,-1622 # 20001e68 <__udivdi3+0x3e2>
200004c6:	840a                	mv	s0,sp
200004c8:	4651                	li	a2,20
200004ca:	8522                	mv	a0,s0
200004cc:	2ae1                	jal	200006a4 <memcpy>
200004ce:	8522                	mv	a0,s0
200004d0:	449000ef          	jal	ra,20001118 <base_log_internal_core>
200004d4:	6531                	lui	a0,0xc
200004d6:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
200004da:	28ad                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:26
  CHECK(dif_uart_configure(&uart0,
200004dc:	00002517          	auipc	a0,0x2
200004e0:	9fc50513          	addi	a0,a0,-1540 # 20001ed8 <kUartBaudrate>
200004e4:	4108                	lw	a0,0(a0)
200004e6:	00002597          	auipc	a1,0x2
200004ea:	9e258593          	addi	a1,a1,-1566 # 20001ec8 <kClockFreqPeripheralHz>
200004ee:	418c                	lw	a1,0(a1)
200004f0:	c02a                	sw	a0,0(sp)
200004f2:	c22e                	sw	a1,4(sp)
200004f4:	4505                	li	a0,1
200004f6:	c42a                	sw	a0,8(sp)
200004f8:	c62a                	sw	a0,12(sp)
200004fa:	f0000517          	auipc	a0,0xf0000
200004fe:	b5a50513          	addi	a0,a0,-1190 # 10000054 <_data_end>
20000502:	858a                	mv	a1,sp
20000504:	1ca010ef          	jal	ra,200016ce <dif_uart_configure>
20000508:	c915                	beqz	a0,2000053c <init_uart+0xb4>
2000050a:	4088                	lw	a0,0(s1)
2000050c:	c909                	beqz	a0,2000051e <init_uart+0x96>
2000050e:	e0010517          	auipc	a0,0xe0010
20000512:	b7e50513          	addi	a0,a0,-1154 # 1008c <init_uart.kLogFields.2>
20000516:	4581                	li	a1,0
20000518:	4ab000ef          	jal	ra,200011c2 <base_log_internal_dv>
2000051c:	a821                	j	20000534 <init_uart+0xac>
2000051e:	00002597          	auipc	a1,0x2
20000522:	95e58593          	addi	a1,a1,-1698 # 20001e7c <__udivdi3+0x3f6>
20000526:	840a                	mv	s0,sp
20000528:	4651                	li	a2,20
2000052a:	8522                	mv	a0,s0
2000052c:	2aa5                	jal	200006a4 <memcpy>
2000052e:	8522                	mv	a0,s0
20000530:	3e9000ef          	jal	ra,20001118 <base_log_internal_core>
20000534:	6531                	lui	a0,0xc
20000536:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
2000053a:	2829                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:34
  base_uart_stdout(&uart0);
2000053c:	f0000517          	auipc	a0,0xf0000
20000540:	b1850513          	addi	a0,a0,-1256 # 10000054 <_data_end>
20000544:	4d1000ef          	jal	ra,20001214 <base_uart_stdout>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_main.c:35
}
20000548:	44d2                	lw	s1,20(sp)
2000054a:	4462                	lw	s0,24(sp)
2000054c:	40f2                	lw	ra,28(sp)
2000054e:	6105                	addi	sp,sp,32
20000550:	8082                	ret
	...

20000554 <test_status_set>:
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
20000554:	1101                	addi	sp,sp,-32
20000556:	ce06                	sw	ra,28(sp)
20000558:	cc22                	sw	s0,24(sp)
2000055a:	65b1                	lui	a1,0xc
2000055c:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:26
  switch (test_status) {
20000560:	02b50163          	beq	a0,a1,20000582 <test_status_set+0x2e>
20000564:	65a5                	lui	a1,0x9
20000566:	05b5                	addi	a1,a1,13
20000568:	02b50f63          	beq	a0,a1,200005a6 <test_status_set+0x52>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
2000056c:	00002597          	auipc	a1,0x2
20000570:	97858593          	addi	a1,a1,-1672 # 20001ee4 <kDeviceTestStatusAddress>
20000574:	418c                	lw	a1,0(a1)
20000576:	c191                	beqz	a1,2000057a <test_status_set+0x26>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20000578:	c188                	sw	a0,0(a1)
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
2000057a:	4462                	lw	s0,24(sp)
2000057c:	40f2                	lw	ra,28(sp)
2000057e:	6105                	addi	sp,sp,32
20000580:	8082                	ret
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
20000582:	00002517          	auipc	a0,0x2
20000586:	96650513          	addi	a0,a0,-1690 # 20001ee8 <kDeviceLogBypassUartAddress>
2000058a:	4108                	lw	a0,0(a0)
2000058c:	ed1d                	bnez	a0,200005ca <test_status_set+0x76>
2000058e:	00002597          	auipc	a1,0x2
20000592:	91658593          	addi	a1,a1,-1770 # 20001ea4 <__udivdi3+0x41e>
20000596:	840a                	mv	s0,sp
20000598:	4651                	li	a2,20
2000059a:	8522                	mv	a0,s0
2000059c:	2221                	jal	200006a4 <memcpy>
2000059e:	8522                	mv	a0,s0
200005a0:	379000ef          	jal	ra,20001118 <base_log_internal_core>
200005a4:	a815                	j	200005d8 <test_status_set+0x84>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
200005a6:	00002517          	auipc	a0,0x2
200005aa:	94250513          	addi	a0,a0,-1726 # 20001ee8 <kDeviceLogBypassUartAddress>
200005ae:	4108                	lw	a0,0(a0)
200005b0:	ed15                	bnez	a0,200005ec <test_status_set+0x98>
200005b2:	00002597          	auipc	a1,0x2
200005b6:	8de58593          	addi	a1,a1,-1826 # 20001e90 <__udivdi3+0x40a>
200005ba:	840a                	mv	s0,sp
200005bc:	4651                	li	a2,20
200005be:	8522                	mv	a0,s0
200005c0:	20d5                	jal	200006a4 <memcpy>
200005c2:	8522                	mv	a0,s0
200005c4:	355000ef          	jal	ra,20001118 <base_log_internal_core>
200005c8:	a80d                	j	200005fa <test_status_set+0xa6>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:34
      LOG_INFO("FAIL!");
200005ca:	e0010517          	auipc	a0,0xe0010
200005ce:	aea50513          	addi	a0,a0,-1302 # 100b4 <test_status_set.kLogFields.2>
200005d2:	4581                	li	a1,0
200005d4:	3ef000ef          	jal	ra,200011c2 <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
200005d8:	00002517          	auipc	a0,0x2
200005dc:	90c50513          	addi	a0,a0,-1780 # 20001ee4 <kDeviceTestStatusAddress>
200005e0:	4108                	lw	a0,0(a0)
200005e2:	c50d                	beqz	a0,2000060c <test_status_set+0xb8>
200005e4:	65b1                	lui	a1,0xc
200005e6:	aad58593          	addi	a1,a1,-1363 # baad <_stack_size+0x9aad>
200005ea:	a005                	j	2000060a <test_status_set+0xb6>
test_status_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:28
      LOG_INFO("PASS!");
200005ec:	e0010517          	auipc	a0,0xe0010
200005f0:	ab450513          	addi	a0,a0,-1356 # 100a0 <test_status_set.kLogFields>
200005f4:	4581                	li	a1,0
200005f6:	3cd000ef          	jal	ra,200011c2 <base_log_internal_dv>
test_status_device_write():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_status.c:18
  if (kDeviceTestStatusAddress != 0) {
200005fa:	00002517          	auipc	a0,0x2
200005fe:	8ea50513          	addi	a0,a0,-1814 # 20001ee4 <kDeviceTestStatusAddress>
20000602:	4108                	lw	a0,0(a0)
20000604:	c501                	beqz	a0,2000060c <test_status_set+0xb8>
20000606:	65a5                	lui	a1,0x9
20000608:	05b5                	addi	a1,a1,13
2000060a:	c10c                	sw	a1,0(a0)
2000060c:	2051                	jal	20000690 <abort>
	...

20000610 <wait_for_interrupt>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
 * Hints to the processor that we don't have anything better to be doing, and to
 * go into low-power mode until an interrupt is serviced.
 *
 * This function may behave as if it is a no-op.
 */
inline void wait_for_interrupt(void) { asm volatile("wfi"); }
20000610:	10500073          	wfi
20000614:	8082                	ret

20000616 <usleep>:
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:14
#include "sw/device/lib/arch/device.h"
#include "sw/device/lib/runtime/ibex.h"

extern void wait_for_interrupt(void);

void usleep(uint32_t usec) {
20000616:	1141                	addi	sp,sp,-16
20000618:	c606                	sw	ra,12(sp)
2000061a:	00002597          	auipc	a1,0x2
2000061e:	8a658593          	addi	a1,a1,-1882 # 20001ec0 <kClockFreqCpuHz>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:15
  uint64_t cycles = kClockFreqCpuHz * usec / 1000000;
20000622:	41d0                	lw	a2,4(a1)
20000624:	4194                	lw	a3,0(a1)
20000626:	02a605b3          	mul	a1,a2,a0
2000062a:	02a6b633          	mulhu	a2,a3,a0
2000062e:	95b2                	add	a1,a1,a2
20000630:	02a68533          	mul	a0,a3,a0
20000634:	000f4637          	lui	a2,0xf4
20000638:	24060613          	addi	a2,a2,576 # f4240 <test_main.kLogFields.9+0xe413c>
2000063c:	4681                	li	a3,0
2000063e:	448010ef          	jal	ra,20001a86 <__udivdi3>
ibex_mcycle_read():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/ibex.h:32
 */
inline uint64_t ibex_mcycle_read(void) {
  uint32_t cycle_low = 0;
  uint32_t cycle_high = 0;
  uint32_t cycle_high_2 = 0;
  asm volatile(
20000642:	4801                	li	a6,0
20000644:	4701                	li	a4,0

20000646 <read0>:
20000646:	b8002873          	csrr	a6,mcycleh
2000064a:	b00026f3          	csrr	a3,mcycle
2000064e:	b8002773          	csrr	a4,mcycleh
20000652:	fee81ae3          	bne	a6,a4,20000646 <read0>
20000656:	4781                	li	a5,0
20000658:	4601                	li	a2,0

2000065a <read1>:
2000065a:	b80027f3          	csrr	a5,mcycleh
2000065e:	b0002773          	csrr	a4,mcycle
20000662:	b8002673          	csrr	a2,mcycleh
20000666:	fec79ae3          	bne	a5,a2,2000065a <read1>
usleep():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:17
  uint64_t start = ibex_mcycle_read();
  while ((ibex_mcycle_read() - start) < cycles) {
2000066a:	00d73633          	sltu	a2,a4,a3
2000066e:	410787b3          	sub	a5,a5,a6
20000672:	8f91                	sub	a5,a5,a2
20000674:	00b78663          	beq	a5,a1,20000680 <read1+0x26>
20000678:	00b7b733          	sltu	a4,a5,a1
2000067c:	ff69                	bnez	a4,20000656 <read0+0x10>
2000067e:	a031                	j	2000068a <read1+0x30>
20000680:	40d70633          	sub	a2,a4,a3
20000684:	00a63733          	sltu	a4,a2,a0
20000688:	f779                	bnez	a4,20000656 <read0+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:19
  }
}
2000068a:	40b2                	lw	ra,12(sp)
2000068c:	0141                	addi	sp,sp,16
2000068e:	8082                	ret

20000690 <abort>:
wait_for_interrupt():
/home/gl/work/opentitan/repo/sw/device/lib/runtime/hart.h:25
20000690:	10500073          	wfi
abort():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/hart.c:22

noreturn void abort(void) {
  while (true) {
20000694:	bff5                	j	20000690 <abort>
	...

20000698 <test_coverage_send_buffer>:
test_coverage_send_buffer():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/testing/test_coverage_none.c:9

#include "sw/device/lib/testing/test_coverage.h"

// This NOP function gets linked in when coverage is disabled. See
// `test_coverage_llvm.c` for its actual definition when coverage is enabled.
void test_coverage_send_buffer(void) {}
20000698:	8082                	ret
	...

2000069c <read_32>:
read_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:68
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considred a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
2000069c:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:69
  return val;
2000069e:	8082                	ret

200006a0 <write_32>:
write_32():
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:94
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
200006a0:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/sw/device/lib/base/memory.h:95
}
200006a2:	8082                	ret

200006a4 <memcpy>:
memcpy():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24

#if !defined(HOST_BUILD)
void *memcpy(void *restrict dest, const void *restrict src, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t *src8 = (uint8_t *)src;
  for (size_t i = 0; i < len; ++i) {
200006a4:	ca11                	beqz	a2,200006b8 <memcpy+0x14>
200006a6:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:25
    dest8[i] = src8[i];
200006a8:	00058703          	lb	a4,0(a1)
200006ac:	00e68023          	sb	a4,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:24
  for (size_t i = 0; i < len; ++i) {
200006b0:	167d                	addi	a2,a2,-1
200006b2:	0685                	addi	a3,a3,1
200006b4:	0585                	addi	a1,a1,1
200006b6:	fa6d                	bnez	a2,200006a8 <memcpy+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:27
  }
  return dest;
200006b8:	8082                	ret

200006ba <memset>:
memset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35

#if !defined(HOST_BUILD)
void *memset(void *dest, int value, size_t len) {
  uint8_t *dest8 = (uint8_t *)dest;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
200006ba:	c619                	beqz	a2,200006c8 <memset+0xe>
200006bc:	86aa                	mv	a3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:36
    dest8[i] = value8;
200006be:	00b68023          	sb	a1,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:35
  for (size_t i = 0; i < len; ++i) {
200006c2:	167d                	addi	a2,a2,-1
200006c4:	0685                	addi	a3,a3,1
200006c6:	fe65                	bnez	a2,200006be <memset+0x4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:38
  }
  return dest;
200006c8:	8082                	ret

200006ca <memcmp>:
memcmp():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
};

int memcmp(const void *lhs, const void *rhs, size_t len) {
  const uint8_t *lhs8 = (uint8_t *)lhs;
  const uint8_t *rhs8 = (uint8_t *)rhs;
  for (size_t i = 0; i < len; ++i) {
200006ca:	ce09                	beqz	a2,200006e4 <memcmp+0x1a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:53
    if (lhs8[i] < rhs8[i]) {
200006cc:	00054683          	lbu	a3,0(a0)
200006d0:	0005c703          	lbu	a4,0(a1)
200006d4:	00e6ea63          	bltu	a3,a4,200006e8 <memcmp+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:55
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
200006d8:	00d76b63          	bltu	a4,a3,200006ee <memcmp+0x24>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:52
  for (size_t i = 0; i < len; ++i) {
200006dc:	167d                	addi	a2,a2,-1
200006de:	0585                	addi	a1,a1,1
200006e0:	0505                	addi	a0,a0,1
200006e2:	f66d                	bnez	a2,200006cc <memcmp+0x2>
200006e4:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:60
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
200006e6:	8082                	ret
200006e8:	fd600513          	li	a0,-42
200006ec:	8082                	ret
200006ee:	02a00513          	li	a0,42
200006f2:	8082                	ret

200006f4 <memchr>:
memchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67

#if !defined(HOST_BUILD)
void *memchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
200006f4:	ca11                	beqz	a2,20000708 <memchr+0x14>
200006f6:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:68
    if (ptr8[i] == value8) {
200006fa:	00054683          	lbu	a3,0(a0)
200006fe:	00b68663          	beq	a3,a1,2000070a <memchr+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:67
  for (size_t i = 0; i < len; ++i) {
20000702:	167d                	addi	a2,a2,-1
20000704:	0505                	addi	a0,a0,1
20000706:	fa75                	bnez	a2,200006fa <memchr+0x6>
20000708:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:73
      return ptr8 + i;
    }
  }
  return NULL;
}
2000070a:	8082                	ret

2000070c <memrchr>:
memrchr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
#endif  // !defined(HOST_BUILD)

void *memrchr(const void *ptr, int value, size_t len) {
  uint8_t *ptr8 = (uint8_t *)ptr;
  uint8_t value8 = (uint8_t)value;
  for (size_t i = 0; i < len; ++i) {
2000070c:	ce09                	beqz	a2,20000726 <memrchr+0x1a>
2000070e:	fff50693          	addi	a3,a0,-1
20000712:	0ff5f593          	andi	a1,a1,255
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:81
    size_t idx = len - i - 1;
    if (ptr8[idx] == value8) {
20000716:	00c68733          	add	a4,a3,a2
2000071a:	00074703          	lbu	a4,0(a4)
2000071e:	00b70663          	beq	a4,a1,2000072a <memrchr+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:79
  for (size_t i = 0; i < len; ++i) {
20000722:	167d                	addi	a2,a2,-1
20000724:	fa6d                	bnez	a2,20000716 <memrchr+0xa>
20000726:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/base/memory.c:86
      return ptr8 + idx;
    }
  }
  return NULL;
}
20000728:	8082                	ret
2000072a:	9532                	add	a0,a0,a2
2000072c:	157d                	addi	a0,a0,-1
2000072e:	8082                	ret

20000730 <test_main>:
test_main():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:82
  }
}

const test_config_t kTestConfig;

bool test_main(void) {
20000730:	715d                	addi	sp,sp,-80
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:83
  CHECK(kDeviceType == kDeviceSimVerilator,
20000732:	c686                	sw	ra,76(sp)
20000734:	c4a2                	sw	s0,72(sp)
20000736:	c2a6                	sw	s1,68(sp)
20000738:	c0ca                	sw	s2,64(sp)
2000073a:	de4e                	sw	s3,60(sp)
2000073c:	dc52                	sw	s4,56(sp)
2000073e:	da56                	sw	s5,52(sp)
20000740:	d85a                	sw	s6,48(sp)
20000742:	d65e                	sw	s7,44(sp)
20000744:	d462                	sw	s8,40(sp)
20000746:	d266                	sw	s9,36(sp)
20000748:	d06a                	sw	s10,32(sp)
2000074a:	ce6e                	sw	s11,28(sp)
2000074c:	00001517          	auipc	a0,0x1
20000750:	76c50513          	addi	a0,a0,1900 # 20001eb8 <kDeviceType>
20000754:	4108                	lw	a0,0(a0)
20000756:	00001597          	auipc	a1,0x1
2000075a:	79258593          	addi	a1,a1,1938 # 20001ee8 <kDeviceLogBypassUartAddress>
2000075e:	0005ab83          	lw	s7,0(a1)
20000762:	4585                	li	a1,1
20000764:	02b50b63          	beq	a0,a1,2000079a <test_main+0x6a>
20000768:	000b8a63          	beqz	s7,2000077c <test_main+0x4c>
2000076c:	e0010517          	auipc	a0,0xe0010
20000770:	95c50513          	addi	a0,a0,-1700 # 100c8 <test_main.kLogFields>
20000774:	4581                	li	a1,0
20000776:	24d000ef          	jal	ra,200011c2 <base_log_internal_dv>
2000077a:	a821                	j	20000792 <test_main+0x62>
2000077c:	00001597          	auipc	a1,0x1
20000780:	77058593          	addi	a1,a1,1904 # 20001eec <kDeviceLogBypassUartAddress+0x4>
20000784:	0020                	addi	s0,sp,8
20000786:	4651                	li	a2,20
20000788:	8522                	mv	a0,s0
2000078a:	3f29                	jal	200006a4 <memcpy>
2000078c:	8522                	mv	a0,s0
2000078e:	18b000ef          	jal	ra,20001118 <base_log_internal_core>
20000792:	6531                	lui	a0,0xc
20000794:	aad50513          	addi	a0,a0,-1363 # baad <_stack_size+0x9aad>
20000798:	3b75                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:87
        "This test is not expected to run on platforms other than the "
        "Verilator simulation. It needs the USB DPI model.");

  LOG_INFO("Running USBDEV test");
2000079a:	000b8a63          	beqz	s7,200007ae <test_main+0x7e>
2000079e:	e0010517          	auipc	a0,0xe0010
200007a2:	93e50513          	addi	a0,a0,-1730 # 100dc <test_main.kLogFields.2>
200007a6:	4581                	li	a1,0
200007a8:	21b000ef          	jal	ra,200011c2 <base_log_internal_dv>
200007ac:	a821                	j	200007c4 <test_main+0x94>
200007ae:	00001597          	auipc	a1,0x1
200007b2:	75258593          	addi	a1,a1,1874 # 20001f00 <kDeviceLogBypassUartAddress+0x18>
200007b6:	0020                	addi	s0,sp,8
200007b8:	4651                	li	a2,20
200007ba:	8522                	mv	a0,s0
200007bc:	35e5                	jal	200006a4 <memcpy>
200007be:	8522                	mv	a0,s0
200007c0:	159000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:92

  // Call `usbdev_init` here so that DPI will not start until the
  // simulation has finished all of the printing, which takes a while
  // if `--trace` was passed in.
  usbdev_init(&usbdev, /* pinflip= */ false, /* rx_diff= */ false,
200007c4:	f0000417          	auipc	s0,0xf0000
200007c8:	8a440413          	addi	s0,s0,-1884 # 10000068 <usbdev>
200007cc:	8522                	mv	a0,s0
200007ce:	4581                	li	a1,0
200007d0:	4601                	li	a2,0
200007d2:	4681                	li	a3,0
200007d4:	05f000ef          	jal	ra,20001032 <usbdev_init>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:94
              /* tx_diff= */ false);
  usb_controlep_init(&usbdev_control, &usbdev, 0, config_descriptors,
200007d8:	98818513          	addi	a0,gp,-1656 # 10000188 <usbdev_control>
200007dc:	f0000697          	auipc	a3,0xf0000
200007e0:	82c68693          	addi	a3,a3,-2004 # 10000008 <config_descriptors>
200007e4:	03700713          	li	a4,55
200007e8:	85a2                	mv	a1,s0
200007ea:	4601                	li	a2,0
200007ec:	2269                	jal	20000976 <usb_controlep_init>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:96
                     sizeof(config_descriptors));
  usb_simpleserial_init(&simple_serial, &usbdev, 1, usb_receipt_callback);
200007ee:	9a418513          	addi	a0,gp,-1628 # 100001a4 <simple_serial>
200007f2:	00000697          	auipc	a3,0x0
200007f6:	11868693          	addi	a3,a3,280 # 2000090a <usb_receipt_callback>
200007fa:	4605                	li	a2,1
200007fc:	85a2                	mv	a1,s0
200007fe:	29b9                	jal	20000c5c <usb_simpleserial_init>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:98

  while (usb_chars_recved_total < kExpectedUsbCharsRecved) {
20000800:	f0000c17          	auipc	s8,0xf0000
20000804:	858c0c13          	addi	s8,s8,-1960 # 10000058 <usb_chars_recved_total>
20000808:	000c2503          	lw	a0,0(s8)
2000080c:	4595                	li	a1,5
2000080e:	00a5ed63          	bltu	a1,a0,20000828 <test_main+0xf8>
20000812:	f0000417          	auipc	s0,0xf0000
20000816:	85640413          	addi	s0,s0,-1962 # 10000068 <usbdev>
2000081a:	4499                	li	s1,6
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:99
    usbdev_poll(&usbdev);
2000081c:	8522                	mv	a0,s0
2000081e:	23e1                	jal	20000de6 <usbdev_poll>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:98
  while (usb_chars_recved_total < kExpectedUsbCharsRecved) {
20000820:	000c2503          	lw	a0,0(s8)
20000824:	fe956ce3          	bltu	a0,s1,2000081c <test_main+0xec>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:102
  }

  base_printf("\r\n");
20000828:	00002517          	auipc	a0,0x2
2000082c:	b2d50513          	addi	a0,a0,-1235 # 20002355 <__clz_tab+0x3b5>
20000830:	23b000ef          	jal	ra,2000126a <base_printf>
20000834:	4401                	li	s0,0
20000836:	f0000c97          	auipc	s9,0xf0000
2000083a:	826c8c93          	addi	s9,s9,-2010 # 1000005c <buffer>
2000083e:	00002d17          	auipc	s10,0x2
20000842:	b1ad0d13          	addi	s10,s10,-1254 # 20002358 <kExpectedUsbRecved>
20000846:	4d99                	li	s11,6
20000848:	00001997          	auipc	s3,0x1
2000084c:	6cc98993          	addi	s3,s3,1740 # 20001f14 <kDeviceLogBypassUartAddress+0x2c>
20000850:	00810913          	addi	s2,sp,8
20000854:	6531                	lui	a0,0xc
20000856:	aad50a93          	addi	s5,a0,-1363 # baad <_stack_size+0x9aad>
2000085a:	e0010a17          	auipc	s4,0xe0010
2000085e:	896a0a13          	addi	s4,s4,-1898 # 100f0 <test_main.kLogFields.6>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:104
  for (int i = 0; i < kExpectedUsbCharsRecved; i++) {
    CHECK(buffer[i] == kExpectedUsbRecved[i],
20000862:	01940533          	add	a0,s0,s9
20000866:	00054b03          	lbu	s6,0(a0)
2000086a:	01a40533          	add	a0,s0,s10
2000086e:	00054483          	lbu	s1,0(a0)
20000872:	029b0863          	beq	s6,s1,200008a2 <test_main+0x172>
20000876:	000b8a63          	beqz	s7,2000088a <test_main+0x15a>
2000087a:	458d                	li	a1,3
2000087c:	8552                	mv	a0,s4
2000087e:	8622                	mv	a2,s0
20000880:	86a6                	mv	a3,s1
20000882:	875a                	mv	a4,s6
20000884:	13f000ef          	jal	ra,200011c2 <base_log_internal_dv>
20000888:	a819                	j	2000089e <test_main+0x16e>
2000088a:	4651                	li	a2,20
2000088c:	854a                	mv	a0,s2
2000088e:	85ce                	mv	a1,s3
20000890:	3d11                	jal	200006a4 <memcpy>
20000892:	854a                	mv	a0,s2
20000894:	85a2                	mv	a1,s0
20000896:	8626                	mv	a2,s1
20000898:	86da                	mv	a3,s6
2000089a:	07f000ef          	jal	ra,20001118 <base_log_internal_core>
2000089e:	8556                	mv	a0,s5
200008a0:	3955                	jal	20000554 <test_status_set>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:103
  for (int i = 0; i < kExpectedUsbCharsRecved; i++) {
200008a2:	0405                	addi	s0,s0,1
200008a4:	fbb41fe3          	bne	s0,s11,20000862 <test_main+0x132>
200008a8:	000c2403          	lw	s0,0(s8)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:108
          "Recieved char #%d mismatched: exp = %x, actual = %x", i,
          kExpectedUsbRecved[i], buffer[i]);
  }
  LOG_INFO("USB recieved %d characters: %s", usb_chars_recved_total, buffer);
200008ac:	000b8f63          	beqz	s7,200008ca <test_main+0x19a>
200008b0:	e0010517          	auipc	a0,0xe0010
200008b4:	85450513          	addi	a0,a0,-1964 # 10104 <test_main.kLogFields.9>
200008b8:	effff697          	auipc	a3,0xeffff
200008bc:	7a468693          	addi	a3,a3,1956 # 1000005c <buffer>
200008c0:	4589                	li	a1,2
200008c2:	8622                	mv	a2,s0
200008c4:	0ff000ef          	jal	ra,200011c2 <base_log_internal_dv>
200008c8:	a00d                	j	200008ea <test_main+0x1ba>
200008ca:	00001597          	auipc	a1,0x1
200008ce:	65e58593          	addi	a1,a1,1630 # 20001f28 <kDeviceLogBypassUartAddress+0x40>
200008d2:	0024                	addi	s1,sp,8
200008d4:	4651                	li	a2,20
200008d6:	8526                	mv	a0,s1
200008d8:	33f1                	jal	200006a4 <memcpy>
200008da:	effff617          	auipc	a2,0xeffff
200008de:	78260613          	addi	a2,a2,1922 # 1000005c <buffer>
200008e2:	8526                	mv	a0,s1
200008e4:	85a2                	mv	a1,s0
200008e6:	033000ef          	jal	ra,20001118 <base_log_internal_core>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:110

  return true;
200008ea:	4505                	li	a0,1
200008ec:	4df2                	lw	s11,28(sp)
200008ee:	5d02                	lw	s10,32(sp)
200008f0:	5c92                	lw	s9,36(sp)
200008f2:	5c22                	lw	s8,40(sp)
200008f4:	5bb2                	lw	s7,44(sp)
200008f6:	5b42                	lw	s6,48(sp)
200008f8:	5ad2                	lw	s5,52(sp)
200008fa:	5a62                	lw	s4,56(sp)
200008fc:	59f2                	lw	s3,60(sp)
200008fe:	4906                	lw	s2,64(sp)
20000900:	4496                	lw	s1,68(sp)
20000902:	4426                	lw	s0,72(sp)
20000904:	40b6                	lw	ra,76(sp)
20000906:	6161                	addi	sp,sp,80
20000908:	8082                	ret

2000090a <usb_receipt_callback>:
usb_receipt_callback():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:71
static void usb_receipt_callback(uint8_t c) {
2000090a:	1141                	addi	sp,sp,-16
2000090c:	c606                	sw	ra,12(sp)
2000090e:	c422                	sw	s0,8(sp)
20000910:	45a9                	li	a1,10
20000912:	842a                	mv	s0,a0
make_printable():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:53
  if (c == 0xa || c == 0xd) {
20000914:	02b50163          	beq	a0,a1,20000936 <usb_receipt_callback+0x2c>
20000918:	4535                	li	a0,13
2000091a:	00a40e63          	beq	s0,a0,20000936 <usb_receipt_callback+0x2c>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:57
  if (c < ' ' || c > '~') {
2000091e:	fe040513          	addi	a0,s0,-32
20000922:	0ff57593          	andi	a1,a0,255
20000926:	05e00613          	li	a2,94
2000092a:	03f00513          	li	a0,63
2000092e:	00b66363          	bltu	a2,a1,20000934 <usb_receipt_callback+0x2a>
20000932:	8522                	mv	a0,s0
20000934:	842a                	mv	s0,a0
usb_receipt_callback():
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:73
  base_printf("%c", c);
20000936:	0ff47593          	andi	a1,s0,255
2000093a:	00002517          	auipc	a0,0x2
2000093e:	a8450513          	addi	a0,a0,-1404 # 200023be <kExpectedUsbRecved+0x66>
20000942:	129000ef          	jal	ra,2000126a <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:74
  if (usb_chars_recved_total < kExpectedUsbCharsRecved) {
20000946:	effff517          	auipc	a0,0xeffff
2000094a:	71250513          	addi	a0,a0,1810 # 10000058 <usb_chars_recved_total>
2000094e:	410c                	lw	a1,0(a0)
20000950:	4615                	li	a2,5
20000952:	00b66b63          	bltu	a2,a1,20000968 <usb_receipt_callback+0x5e>
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:75
    buffer[usb_chars_recved_total] = c;
20000956:	effff617          	auipc	a2,0xeffff
2000095a:	70660613          	addi	a2,a2,1798 # 1000005c <buffer>
2000095e:	962e                	add	a2,a2,a1
20000960:	00860023          	sb	s0,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:76
    ++usb_chars_recved_total;
20000964:	0585                	addi	a1,a1,1
20000966:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/tests/usbdev_test.c:78
}
20000968:	4422                	lw	s0,8(sp)
2000096a:	40b2                	lw	ra,12(sp)
2000096c:	0141                	addi	sp,sp,16
2000096e:	8082                	ret

20000970 <ctrl_reset>:
ctrl_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:239
}

// Callback for the USB link reset
void ctrl_reset(void *ctctx_v) {
  usb_controlep_ctx_t *ctctx = (usb_controlep_ctx_t *)ctctx_v;
  ctctx->ctrlstate = kCtIdle;
20000970:	00052423          	sw	zero,8(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:240
}
20000974:	8082                	ret

20000976 <usb_controlep_init>:
usb_controlep_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:243

void usb_controlep_init(usb_controlep_ctx_t *ctctx, usbdev_ctx_t *ctx, int ep,
                        const uint8_t *cfg_dscr, size_t cfg_dscr_len) {
20000976:	1141                	addi	sp,sp,-16
20000978:	c606                	sw	ra,12(sp)
2000097a:	c422                	sw	s0,8(sp)
2000097c:	c226                	sw	s1,4(sp)
2000097e:	c04a                	sw	s2,0(sp)
20000980:	893a                	mv	s2,a4
20000982:	84b6                	mv	s1,a3
20000984:	86b2                	mv	a3,a2
20000986:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:244
  ctctx->ctx = ctx;
20000988:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:245
  usbdev_endpoint_setup(ctx, ep, 1, ctctx, ctrl_tx_done, ctrl_rx, NULL,
2000098a:	00000717          	auipc	a4,0x0
2000098e:	03a70713          	addi	a4,a4,58 # 200009c4 <ctrl_tx_done>
20000992:	00000797          	auipc	a5,0x0
20000996:	06478793          	addi	a5,a5,100 # 200009f6 <ctrl_rx>
2000099a:	00000897          	auipc	a7,0x0
2000099e:	fd688893          	addi	a7,a7,-42 # 20000970 <ctrl_reset>
200009a2:	4605                	li	a2,1
200009a4:	852e                	mv	a0,a1
200009a6:	85b6                	mv	a1,a3
200009a8:	86a2                	mv	a3,s0
200009aa:	4801                	li	a6,0
200009ac:	2da1                	jal	20001004 <usbdev_endpoint_setup>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:247
                        ctrl_reset);
  ctctx->ctrlstate = kCtIdle;
200009ae:	00042423          	sw	zero,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:248
  ctctx->cfg_dscr = cfg_dscr;
200009b2:	c844                	sw	s1,20(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:249
  ctctx->cfg_dscr_len = cfg_dscr_len;
200009b4:	01242c23          	sw	s2,24(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:250
}
200009b8:	4902                	lw	s2,0(sp)
200009ba:	4492                	lw	s1,4(sp)
200009bc:	4422                	lw	s0,8(sp)
200009be:	40b2                	lw	ra,12(sp)
200009c0:	0141                	addi	sp,sp,16
200009c2:	8082                	ret

200009c4 <ctrl_tx_done>:
ctrl_tx_done():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:159
static void ctrl_tx_done(void *ctctx_v) {
200009c4:	1141                	addi	sp,sp,-16
200009c6:	c606                	sw	ra,12(sp)
200009c8:	c422                	sw	s0,8(sp)
200009ca:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:163
  switch (ctctx->ctrlstate) {
200009cc:	4508                	lw	a0,8(a0)
200009ce:	4585                	li	a1,1
200009d0:	00b50d63          	beq	a0,a1,200009ea <ctrl_tx_done+0x26>
200009d4:	4591                	li	a1,4
200009d6:	00b50863          	beq	a0,a1,200009e6 <ctrl_tx_done+0x22>
200009da:	458d                	li	a1,3
200009dc:	00b51963          	bne	a0,a1,200009ee <ctrl_tx_done+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:161
  void *ctx = ctctx->ctx;
200009e0:	4008                	lw	a0,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:166
      usbdev_set_deviceid(ctx, ctctx->new_dev);
200009e2:	444c                	lw	a1,12(s0)
200009e4:	2b4d                	jal	20000f96 <usbdev_set_deviceid>
200009e6:	4501                	li	a0,0
200009e8:	a011                	j	200009ec <ctrl_tx_done+0x28>
200009ea:	4509                	li	a0,2
200009ec:	c408                	sw	a0,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:181
}
200009ee:	4422                	lw	s0,8(sp)
200009f0:	40b2                	lw	ra,12(sp)
200009f2:	0141                	addi	sp,sp,16
200009f4:	8082                	ret

200009f6 <ctrl_rx>:
ctrl_rx():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:183
static void ctrl_rx(void *ctctx_v, usbbufid_t buf, int size, int setup) {
200009f6:	7179                	addi	sp,sp,-48
200009f8:	d606                	sw	ra,44(sp)
200009fa:	d422                	sw	s0,40(sp)
200009fc:	d226                	sw	s1,36(sp)
200009fe:	d04a                	sw	s2,32(sp)
20000a00:	ce4e                	sw	s3,28(sp)
20000a02:	cc52                	sw	s4,24(sp)
20000a04:	ca56                	sw	s5,20(sp)
20000a06:	8a2a                	mv	s4,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:185
  void *ctx = ctctx->ctx;
20000a08:	00052a83          	lw	s5,0(a0)
20000a0c:	84b6                	mv	s1,a3
20000a0e:	8432                	mv	s0,a2
20000a10:	892e                	mv	s2,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:186
  volatile uint8_t *bp = (volatile uint8_t *)usbdev_buf_idtoaddr(ctx, buf);
20000a12:	8556                	mv	a0,s5
20000a14:	2685                	jal	20000d74 <usbdev_buf_idtoaddr>
20000a16:	04000593          	li	a1,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:187
  if (size > BUF_LENGTH) {
20000a1a:	00b44463          	blt	s0,a1,20000a22 <ctrl_rx+0x2c>
20000a1e:	04000413          	li	s0,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:192
  switch (ctctx->ctrlstate) {
20000a22:	008a2583          	lw	a1,8(s4)
20000a26:	4609                	li	a2,2
20000a28:	06c58e63          	beq	a1,a2,20000aa4 <ctrl_rx+0xae>
20000a2c:	edbd                	bnez	a1,20000aaa <ctrl_rx+0xb4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:195
      if (setup && (size == 8)) {
20000a2e:	ccb5                	beqz	s1,20000aaa <ctrl_rx+0xb4>
20000a30:	45a1                	li	a1,8
20000a32:	06b41c63          	bne	s0,a1,20000aaa <ctrl_rx+0xb4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:196
        int bmRequestType = bp[0];
20000a36:	00054803          	lbu	a6,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:197
        int bRequest = bp[1];
20000a3a:	00154603          	lbu	a2,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:198
        int wValue = (bp[3] << 8) | bp[2];
20000a3e:	00354783          	lbu	a5,3(a0)
20000a42:	00254703          	lbu	a4,2(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:199
        int wIndex = (bp[5] << 8) | bp[4];
20000a46:	00554483          	lbu	s1,5(a0)
20000a4a:	00454583          	lbu	a1,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:200
        int wLength = (bp[7] << 8) | bp[6];
20000a4e:	00754403          	lbu	s0,7(a0)
20000a52:	00654503          	lbu	a0,6(a0)
20000a56:	0422                	slli	s0,s0,0x8
20000a58:	469d                	li	a3,7
20000a5a:	00a469b3          	or	s3,s0,a0
setup_req():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:40
  switch (bRequest) {
20000a5e:	06c6c863          	blt	a3,a2,20000ace <ctrl_rx+0xd8>
20000a62:	07a2                	slli	a5,a5,0x8
20000a64:	00e7e533          	or	a0,a5,a4
20000a68:	00849693          	slli	a3,s1,0x8
20000a6c:	4489                	li	s1,2
20000a6e:	8dd5                	or	a1,a1,a3
20000a70:	08c4d263          	bge	s1,a2,20000af4 <ctrl_rx+0xfe>
20000a74:	468d                	li	a3,3
20000a76:	0cd60a63          	beq	a2,a3,20000b4a <ctrl_rx+0x154>
20000a7a:	4515                	li	a0,5
20000a7c:	0ca60f63          	beq	a2,a0,20000b5a <ctrl_rx+0x164>
20000a80:	4519                	li	a0,6
20000a82:	08a61e63          	bne	a2,a0,20000b1e <ctrl_rx+0x128>
20000a86:	20000513          	li	a0,512
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:42
      if ((wValue & 0xff00) == 0x100) {
20000a8a:	12a78663          	beq	a5,a0,20000bb6 <ctrl_rx+0x1c0>
20000a8e:	10000513          	li	a0,256
20000a92:	08a79663          	bne	a5,a0,20000b1e <ctrl_rx+0x128>
20000a96:	4549                	li	a0,18
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:45
        if (wLength < len) {
20000a98:	00a9e363          	bltu	s3,a0,20000a9e <ctrl_rx+0xa8>
20000a9c:	49c9                	li	s3,18
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:48
        usbdev_buf_copyto_byid(ctx, buf, dev_dscr, len);
20000a9e:	83f18613          	addi	a2,gp,-1985 # 1000003f <dev_dscr>
20000aa2:	aa05                	j	20000bd2 <ctrl_rx+0x1dc>
ctrl_rx():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:213
      if (!setup && (size == 0)) {
20000aa4:	00946533          	or	a0,s0,s1
20000aa8:	c519                	beqz	a0,20000ab6 <ctrl_rx+0xc0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:224
  usbdev_set_ep0_stall(ctx, 1);  // send a STALL, will be cleared by the HW
20000aaa:	4585                	li	a1,1
20000aac:	8556                	mv	a0,s5
20000aae:	2381                	jal	20000fee <usbdev_set_ep0_stall>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:232
  usbdev_buf_free_byid(ctx, buf);
20000ab0:	8556                	mv	a0,s5
20000ab2:	85ca                	mv	a1,s2
20000ab4:	2445                	jal	20000d54 <usbdev_buf_free_byid>
20000ab6:	4501                	li	a0,0
20000ab8:	00aa2423          	sw	a0,8(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:234
}
20000abc:	4ad2                	lw	s5,20(sp)
20000abe:	4a62                	lw	s4,24(sp)
20000ac0:	49f2                	lw	s3,28(sp)
20000ac2:	5902                	lw	s2,32(sp)
20000ac4:	5492                	lw	s1,36(sp)
20000ac6:	5422                	lw	s0,40(sp)
20000ac8:	50b2                	lw	ra,44(sp)
20000aca:	6145                	addi	sp,sp,48
20000acc:	8082                	ret
20000ace:	4525                	li	a0,9
setup_req():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:40
  switch (bRequest) {
20000ad0:	02c55c63          	bge	a0,a2,20000b08 <ctrl_rx+0x112>
20000ad4:	4529                	li	a0,10
20000ad6:	08a60e63          	beq	a2,a0,20000b72 <ctrl_rx+0x17c>
20000ada:	452d                	li	a0,11
20000adc:	0ca60563          	beq	a2,a0,20000ba6 <ctrl_rx+0x1b0>
20000ae0:	4531                	li	a0,12
20000ae2:	02a61e63          	bne	a2,a0,20000b1e <ctrl_rx+0x128>
20000ae6:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:143
      zero = 0;
20000ae8:	c602                	sw	zero,12(sp)
20000aea:	00a9e363          	bltu	s3,a0,20000af0 <ctrl_rx+0xfa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:145
      if (wLength < len) {
20000aee:	4989                	li	s3,2
20000af0:	0070                	addi	a2,sp,12
20000af2:	a0c5                	j	20000bd2 <ctrl_rx+0x1dc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:40
  switch (bRequest) {
20000af4:	ca0d                	beqz	a2,20000b26 <ctrl_rx+0x130>
20000af6:	4685                	li	a3,1
20000af8:	02d61363          	bne	a2,a3,20000b1e <ctrl_rx+0x128>
20000afc:	08d50963          	beq	a0,a3,20000b8e <ctrl_rx+0x198>
20000b00:	e15d                	bnez	a0,20000ba6 <ctrl_rx+0x1b0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:98
        usbdev_halt(ctx, wIndex, 0);
20000b02:	8556                	mv	a0,s5
20000b04:	4601                	li	a2,0
20000b06:	a881                	j	20000b56 <ctrl_rx+0x160>
20000b08:	4521                	li	a0,8
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:40
  switch (bRequest) {
20000b0a:	02a60b63          	beq	a2,a0,20000b40 <ctrl_rx+0x14a>
20000b0e:	4525                	li	a0,9
20000b10:	00a61763          	bne	a2,a0,20000b1e <ctrl_rx+0x128>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:73
      usbdev_sendbuf_byid(ctx, buf, 0, ctctx->ep);
20000b14:	004a2683          	lw	a3,4(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:71
      ctctx->usb_config = wValue;
20000b18:	00ea0823          	sb	a4,16(s4)
20000b1c:	a079                	j	20000baa <ctrl_rx+0x1b4>
20000b1e:	4515                	li	a0,5
ctrl_rx():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:203
        ctctx->ctrlstate = setup_req(ctctx, ctx, buf, bmRequestType, bRequest,
20000b20:	00aa2423          	sw	a0,8(s4)
20000b24:	b759                	j	20000aaa <ctrl_rx+0xb4>
setup_req():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:108
      type = bmRequestType & kUsbReqTypeRecipientMask;
20000b26:	01f87513          	andi	a0,a6,31
20000b2a:	4609                	li	a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:109
      if (type == kUsbReqTypeDevice) {
20000b2c:	06c50463          	beq	a0,a2,20000b94 <ctrl_rx+0x19e>
20000b30:	e959                	bnez	a0,20000bc6 <ctrl_rx+0x1d0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:110
        stat = (usbdev_can_rem_wake(ctx) ? kUsbStatusRemWake : 0) |
20000b32:	8556                	mv	a0,s5
20000b34:	21f1                	jal	20001000 <usbdev_can_rem_wake>
20000b36:	4585                	li	a1,1
20000b38:	c111                	beqz	a0,20000b3c <ctrl_rx+0x146>
20000b3a:	458d                	li	a1,3
20000b3c:	c82e                	sw	a1,16(sp)
20000b3e:	a069                	j	20000bc8 <ctrl_rx+0x1d2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:78
      if (wLength < len) {
20000b40:	01303433          	snez	s0,s3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:82
      usbdev_buf_copyto_byid(ctx, buf, &ctctx->usb_config, len);
20000b44:	010a0613          	addi	a2,s4,16
20000b48:	a80d                	j	20000b7a <ctrl_rx+0x184>
20000b4a:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:87
      if (wValue == kUsbFeatureEndpointHalt) {
20000b4c:	04c50b63          	beq	a0,a2,20000ba2 <ctrl_rx+0x1ac>
20000b50:	e939                	bnez	a0,20000ba6 <ctrl_rx+0x1b0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:88
        usbdev_halt(ctx, wIndex, 1);
20000b52:	4605                	li	a2,1
20000b54:	8556                	mv	a0,s5
20000b56:	2981                	jal	20000fa6 <usbdev_halt>
20000b58:	a0b9                	j	20000ba6 <ctrl_rx+0x1b0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:66
      usbdev_sendbuf_byid(ctx, buf, 0, ctctx->ep);
20000b5a:	004a2683          	lw	a3,4(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:64
      ctctx->new_dev = wValue & 0x7f;
20000b5e:	07f77513          	andi	a0,a4,127
20000b62:	00aa2623          	sw	a0,12(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:66
      usbdev_sendbuf_byid(ctx, buf, 0, ctctx->ep);
20000b66:	8556                	mv	a0,s5
20000b68:	85ca                	mv	a1,s2
20000b6a:	4601                	li	a2,0
20000b6c:	2499                	jal	20000db2 <usbdev_sendbuf_byid>
20000b6e:	450d                	li	a0,3
20000b70:	b7a1                	j	20000ab8 <ctrl_rx+0xc2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:132
      zero = 0;
20000b72:	c602                	sw	zero,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:134
      if (wLength < len) {
20000b74:	01303433          	snez	s0,s3
20000b78:	0070                	addi	a2,sp,12
20000b7a:	8556                	mv	a0,s5
20000b7c:	85ca                	mv	a1,s2
20000b7e:	86a2                	mv	a3,s0
20000b80:	2411                	jal	20000d84 <usbdev_buf_copyto_byid>
20000b82:	004a2683          	lw	a3,4(s4)
20000b86:	8556                	mv	a0,s5
20000b88:	85ca                	mv	a1,s2
20000b8a:	8622                	mv	a2,s0
20000b8c:	a8a1                	j	20000be4 <ctrl_rx+0x1ee>
usbdev_rem_wake_en():
/home/gl/work/opentitan/repo/sw/device/lib/usbdev.h:197
 *
 * @param ctx usbdev context pointer
 * @param enable set/clear
 */
inline void usbdev_rem_wake_en(usbdev_ctx_t *ctx, int enable) {
  ctx->can_wake = (enable) ? 1 : 0;
20000b8e:	000aa023          	sw	zero,0(s5)
20000b92:	a811                	j	20000ba6 <ctrl_rx+0x1b0>
usbdev_halted():
/home/gl/work/opentitan/repo/sw/device/lib/usbdev.h:160
  return (ctx->halted >> endpoint) & 0x1;
20000b94:	024aa503          	lw	a0,36(s5)
setup_req():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:113
        stat = usbdev_halted(ctx, wIndex) ? kUsbStatusHalted : 0;
20000b98:	00b55533          	srl	a0,a0,a1
20000b9c:	8905                	andi	a0,a0,1
20000b9e:	c82a                	sw	a0,16(sp)
20000ba0:	a025                	j	20000bc8 <ctrl_rx+0x1d2>
usbdev_rem_wake_en():
/home/gl/work/opentitan/repo/sw/device/lib/usbdev.h:197
  ctx->can_wake = (enable) ? 1 : 0;
20000ba2:	00caa023          	sw	a2,0(s5)
20000ba6:	004a2683          	lw	a3,4(s4)
20000baa:	8556                	mv	a0,s5
20000bac:	85ca                	mv	a1,s2
20000bae:	4601                	li	a2,0
20000bb0:	2409                	jal	20000db2 <usbdev_sendbuf_byid>
20000bb2:	4511                	li	a0,4
20000bb4:	b711                	j	20000ab8 <ctrl_rx+0xc2>
setup_req():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:53
        len = ctctx->cfg_dscr_len;
20000bb6:	018a2503          	lw	a0,24(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:54
        if (wLength < len) {
20000bba:	00a9e363          	bltu	s3,a0,20000bc0 <ctrl_rx+0x1ca>
20000bbe:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:57
        usbdev_buf_copyto_byid(ctx, buf, ctctx->cfg_dscr, len);
20000bc0:	014a2603          	lw	a2,20(s4)
20000bc4:	a039                	j	20000bd2 <ctrl_rx+0x1dc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:115
        stat = 0;
20000bc6:	c802                	sw	zero,16(sp)
20000bc8:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_controlep.c:117
      if (wLength < len) {
20000bca:	00a9e363          	bltu	s3,a0,20000bd0 <ctrl_rx+0x1da>
20000bce:	4989                	li	s3,2
20000bd0:	0810                	addi	a2,sp,16
20000bd2:	8556                	mv	a0,s5
20000bd4:	85ca                	mv	a1,s2
20000bd6:	86ce                	mv	a3,s3
20000bd8:	2275                	jal	20000d84 <usbdev_buf_copyto_byid>
20000bda:	004a2683          	lw	a3,4(s4)
20000bde:	8556                	mv	a0,s5
20000be0:	85ca                	mv	a1,s2
20000be2:	864e                	mv	a2,s3
20000be4:	22f9                	jal	20000db2 <usbdev_sendbuf_byid>
20000be6:	4505                	li	a0,1
20000be8:	bdc1                	j	20000ab8 <ctrl_rx+0xc2>
	...

20000bec <usb_simpleserial_send_byte>:
usb_simpleserial_send_byte():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:45
  usbdev_sendbuf_byid(ctx, ssctx->cur_buf, ssctx->cur_cpos, ssctx->ep);
  ssctx->cur_buf = -1;  // given it to the hardware
}

// Simple send byte will gather data for a while and send
void usb_simpleserial_send_byte(usb_ss_ctx_t *ssctx, uint8_t c) {
20000bec:	1141                	addi	sp,sp,-16
20000bee:	c606                	sw	ra,12(sp)
20000bf0:	c422                	sw	s0,8(sp)
20000bf2:	c226                	sw	s1,4(sp)
20000bf4:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:47
  volatile uint32_t *bp_w;
  if (ssctx->cur_buf == -1) {
20000bf6:	4510                	lw	a2,8(a0)
20000bf8:	557d                	li	a0,-1
20000bfa:	84ae                	mv	s1,a1
20000bfc:	00a61863          	bne	a2,a0,20000c0c <usb_simpleserial_send_byte+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:48
    ssctx->cur_buf = usbdev_buf_allocate_byid(ssctx->ctx);
20000c00:	4008                	lw	a0,0(s0)
20000c02:	2a2d                	jal	20000d3c <usbdev_buf_allocate_byid>
20000c04:	862a                	mv	a2,a0
20000c06:	c408                	sw	a0,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:49
    ssctx->cur_cpos = 0;
20000c08:	00042623          	sw	zero,12(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:52
  }
  // Abort if completely out of buffers and allocation returned -1
  if (ssctx->cur_buf < 0) {
20000c0c:	04064363          	bltz	a2,20000c52 <usb_simpleserial_send_byte+0x66>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:55
    return;
  }
  ssctx->chold.data_b[ssctx->cur_cpos++ & 0x3] = c;
20000c10:	4448                	lw	a0,12(s0)
20000c12:	00357593          	andi	a1,a0,3
20000c16:	95a2                	add	a1,a1,s0
20000c18:	0505                	addi	a0,a0,1
20000c1a:	c448                	sw	a0,12(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:56
  if ((ssctx->cur_cpos & 0x3) == 0) {
20000c1c:	890d                	andi	a0,a0,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:55
  ssctx->chold.data_b[ssctx->cur_cpos++ & 0x3] = c;
20000c1e:	00958823          	sb	s1,16(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:56
  if ((ssctx->cur_cpos & 0x3) == 0) {
20000c22:	e905                	bnez	a0,20000c52 <usb_simpleserial_send_byte+0x66>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:58
    // just wrote last byte in word
    bp_w = usbdev_buf_idtoaddr(ssctx->ctx, ssctx->cur_buf);
20000c24:	4008                	lw	a0,0(s0)
20000c26:	85b2                	mv	a1,a2
20000c28:	22b1                	jal	20000d74 <usbdev_buf_idtoaddr>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:60
    // -1 here because cpos already incremented to next word
    bp_w[(ssctx->cur_cpos / 4) - 1] = ssctx->chold.data_w;
20000c2a:	444c                	lw	a1,12(s0)
20000c2c:	4810                	lw	a2,16(s0)
20000c2e:	41f5d693          	srai	a3,a1,0x1f
20000c32:	82f9                	srli	a3,a3,0x1e
20000c34:	95b6                	add	a1,a1,a3
20000c36:	99f1                	andi	a1,a1,-4
20000c38:	952e                	add	a0,a0,a1
20000c3a:	fec52e23          	sw	a2,-4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:61
    if (ssctx->cur_cpos >= MAX_GATHER) {
20000c3e:	4450                	lw	a2,12(s0)
20000c40:	4541                	li	a0,16
20000c42:	00a64863          	blt	a2,a0,20000c52 <usb_simpleserial_send_byte+0x66>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:62
      usbdev_sendbuf_byid(ssctx->ctx, ssctx->cur_buf, ssctx->cur_cpos,
20000c46:	4008                	lw	a0,0(s0)
20000c48:	440c                	lw	a1,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:63
                          ssctx->ep);
20000c4a:	4054                	lw	a3,4(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:62
      usbdev_sendbuf_byid(ssctx->ctx, ssctx->cur_buf, ssctx->cur_cpos,
20000c4c:	229d                	jal	20000db2 <usbdev_sendbuf_byid>
20000c4e:	557d                	li	a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:64
      ssctx->cur_buf = -1;  // given it to the hardware
20000c50:	c408                	sw	a0,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:67
    }
  }
}
20000c52:	4492                	lw	s1,4(sp)
20000c54:	4422                	lw	s0,8(sp)
20000c56:	40b2                	lw	ra,12(sp)
20000c58:	0141                	addi	sp,sp,16
20000c5a:	8082                	ret

20000c5c <usb_simpleserial_init>:
usb_simpleserial_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:70

void usb_simpleserial_init(usb_ss_ctx_t *ssctx, usbdev_ctx_t *ctx, int ep,
                           void (*got_byte)(uint8_t)) {
20000c5c:	1101                	addi	sp,sp,-32
20000c5e:	ce06                	sw	ra,28(sp)
20000c60:	cc22                	sw	s0,24(sp)
20000c62:	ca26                	sw	s1,20(sp)
20000c64:	c84a                	sw	s2,16(sp)
20000c66:	c64e                	sw	s3,12(sp)
20000c68:	8936                	mv	s2,a3
20000c6a:	89b2                	mv	s3,a2
20000c6c:	842e                	mv	s0,a1
20000c6e:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:71
  usbdev_endpoint_setup(ctx, ep, 1, ssctx, NULL, ss_rx, ss_flush, NULL);
20000c70:	00000797          	auipc	a5,0x0
20000c74:	03a78793          	addi	a5,a5,58 # 20000caa <ss_rx>
20000c78:	00000817          	auipc	a6,0x0
20000c7c:	07480813          	addi	a6,a6,116 # 20000cec <ss_flush>
20000c80:	4605                	li	a2,1
20000c82:	852e                	mv	a0,a1
20000c84:	85ce                	mv	a1,s3
20000c86:	86a6                	mv	a3,s1
20000c88:	4701                	li	a4,0
20000c8a:	4881                	li	a7,0
20000c8c:	2ea5                	jal	20001004 <usbdev_endpoint_setup>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:72
  ssctx->ctx = ctx;
20000c8e:	c080                	sw	s0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:73
  ssctx->ep = ep;
20000c90:	0134a223          	sw	s3,4(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:74
  ssctx->got_byte = got_byte;
20000c94:	0124aa23          	sw	s2,20(s1)
20000c98:	557d                	li	a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:75
  ssctx->cur_buf = -1;
20000c9a:	c488                	sw	a0,8(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:76
}
20000c9c:	49b2                	lw	s3,12(sp)
20000c9e:	4942                	lw	s2,16(sp)
20000ca0:	44d2                	lw	s1,20(sp)
20000ca2:	4462                	lw	s0,24(sp)
20000ca4:	40f2                	lw	ra,28(sp)
20000ca6:	6105                	addi	sp,sp,32
20000ca8:	8082                	ret

20000caa <ss_rx>:
ss_rx():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:11
static void ss_rx(void *ssctx_v, usbbufid_t buf, int size, int setup) {
20000caa:	1141                	addi	sp,sp,-16
20000cac:	c606                	sw	ra,12(sp)
20000cae:	c422                	sw	s0,8(sp)
20000cb0:	c226                	sw	s1,4(sp)
20000cb2:	c04a                	sw	s2,0(sp)
20000cb4:	892a                	mv	s2,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:13
  void *ctx = ssctx->ctx;
20000cb6:	4108                	lw	a0,0(a0)
20000cb8:	84b2                	mv	s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:14
  volatile uint8_t *bp = (volatile uint8_t *)usbdev_buf_idtoaddr(ctx, buf);
20000cba:	286d                	jal	20000d74 <usbdev_buf_idtoaddr>
20000cbc:	04000593          	li	a1,64
20000cc0:	00b4c463          	blt	s1,a1,20000cc8 <ss_rx+0x1e>
20000cc4:	04000493          	li	s1,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:20
  while (size--) {
20000cc8:	cc81                	beqz	s1,20000ce0 <ss_rx+0x36>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:21
    ssctx->got_byte(*bp++);
20000cca:	01492603          	lw	a2,20(s2)
20000cce:	00054583          	lbu	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:20
  while (size--) {
20000cd2:	14fd                	addi	s1,s1,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:21
    ssctx->got_byte(*bp++);
20000cd4:	00150413          	addi	s0,a0,1
20000cd8:	852e                	mv	a0,a1
20000cda:	9602                	jalr	a2
20000cdc:	8522                	mv	a0,s0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:20
  while (size--) {
20000cde:	f4f5                	bnez	s1,20000cca <ss_rx+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:23
}
20000ce0:	4902                	lw	s2,0(sp)
20000ce2:	4492                	lw	s1,4(sp)
20000ce4:	4422                	lw	s0,8(sp)
20000ce6:	40b2                	lw	ra,12(sp)
20000ce8:	0141                	addi	sp,sp,16
20000cea:	8082                	ret

20000cec <ss_flush>:
ss_flush():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:27
static void ss_flush(void *ssctx_v) {
20000cec:	1141                	addi	sp,sp,-16
20000cee:	c606                	sw	ra,12(sp)
20000cf0:	c422                	sw	s0,8(sp)
20000cf2:	c226                	sw	s1,4(sp)
20000cf4:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:31
  if ((ssctx->cur_buf == -1) || (ssctx->cur_cpos <= 0)) {
20000cf6:	450c                	lw	a1,8(a0)
20000cf8:	557d                	li	a0,-1
20000cfa:	02a58c63          	beq	a1,a0,20000d32 <ss_flush+0x46>
20000cfe:	4450                	lw	a2,12(s0)
20000d00:	4505                	li	a0,1
20000d02:	02a64863          	blt	a2,a0,20000d32 <ss_flush+0x46>
20000d06:	4004                	lw	s1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:34
  if ((ssctx->cur_cpos & 0x3) != 0) {
20000d08:	00367513          	andi	a0,a2,3
20000d0c:	cd11                	beqz	a0,20000d28 <ss_flush+0x3c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:36
    bp_w = usbdev_buf_idtoaddr(ctx, ssctx->cur_buf);
20000d0e:	8526                	mv	a0,s1
20000d10:	2095                	jal	20000d74 <usbdev_buf_idtoaddr>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:38
    bp_w[(ssctx->cur_cpos / 4)] = ssctx->chold.data_w;
20000d12:	444c                	lw	a1,12(s0)
20000d14:	4810                	lw	a2,16(s0)
20000d16:	41f5d693          	srai	a3,a1,0x1f
20000d1a:	82f9                	srli	a3,a3,0x1e
20000d1c:	95b6                	add	a1,a1,a3
20000d1e:	99f1                	andi	a1,a1,-4
20000d20:	952e                	add	a0,a0,a1
20000d22:	c110                	sw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:40
  usbdev_sendbuf_byid(ctx, ssctx->cur_buf, ssctx->cur_cpos, ssctx->ep);
20000d24:	440c                	lw	a1,8(s0)
20000d26:	4450                	lw	a2,12(s0)
20000d28:	4054                	lw	a3,4(s0)
20000d2a:	8526                	mv	a0,s1
20000d2c:	2059                	jal	20000db2 <usbdev_sendbuf_byid>
20000d2e:	557d                	li	a0,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:41
  ssctx->cur_buf = -1;  // given it to the hardware
20000d30:	c408                	sw	a0,8(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usb_simpleserial.c:42
}
20000d32:	4492                	lw	s1,4(sp)
20000d34:	4422                	lw	s0,8(sp)
20000d36:	40b2                	lw	ra,12(sp)
20000d38:	0141                	addi	sp,sp,16
20000d3a:	8082                	ret

20000d3c <usbdev_buf_allocate_byid>:
usbdev_buf_allocate_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:31
  ctx->nfree = NUM_BUFS;
}

// Allocating a buffer just pops next ID from the stack
usbbufid_t usbdev_buf_allocate_byid(usbdev_ctx_t *ctx) {
  if (ctx->nfree <= 0) {
20000d3c:	550c                	lw	a1,40(a0)
20000d3e:	4605                	li	a2,1
20000d40:	00c5c863          	blt	a1,a2,20000d50 <usbdev_buf_allocate_byid+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:34
    return -1;
  }
  return ctx->freebuf[--ctx->nfree];
20000d44:	15fd                	addi	a1,a1,-1
20000d46:	d50c                	sw	a1,40(a0)
20000d48:	952e                	add	a0,a0,a1
20000d4a:	00454503          	lbu	a0,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:35
}
20000d4e:	8082                	ret
20000d50:	557d                	li	a0,-1
20000d52:	8082                	ret

20000d54 <usbdev_buf_free_byid>:
usbdev_buf_free_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:38

// Freeing a buffer just pushes the ID back on the stack
int usbdev_buf_free_byid(usbdev_ctx_t *ctx, usbbufid_t buf) {
20000d54:	477d                	li	a4,31
20000d56:	567d                	li	a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:39
  if ((ctx->nfree >= NUM_BUFS) || (buf >= NUM_BUFS)) {
20000d58:	00b74c63          	blt	a4,a1,20000d70 <usbdev_buf_free_byid+0x1c>
20000d5c:	5514                	lw	a3,40(a0)
20000d5e:	00d74963          	blt	a4,a3,20000d70 <usbdev_buf_free_byid+0x1c>
20000d62:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:42
    return -1;
  }
  ctx->freebuf[ctx->nfree++] = buf;
20000d64:	00168713          	addi	a4,a3,1
20000d68:	d518                	sw	a4,40(a0)
20000d6a:	9536                	add	a0,a0,a3
20000d6c:	00b50223          	sb	a1,4(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:44
  return 0;
}
20000d70:	8532                	mv	a0,a2
20000d72:	8082                	ret

20000d74 <usbdev_buf_idtoaddr>:
usbdev_buf_idtoaddr():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:48

uint32_t *usbdev_buf_idtoaddr(usbdev_ctx_t *ctx, usbbufid_t buf) {
  return (uint32_t *)(USBDEV_BASE_ADDR + USBDEV_BUFFER_REG_OFFSET +
                      (buf * BUF_LENGTH));
20000d74:	00659513          	slli	a0,a1,0x6
20000d78:	401115b7          	lui	a1,0x40111
20000d7c:	80058593          	addi	a1,a1,-2048 # 40110800 <_data_init_start+0x2010e420>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:47
  return (uint32_t *)(USBDEV_BASE_ADDR + USBDEV_BUFFER_REG_OFFSET +
20000d80:	952e                	add	a0,a0,a1
20000d82:	8082                	ret

20000d84 <usbdev_buf_copyto_byid>:
usbdev_buf_copyto_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:52
}

void usbdev_buf_copyto_byid(usbdev_ctx_t *ctx, usbbufid_t buf, const void *from,
                            size_t len_bytes) {
20000d84:	04000513          	li	a0,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:57
  int32_t *from_word = (int32_t *)from;
  int len_words;
  volatile uint32_t *bp = usbdev_buf_idtoaddr(ctx, buf);

  if (len_bytes > BUF_LENGTH) {
20000d88:	00a6e463          	bltu	a3,a0,20000d90 <usbdev_buf_copyto_byid+0xc>
20000d8c:	04000693          	li	a3,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:62
    len_bytes = BUF_LENGTH;
  }
  // This will round up if len_bytes is not on a multiple of int32_t
  // Always ok to fill the extra bytes since the buffers are aligned
  len_words = (len_bytes + sizeof(int32_t) - 1) / sizeof(int32_t);
20000d90:	00368513          	addi	a0,a3,3
20000d94:	8109                	srli	a0,a0,0x2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:63
  for (int i = 0; i < len_words; i++) {
20000d96:	cd09                	beqz	a0,20000db0 <usbdev_buf_copyto_byid+0x2c>
20000d98:	401116b7          	lui	a3,0x40111
20000d9c:	059a                	slli	a1,a1,0x6
20000d9e:	80068693          	addi	a3,a3,-2048 # 40110800 <_data_init_start+0x2010e420>
20000da2:	95b6                	add	a1,a1,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:64
    bp[i] = from_word[i];
20000da4:	4214                	lw	a3,0(a2)
20000da6:	c194                	sw	a3,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:63
  for (int i = 0; i < len_words; i++) {
20000da8:	157d                	addi	a0,a0,-1
20000daa:	0591                	addi	a1,a1,4
20000dac:	0611                	addi	a2,a2,4
20000dae:	f97d                	bnez	a0,20000da4 <usbdev_buf_copyto_byid+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:66
  }
}
20000db0:	8082                	ret

20000db2 <usbdev_sendbuf_byid>:
usbdev_sendbuf_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:82
    REG32(USBDEV_BASE_ADDR + USBDEV_AVBUFFER_REG_OFFSET) = buf;
  }
}

void usbdev_sendbuf_byid(usbdev_ctx_t *ctx, usbbufid_t buf, size_t size,
                         int endpoint) {
20000db2:	457d                	li	a0,31
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:86
  uint32_t configin =
      USBDEV_BASE_ADDR + USBDEV_CONFIGIN_0_REG_OFFSET + (4 * endpoint);

  if ((endpoint >= NUM_ENDPOINTS) || (buf >= NUM_BUFS)) {
20000db4:	02b54863          	blt	a0,a1,20000de4 <usbdev_sendbuf_byid+0x32>
20000db8:	452d                	li	a0,11
20000dba:	02d54563          	blt	a0,a3,20000de4 <usbdev_sendbuf_byid+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:84
      USBDEV_BASE_ADDR + USBDEV_CONFIGIN_0_REG_OFFSET + (4 * endpoint);
20000dbe:	00269513          	slli	a0,a3,0x2
20000dc2:	401106b7          	lui	a3,0x40110
20000dc6:	02c68693          	addi	a3,a3,44 # 4011002c <_data_init_start+0x2010dc4c>
20000dca:	04000713          	li	a4,64
20000dce:	9536                	add	a0,a0,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:90
    return;
  }

  if (size > BUF_LENGTH) {
20000dd0:	00e66463          	bltu	a2,a4,20000dd8 <usbdev_sendbuf_byid+0x26>
20000dd4:	04000613          	li	a2,64
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:95
    size = BUF_LENGTH;
  }

  REG32(configin) = ((buf << USBDEV_CONFIGIN_0_BUFFER_0_OFFSET) |
                     (size << USBDEV_CONFIGIN_0_SIZE_0_OFFSET) |
20000dd8:	0622                	slli	a2,a2,0x8
20000dda:	8dd1                	or	a1,a1,a2
20000ddc:	80000637          	lui	a2,0x80000
20000de0:	8dd1                	or	a1,a1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:94
  REG32(configin) = ((buf << USBDEV_CONFIGIN_0_BUFFER_0_OFFSET) |
20000de2:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:97
                     (1 << USBDEV_CONFIGIN_0_RDY_0_BIT));
}
20000de4:	8082                	ret

20000de6 <usbdev_poll>:
usbdev_poll():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:99

void usbdev_poll(usbdev_ctx_t *ctx) {
20000de6:	7179                	addi	sp,sp,-48
20000de8:	d606                	sw	ra,44(sp)
20000dea:	d422                	sw	s0,40(sp)
20000dec:	d226                	sw	s1,36(sp)
20000dee:	d04a                	sw	s2,32(sp)
20000df0:	ce4e                	sw	s3,28(sp)
20000df2:	cc52                	sw	s4,24(sp)
20000df4:	ca56                	sw	s5,20(sp)
20000df6:	c85a                	sw	s6,16(sp)
20000df8:	c65e                	sw	s7,12(sp)
20000dfa:	401105b7          	lui	a1,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:100
  uint32_t istate = REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET);
20000dfe:	0005a903          	lw	s2,0(a1) # 40110000 <_data_init_start+0x2010dc20>
fill_av_fifo():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:70
  while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
20000e02:	4994                	lw	a3,16(a1)
20000e04:	00800637          	lui	a2,0x800
20000e08:	8ef1                	and	a3,a3,a2
20000e0a:	8a2a                	mv	s4,a0
20000e0c:	e285                	bnez	a3,20000e2c <usbdev_poll+0x46>
20000e0e:	4505                	li	a0,1
usbdev_buf_allocate_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:31
  if (ctx->nfree <= 0) {
20000e10:	028a2683          	lw	a3,40(s4)
20000e14:	00a6cc63          	blt	a3,a0,20000e2c <usbdev_poll+0x46>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:34
  return ctx->freebuf[--ctx->nfree];
20000e18:	16fd                	addi	a3,a3,-1
20000e1a:	02da2423          	sw	a3,40(s4)
20000e1e:	96d2                	add	a3,a3,s4
20000e20:	0046c683          	lbu	a3,4(a3)
fill_av_fifo():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:77
    REG32(USBDEV_BASE_ADDR + USBDEV_AVBUFFER_REG_OFFSET) = buf;
20000e24:	c9d4                	sw	a3,20(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:70
  while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
20000e26:	4994                	lw	a3,16(a1)
20000e28:	8ef1                	and	a3,a3,a2
20000e2a:	d2fd                	beqz	a3,20000e10 <usbdev_poll+0x2a>
usbdev_poll():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:107
  // Do this first to keep things going
  fill_av_fifo(ctx);

  // Process IN completions first so we get the fact that send completed
  // before processing a response
  if (istate & (1 << USBDEV_INTR_STATE_PKT_SENT_BIT)) {
20000e2c:	00297513          	andi	a0,s2,2
20000e30:	cd31                	beqz	a0,20000e8c <usbdev_poll+0xa6>
20000e32:	4481                	li	s1,0
20000e34:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:108
    uint32_t sentep = REG32(USBDEV_BASE_ADDR + USBDEV_IN_SENT_REG_OFFSET);
20000e38:	02452983          	lw	s3,36(a0) # 40110024 <_data_init_start+0x2010dc44>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:111
    uint32_t configin = USBDEV_BASE_ADDR + USBDEV_CONFIGIN_0_REG_OFFSET;
    TRC_C('a' + sentep);
    for (int ep = 0; ep < NUM_ENDPOINTS; ep++) {
20000e3c:	060a0413          	addi	s0,s4,96
20000e40:	02c50a93          	addi	s5,a0,44
20000e44:	4b31                	li	s6,12
20000e46:	4bfd                	li	s7,31
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:112
      if (sentep & (1 << ep)) {
20000e48:	0099d533          	srl	a0,s3,s1
20000e4c:	8905                	andi	a0,a0,1
20000e4e:	c505                	beqz	a0,20000e76 <usbdev_poll+0x90>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:114
        // Free up the buffer and optionally callback
        int32_t cfgin = REG32(configin + (4 * ep));
20000e50:	000aa583          	lw	a1,0(s5)
usbdev_buf_free_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:39
  if ((ctx->nfree >= NUM_BUFS) || (buf >= NUM_BUFS)) {
20000e54:	028a2503          	lw	a0,40(s4)
20000e58:	00abca63          	blt	s7,a0,20000e6c <usbdev_poll+0x86>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:42
  ctx->freebuf[ctx->nfree++] = buf;
20000e5c:	89fd                	andi	a1,a1,31
20000e5e:	00150613          	addi	a2,a0,1
20000e62:	02ca2423          	sw	a2,40(s4)
20000e66:	9552                	add	a0,a0,s4
20000e68:	00b50223          	sb	a1,4(a0)
usbdev_poll():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:116
        usbdev_buf_free_byid(ctx, EXTRACT(cfgin, CONFIGIN_0_BUFFER_0));
        if (ctx->tx_done_callback[ep]) {
20000e6c:	400c                	lw	a1,0(s0)
20000e6e:	c581                	beqz	a1,20000e76 <usbdev_poll+0x90>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:117
          ctx->tx_done_callback[ep](ctx->ep_ctx[ep]);
20000e70:	fd042503          	lw	a0,-48(s0)
20000e74:	9582                	jalr	a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:111
    for (int ep = 0; ep < NUM_ENDPOINTS; ep++) {
20000e76:	0485                	addi	s1,s1,1
20000e78:	0a91                	addi	s5,s5,4
20000e7a:	0411                	addi	s0,s0,4
20000e7c:	fd6496e3          	bne	s1,s6,20000e48 <usbdev_poll+0x62>
20000e80:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:122
        }
      }
    }
    // Write one to clear all the ones we handled
    REG32(USBDEV_BASE_ADDR + USBDEV_IN_SENT_REG_OFFSET) = sentep;
20000e84:	03352223          	sw	s3,36(a0) # 40110024 <_data_init_start+0x2010dc44>
20000e88:	4589                	li	a1,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:124
    // Clear the interupt
    REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET) =
20000e8a:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:128
        (1 << USBDEV_INTR_STATE_PKT_SENT_BIT);
  }

  if (istate & (1 << USBDEV_INTR_STATE_PKT_RECEIVED_BIT)) {
20000e8c:	00197513          	andi	a0,s2,1
20000e90:	c12d                	beqz	a0,20000ef2 <usbdev_poll+0x10c>
20000e92:	401109b7          	lui	s3,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:129
    while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
20000e96:	0109a503          	lw	a0,16(s3) # 40110010 <_data_init_start+0x2010dc30>
20000e9a:	04054963          	bltz	a0,20000eec <usbdev_poll+0x106>
20000e9e:	4afd                	li	s5,31
20000ea0:	547d                	li	s0,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:131
             (1 << USBDEV_USBSTAT_RX_EMPTY_BIT))) {
      uint32_t rxinfo = REG32(USBDEV_BASE_ADDR + USBDEV_RXFIFO_REG_OFFSET);
20000ea2:	0189a583          	lw	a1,24(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:134
      usbbufid_t buf = EXTRACT(rxinfo, RXFIFO_BUFFER);
      int size = EXTRACT(rxinfo, RXFIFO_SIZE);
      int endpoint = EXTRACT(rxinfo, RXFIFO_EP);
20000ea6:	0145d513          	srli	a0,a1,0x14
20000eaa:	893d                	andi	a0,a0,15
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:137
      int setup = (rxinfo >> USBDEV_RXFIFO_SETUP_BIT) & 1;

      if (ctx->rx_callback[endpoint]) {
20000eac:	050a                	slli	a0,a0,0x2
20000eae:	9552                	add	a0,a0,s4
20000eb0:	09052703          	lw	a4,144(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:132
      usbbufid_t buf = EXTRACT(rxinfo, RXFIFO_BUFFER);
20000eb4:	01f5f493          	andi	s1,a1,31
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:137
      if (ctx->rx_callback[endpoint]) {
20000eb8:	cb19                	beqz	a4,20000ece <usbdev_poll+0xe8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:135
      int setup = (rxinfo >> USBDEV_RXFIFO_SETUP_BIT) & 1;
20000eba:	0135d613          	srli	a2,a1,0x13
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:138
        ctx->rx_callback[endpoint](ctx->ep_ctx[endpoint], buf, size, setup);
20000ebe:	5908                	lw	a0,48(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:135
      int setup = (rxinfo >> USBDEV_RXFIFO_SETUP_BIT) & 1;
20000ec0:	00167693          	andi	a3,a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:133
      int size = EXTRACT(rxinfo, RXFIFO_SIZE);
20000ec4:	81a1                	srli	a1,a1,0x8
20000ec6:	07f5f613          	andi	a2,a1,127
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:138
        ctx->rx_callback[endpoint](ctx->ep_ctx[endpoint], buf, size, setup);
20000eca:	85a6                	mv	a1,s1
20000ecc:	9702                	jalr	a4
usbdev_buf_free_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:39
  if ((ctx->nfree >= NUM_BUFS) || (buf >= NUM_BUFS)) {
20000ece:	028a2503          	lw	a0,40(s4)
20000ed2:	00aac963          	blt	s5,a0,20000ee4 <usbdev_poll+0xfe>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:42
  ctx->freebuf[ctx->nfree++] = buf;
20000ed6:	00150593          	addi	a1,a0,1
20000eda:	02ba2423          	sw	a1,40(s4)
20000ede:	9552                	add	a0,a0,s4
20000ee0:	00950223          	sb	s1,4(a0)
usbdev_poll():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:129
    while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
20000ee4:	0109a503          	lw	a0,16(s3)
20000ee8:	faa44de3          	blt	s0,a0,20000ea2 <usbdev_poll+0xbc>
20000eec:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:146
        TRC_I(rxinfo, 24);
      }
      usbdev_buf_free_byid(ctx, buf);
    }
    // Clear the interupt
    REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET) =
20000eee:	00a9a023          	sw	a0,0(s3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:149
        (1 << USBDEV_INTR_STATE_PKT_RECEIVED_BIT);
  }
  if (istate & ~((1 << USBDEV_INTR_STATE_PKT_RECEIVED_BIT) |
20000ef2:	ffc97513          	andi	a0,s2,-4
20000ef6:	c905                	beqz	a0,20000f26 <usbdev_poll+0x140>
20000ef8:	401105b7          	lui	a1,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:157
    TRC_I(istate, 12);
    TRC_C(' ');
    REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET) =
        istate & ~((1 << USBDEV_INTR_STATE_PKT_RECEIVED_BIT) |
                   (1 << USBDEV_INTR_STATE_PKT_SENT_BIT));
    if (istate & (1 << USBDEV_INTR_ENABLE_LINK_RESET_BIT)) {
20000efc:	01097613          	andi	a2,s2,16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:154
    REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET) =
20000f00:	c188                	sw	a0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:157
    if (istate & (1 << USBDEV_INTR_ENABLE_LINK_RESET_BIT)) {
20000f02:	c215                	beqz	a2,20000f26 <usbdev_poll+0x140>
20000f04:	4401                	li	s0,0
20000f06:	03000493          	li	s1,48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:160
      // Link reset
      for (int ep = 0; ep < NUM_ENDPOINTS; ep++) {
        if (ctx->reset[ep]) {
20000f0a:	008a0533          	add	a0,s4,s0
20000f0e:	0f052583          	lw	a1,240(a0)
20000f12:	c199                	beqz	a1,20000f18 <usbdev_poll+0x132>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:161
          ctx->reset[ep](ctx->ep_ctx[ep]);
20000f14:	5908                	lw	a0,48(a0)
20000f16:	9582                	jalr	a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:159
      for (int ep = 0; ep < NUM_ENDPOINTS; ep++) {
20000f18:	0411                	addi	s0,s0,4
20000f1a:	fe9418e3          	bne	s0,s1,20000f0a <usbdev_poll+0x124>
20000f1e:	40110537          	lui	a0,0x40110
20000f22:	45c1                	li	a1,16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:166
        }
      }

      // Clear the interupt
      REG32(USBDEV_BASE_ADDR + USBDEV_INTR_STATE_REG_OFFSET) =
20000f24:	c10c                	sw	a1,0(a0)
20000f26:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:174
  }
  // TODO - clean this up
  // Frame ticks every 1ms, use to flush data every 16ms
  // (faster in DPI but this seems to work ok)
  // At reset frame count is 0, compare to 1 so no calls before SOF received
  uint32_t usbframe = EXTRACT(
20000f2a:	4908                	lw	a0,16(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:176
      REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET), USBSTAT_FRAME);
  if ((usbframe & 0xf) == 1) {
20000f2c:	893d                	andi	a0,a0,15
20000f2e:	4585                	li	a1,1
20000f30:	02b51463          	bne	a0,a1,20000f58 <usbdev_poll+0x172>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:177
    if (ctx->flushed == 0) {
20000f34:	02ca2503          	lw	a0,44(s4)
20000f38:	e11d                	bnez	a0,20000f5e <usbdev_poll+0x178>
20000f3a:	4401                	li	s0,0
20000f3c:	03000493          	li	s1,48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:179
      for (int i = 0; i < NUM_ENDPOINTS; i++) {
        if (ctx->flush[i]) {
20000f40:	008a0533          	add	a0,s4,s0
20000f44:	0c052583          	lw	a1,192(a0) # 401100c0 <_data_init_start+0x2010dce0>
20000f48:	c199                	beqz	a1,20000f4e <usbdev_poll+0x168>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:180
          ctx->flush[i](ctx->ep_ctx[i]);
20000f4a:	5908                	lw	a0,48(a0)
20000f4c:	9582                	jalr	a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:178
      for (int i = 0; i < NUM_ENDPOINTS; i++) {
20000f4e:	0411                	addi	s0,s0,4
20000f50:	fe9418e3          	bne	s0,s1,20000f40 <usbdev_poll+0x15a>
20000f54:	4505                	li	a0,1
20000f56:	a011                	j	20000f5a <usbdev_poll+0x174>
20000f58:	4501                	li	a0,0
20000f5a:	02aa2623          	sw	a0,44(s4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:189
    }
  } else {
    ctx->flushed = 0;
  }
  // TODO Errors? What Errors?
}
20000f5e:	4bb2                	lw	s7,12(sp)
20000f60:	4b42                	lw	s6,16(sp)
20000f62:	4ad2                	lw	s5,20(sp)
20000f64:	4a62                	lw	s4,24(sp)
20000f66:	49f2                	lw	s3,28(sp)
20000f68:	5902                	lw	s2,32(sp)
20000f6a:	5492                	lw	s1,36(sp)
20000f6c:	5422                	lw	s0,40(sp)
20000f6e:	50b2                	lw	ra,44(sp)
20000f70:	6145                	addi	sp,sp,48
20000f72:	8082                	ret

20000f74 <usbdev_get_status>:
usbdev_get_status():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:191

unsigned int usbdev_get_status(usbdev_ctx_t *ctx) {
20000f74:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:192
  unsigned int status = REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET);
20000f78:	4908                	lw	a0,16(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:193
  return status;
20000f7a:	8082                	ret

20000f7c <usbdev_get_link_state>:
usbdev_get_link_state():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:196
}

unsigned int usbdev_get_link_state(usbdev_ctx_t *ctx) {
20000f7c:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:197
  unsigned int link_state = EXTRACT(
20000f80:	4908                	lw	a0,16(a0)
20000f82:	8131                	srli	a0,a0,0xc
20000f84:	891d                	andi	a0,a0,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:199
      REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET), USBSTAT_LINK_STATE);
  return link_state;
20000f86:	8082                	ret

20000f88 <usbdev_get_address>:
usbdev_get_address():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:202
}

unsigned int usbdev_get_address(usbdev_ctx_t *ctx) {
20000f88:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:204
  unsigned int addr =
      EXTRACT(REG32(USBDEV_BASE_ADDR + USBDEV_USBCTRL_REG_OFFSET),
20000f8c:	4548                	lw	a0,12(a0)
20000f8e:	8141                	srli	a0,a0,0x10
20000f90:	07f57513          	andi	a0,a0,127
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:206
              USBCTRL_DEVICE_ADDRESS);
  return addr;
20000f94:	8082                	ret

20000f96 <usbdev_set_deviceid>:
usbdev_set_deviceid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:212
}

void usbdev_set_deviceid(usbdev_ctx_t *ctx, int deviceid) {
  REG32(USBDEV_BASE_ADDR + USBDEV_USBCTRL_REG_OFFSET) =
      (1 << USBDEV_USBCTRL_ENABLE_BIT) |
      (deviceid << USBDEV_USBCTRL_DEVICE_ADDRESS_OFFSET);
20000f96:	01059513          	slli	a0,a1,0x10
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:211
      (1 << USBDEV_USBCTRL_ENABLE_BIT) |
20000f9a:	00156513          	ori	a0,a0,1
20000f9e:	401105b7          	lui	a1,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:210
  REG32(USBDEV_BASE_ADDR + USBDEV_USBCTRL_REG_OFFSET) =
20000fa2:	c5c8                	sw	a0,12(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:213
}
20000fa4:	8082                	ret

20000fa6 <usbdev_halt>:
usbdev_halt():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:215

void usbdev_halt(usbdev_ctx_t *ctx, int endpoint, int enable) {
20000fa6:	401106b7          	lui	a3,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:217
  uint32_t epbit = 1 << endpoint;
  uint32_t stall = REG32(USBDEV_BASE_ADDR + USBDEV_STALL_REG_OFFSET);
20000faa:	5698                	lw	a4,40(a3)
20000fac:	4785                	li	a5,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:216
  uint32_t epbit = 1 << endpoint;
20000fae:	00b795b3          	sll	a1,a5,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:218
  if (enable) {
20000fb2:	c219                	beqz	a2,20000fb8 <usbdev_halt+0x12>
20000fb4:	8dd9                	or	a1,a1,a4
20000fb6:	a021                	j	20000fbe <usbdev_halt+0x18>
20000fb8:	fff5c593          	not	a1,a1
20000fbc:	8df9                	and	a1,a1,a4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:223
    stall |= epbit;
  } else {
    stall &= ~epbit;
  }
  REG32(USBDEV_BASE_ADDR + USBDEV_STALL_REG_OFFSET) = stall;
20000fbe:	d68c                	sw	a1,40(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:224
  ctx->halted = stall;
20000fc0:	d14c                	sw	a1,36(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:227
  // TODO future addition would be to callback the endpoint driver
  // for now it just sees its traffic has stopped
}
20000fc2:	8082                	ret

20000fc4 <usbdev_set_iso>:
usbdev_set_iso():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:229

void usbdev_set_iso(usbdev_ctx_t *ctx, int endpoint, int enable) {
20000fc4:	40110537          	lui	a0,0x40110
20000fc8:	4d74                	lw	a3,92(a0)
20000fca:	4705                	li	a4,1
20000fcc:	00b715b3          	sll	a1,a4,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:230
  if (enable) {
20000fd0:	c219                	beqz	a2,20000fd6 <usbdev_set_iso+0x12>
20000fd2:	8dd5                	or	a1,a1,a3
20000fd4:	a021                	j	20000fdc <usbdev_set_iso+0x18>
20000fd6:	fff5c593          	not	a1,a1
20000fda:	8df5                	and	a1,a1,a3
20000fdc:	cd6c                	sw	a1,92(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:237
        SETBIT(REG32(USBDEV_BASE_ADDR + USBDEV_ISO_REG_OFFSET), endpoint);
  } else {
    REG32(USBDEV_BASE_ADDR + USBDEV_ISO_REG_OFFSET) =
        CLRBIT(REG32(USBDEV_BASE_ADDR + USBDEV_ISO_REG_OFFSET), endpoint);
  }
}
20000fde:	8082                	ret

20000fe0 <usbdev_clear_data_toggle>:
usbdev_clear_data_toggle():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:239

void usbdev_clear_data_toggle(usbdev_ctx_t *ctx, int endpoint) {
20000fe0:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:241
  REG32(USBDEV_BASE_ADDR + USBDEV_DATA_TOGGLE_CLEAR_REG_OFFSET) =
      (1 << endpoint);
20000fe2:	00b51533          	sll	a0,a0,a1
20000fe6:	401105b7          	lui	a1,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:240
  REG32(USBDEV_BASE_ADDR + USBDEV_DATA_TOGGLE_CLEAR_REG_OFFSET) =
20000fea:	d1a8                	sw	a0,96(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:242
}
20000fec:	8082                	ret

20000fee <usbdev_set_ep0_stall>:
usbdev_set_ep0_stall():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:244

void usbdev_set_ep0_stall(usbdev_ctx_t *ctx, int stall) {
20000fee:	40110537          	lui	a0,0x40110
20000ff2:	5510                	lw	a2,40(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:245
  if (stall) {
20000ff4:	00b035b3          	snez	a1,a1
20000ff8:	9a79                	andi	a2,a2,-2
20000ffa:	8dd1                	or	a1,a1,a2
20000ffc:	d50c                	sw	a1,40(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:252
        REG32(USBDEV_BASE_ADDR + USBDEV_STALL_REG_OFFSET) | 1;
  } else {
    REG32(USBDEV_BASE_ADDR + USBDEV_STALL_REG_OFFSET) =
        REG32(USBDEV_BASE_ADDR + USBDEV_STALL_REG_OFFSET) & ~(1);
  }
}
20000ffe:	8082                	ret

20001000 <usbdev_can_rem_wake>:
usbdev_can_rem_wake():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:255

// TODO got hang with this inline
int usbdev_can_rem_wake(usbdev_ctx_t *ctx) { return ctx->can_wake; }
20001000:	4108                	lw	a0,0(a0)
20001002:	8082                	ret

20001004 <usbdev_endpoint_setup>:
usbdev_endpoint_setup():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:261

void usbdev_endpoint_setup(usbdev_ctx_t *ctx, int ep, int enableout,
                           void *ep_ctx, void (*tx_done)(void *),
                           void (*rx)(void *, usbbufid_t, int, int),
                           void (*flush)(void *), void (*reset)(void *)) {
  ctx->ep_ctx[ep] = ep_ctx;
20001004:	00259293          	slli	t0,a1,0x2
20001008:	9516                	add	a0,a0,t0
2000100a:	d914                	sw	a3,48(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:262
  ctx->tx_done_callback[ep] = tx_done;
2000100c:	d138                	sw	a4,96(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:263
  ctx->rx_callback[ep] = rx;
2000100e:	08f52823          	sw	a5,144(a0) # 40110090 <_data_init_start+0x2010dcb0>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:264
  ctx->flush[ep] = flush;
20001012:	0d052023          	sw	a6,192(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:265
  ctx->reset[ep] = reset;
20001016:	0f152823          	sw	a7,240(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:266
  if (enableout) {
2000101a:	ca19                	beqz	a2,20001030 <usbdev_endpoint_setup+0x2c>
2000101c:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:267
    uint32_t rxen = REG32(USBDEV_BASE_ADDR + USBDEV_RXENABLE_OUT_REG_OFFSET);
20001020:	5110                	lw	a2,32(a0)
20001022:	4685                	li	a3,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:268
    rxen |= (1 << (ep + USBDEV_RXENABLE_OUT_OUT_0_BIT));
20001024:	00b695b3          	sll	a1,a3,a1
20001028:	8dd1                	or	a1,a1,a2
2000102a:	02050513          	addi	a0,a0,32 # 40110020 <_data_init_start+0x2010dc40>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:269
    REG32(USBDEV_BASE_ADDR + USBDEV_RXENABLE_OUT_REG_OFFSET) = rxen;
2000102e:	c10c                	sw	a1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:271
  }
}
20001030:	8082                	ret

20001032 <usbdev_init>:
usbdev_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:273

void usbdev_init(usbdev_ctx_t *ctx, bool pinflip, bool diff_rx, bool diff_tx) {
20001032:	1101                	addi	sp,sp,-32
20001034:	ce06                	sw	ra,28(sp)
20001036:	cc22                	sw	s0,24(sp)
20001038:	ca26                	sw	s1,20(sp)
2000103a:	c84a                	sw	s2,16(sp)
2000103c:	c64e                	sw	s3,12(sp)
2000103e:	8436                	mv	s0,a3
20001040:	8932                	mv	s2,a2
20001042:	89ae                	mv	s3,a1
20001044:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:275
  // setup context
  for (int i = 0; i < NUM_ENDPOINTS; i++) {
20001046:	03050513          	addi	a0,a0,48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:278
    usbdev_endpoint_setup(ctx, i, 0, NULL, NULL, NULL, NULL, NULL);
  }
  ctx->halted = 0;
2000104a:	0204a223          	sw	zero,36(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:279
  ctx->can_wake = 0;
2000104e:	0004a023          	sw	zero,0(s1)
usbdev_endpoint_setup():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:262
  ctx->tx_done_callback[ep] = tx_done;
20001052:	0f000613          	li	a2,240
20001056:	4581                	li	a1,0
20001058:	e62ff0ef          	jal	ra,200006ba <memset>
2000105c:	4501                	li	a0,0
buf_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:23
  for (int i = 0; i < NUM_BUFS; i++) {
2000105e:	00448593          	addi	a1,s1,4
20001062:	02000613          	li	a2,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:24
    ctx->freebuf[i] = i;
20001066:	00a586b3          	add	a3,a1,a0
2000106a:	00a68023          	sb	a0,0(a3) # 40110000 <_data_init_start+0x2010dc20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:23
  for (int i = 0; i < NUM_BUFS; i++) {
2000106e:	0505                	addi	a0,a0,1
20001070:	fec51be3          	bne	a0,a2,20001066 <usbdev_init+0x34>
20001074:	02000513          	li	a0,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:26
  ctx->nfree = NUM_BUFS;
20001078:	d488                	sw	a0,40(s1)
2000107a:	40110537          	lui	a0,0x40110
usbdev_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:283
  buf_init(ctx);

  // All about polling...
  REG32(USBDEV_BASE_ADDR + USBDEV_INTR_ENABLE_REG_OFFSET) = 0;
2000107e:	00052223          	sw	zero,4(a0) # 40110004 <_data_init_start+0x2010dc24>
fill_av_fifo():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:70
  while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
20001082:	4910                	lw	a2,16(a0)
20001084:	008005b7          	lui	a1,0x800
20001088:	8e6d                	and	a2,a2,a1
2000108a:	ee11                	bnez	a2,200010a6 <usbdev_init+0x74>
2000108c:	4605                	li	a2,1
usbdev_buf_allocate_byid():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:31
  if (ctx->nfree <= 0) {
2000108e:	5494                	lw	a3,40(s1)
20001090:	00c6cb63          	blt	a3,a2,200010a6 <usbdev_init+0x74>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:34
  return ctx->freebuf[--ctx->nfree];
20001094:	16fd                	addi	a3,a3,-1
20001096:	d494                	sw	a3,40(s1)
20001098:	96a6                	add	a3,a3,s1
2000109a:	0046c683          	lbu	a3,4(a3)
fill_av_fifo():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:77
    REG32(USBDEV_BASE_ADDR + USBDEV_AVBUFFER_REG_OFFSET) = buf;
2000109e:	c954                	sw	a3,20(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:70
  while (!(REG32(USBDEV_BASE_ADDR + USBDEV_USBSTAT_REG_OFFSET) &
200010a0:	4914                	lw	a3,16(a0)
200010a2:	8eed                	and	a3,a3,a1
200010a4:	d6ed                	beqz	a3,2000108e <usbdev_init+0x5c>
200010a6:	4585                	li	a1,1
usbdev_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:288

  // Provide buffers for any reception
  fill_av_fifo(ctx);

  REG32(USBDEV_BASE_ADDR + USBDEV_RXENABLE_SETUP_REG_OFFSET) =
200010a8:	cd4c                	sw	a1,28(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:290
      (1 << USBDEV_RXENABLE_SETUP_SETUP_0_BIT);
  REG32(USBDEV_BASE_ADDR + USBDEV_RXENABLE_OUT_REG_OFFSET) =
200010aa:	d10c                	sw	a1,32(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:296
      (1 << USBDEV_RXENABLE_OUT_OUT_0_BIT);

  uint32_t phy_config =
      (pinflip << USBDEV_PHY_CONFIG_PINFLIP_BIT) |
      (diff_rx << USBDEV_PHY_CONFIG_RX_DIFFERENTIAL_MODE_BIT) |
      (diff_tx << USBDEV_PHY_CONFIG_TX_DIFFERENTIAL_MODE_BIT) |
200010ac:	00141613          	slli	a2,s0,0x1
200010b0:	02400693          	li	a3,36
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:294
      (pinflip << USBDEV_PHY_CONFIG_PINFLIP_BIT) |
200010b4:	00099363          	bnez	s3,200010ba <usbdev_init+0x88>
200010b8:	4691                	li	a3,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:295
      (diff_rx << USBDEV_PHY_CONFIG_RX_DIFFERENTIAL_MODE_BIT) |
200010ba:	0126e6b3          	or	a3,a3,s2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:296
      (diff_tx << USBDEV_PHY_CONFIG_TX_DIFFERENTIAL_MODE_BIT) |
200010be:	8e55                	or	a2,a2,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:298
      (1 << USBDEV_PHY_CONFIG_EOP_SINGLE_BIT_BIT);
  REG32(USBDEV_BASE_ADDR + USBDEV_PHY_CONFIG_REG_OFFSET) = phy_config;
200010c0:	d570                	sw	a2,108(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:300

  REG32(USBDEV_BASE_ADDR + USBDEV_USBCTRL_REG_OFFSET) =
200010c2:	c54c                	sw	a1,12(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:302
      (1 << USBDEV_USBCTRL_ENABLE_BIT);
}
200010c4:	49b2                	lw	s3,12(sp)
200010c6:	4942                	lw	s2,16(sp)
200010c8:	44d2                	lw	s1,20(sp)
200010ca:	4462                	lw	s0,24(sp)
200010cc:	40f2                	lw	ra,28(sp)
200010ce:	6105                	addi	sp,sp,32
200010d0:	8082                	ret

200010d2 <usbdev_force_dx_pullup>:
usbdev_force_dx_pullup():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:304

void usbdev_force_dx_pullup(line_sel_t line, bool set) {
200010d2:	40110637          	lui	a2,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:306
  // Force usb to pretend it is in suspend
  uint32_t reg_val = REG32(USBDEV_BASE_ADDR + USBDEV_PHY_PINS_DRIVE_REG_OFFSET);
200010d6:	5634                	lw	a3,104(a2)
200010d8:	04000713          	li	a4,64
200010dc:	c119                	beqz	a0,200010e2 <usbdev_force_dx_pullup+0x10>
200010de:	08000713          	li	a4,128
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:312
  uint32_t mask;

  mask = line == kDpSel ? USBDEV_PHY_PINS_DRIVE_DP_PULLUP_EN_O_BIT
                        : USBDEV_PHY_PINS_DRIVE_DN_PULLUP_EN_O_BIT;

  if (set) {
200010e2:	e589                	bnez	a1,200010ec <usbdev_force_dx_pullup+0x1a>
200010e4:	fff74513          	not	a0,a4
200010e8:	8d75                	and	a0,a0,a3
200010ea:	a019                	j	200010f0 <usbdev_force_dx_pullup+0x1e>
200010ec:	00e6e533          	or	a0,a3,a4
200010f0:	65c1                	lui	a1,0x10
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:318
    reg_val = SETBIT(reg_val, mask);
  } else {
    reg_val = CLRBIT(reg_val, mask);
  }

  reg_val = SETBIT(reg_val, USBDEV_PHY_PINS_DRIVE_EN_BIT);
200010f2:	8d4d                	or	a0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:319
  REG32(USBDEV_BASE_ADDR + USBDEV_PHY_PINS_DRIVE_REG_OFFSET) = reg_val;
200010f4:	d628                	sw	a0,104(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:320
}
200010f6:	8082                	ret

200010f8 <usbdev_force_suspend>:
usbdev_force_suspend():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:322

void usbdev_force_suspend() {
200010f8:	40110537          	lui	a0,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:324
  // Force usb to pretend it is in suspend
  REG32(USBDEV_BASE_ADDR + USBDEV_PHY_PINS_DRIVE_REG_OFFSET) |=
200010fc:	552c                	lw	a1,104(a0)
200010fe:	6641                	lui	a2,0x10
20001100:	10060613          	addi	a2,a2,256 # 10100 <test_main.kLogFields.6+0x10>
20001104:	8dd1                	or	a1,a1,a2
20001106:	d52c                	sw	a1,104(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:327
      1 << USBDEV_PHY_PINS_DRIVE_SUSPEND_O_BIT |
      1 << USBDEV_PHY_PINS_DRIVE_EN_BIT;
}
20001108:	8082                	ret

2000110a <usbdev_wake>:
usbdev_wake():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:329

void usbdev_wake(bool set) {
2000110a:	401105b7          	lui	a1,0x40110
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:330
  uint32_t reg_val = REG32(USBDEV_BASE_ADDR + USBDEV_WAKE_CONFIG_REG_OFFSET);
2000110e:	59b0                	lw	a2,112(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:331
  if (set) {
20001110:	9a79                	andi	a2,a2,-2
20001112:	8d51                	or	a0,a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:336
    reg_val = SETBIT(reg_val, USBDEV_WAKE_CONFIG_WAKE_EN_BIT);
  } else {
    reg_val = CLRBIT(reg_val, USBDEV_WAKE_CONFIG_WAKE_EN_BIT);
  }
  REG32(USBDEV_BASE_ADDR + USBDEV_WAKE_CONFIG_REG_OFFSET) = reg_val;
20001114:	d9a8                	sw	a0,112(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/usbdev.c:337
}
20001116:	8082                	ret

20001118 <base_log_internal_core>:
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
20001118:	7139                	addi	sp,sp,-64
2000111a:	ce06                	sw	ra,28(sp)
2000111c:	cc22                	sw	s0,24(sp)
2000111e:	ca26                	sw	s1,20(sp)
20001120:	c84a                	sw	s2,16(sp)
20001122:	892a                	mv	s2,a0
20001124:	de46                	sw	a7,60(sp)
20001126:	dc42                	sw	a6,56(sp)
20001128:	da3e                	sw	a5,52(sp)
2000112a:	d83a                	sw	a4,48(sp)
2000112c:	d636                	sw	a3,44(sp)
2000112e:	d432                	sw	a2,40(sp)
20001130:	d22e                	sw	a1,36(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
20001132:	4144                	lw	s1,4(a0)
20001134:	80000537          	lui	a0,0x80000
20001138:	fff50613          	addi	a2,a0,-1 # 7fffffff <_data_init_start+0x5fffdc1f>
2000113c:	8526                	mv	a0,s1
2000113e:	4581                	li	a1,0
20001140:	db4ff0ef          	jal	ra,200006f4 <memchr>
20001144:	40950633          	sub	a2,a0,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
20001148:	02f00593          	li	a1,47
2000114c:	8526                	mv	a0,s1
2000114e:	dbeff0ef          	jal	ra,2000070c <memrchr>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
20001152:	00092583          	lw	a1,0(s2)
20001156:	460d                	li	a2,3
stringify_severity():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:27
  switch (severity) {
20001158:	00b66b63          	bltu	a2,a1,2000116e <base_log_internal_core+0x56>
2000115c:	058a                	slli	a1,a1,0x2
2000115e:	00001617          	auipc	a2,0x1
20001162:	de260613          	addi	a2,a2,-542 # 20001f40 <kTestConfig+0x4>
20001166:	95b2                	add	a1,a1,a2
20001168:	418c                	lw	a1,0(a1)
base_log_internal_core():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
2000116a:	e519                	bnez	a0,20001178 <base_log_internal_core+0x60>
2000116c:	a801                	j	2000117c <base_log_internal_core+0x64>
2000116e:	00001597          	auipc	a1,0x1
20001172:	26958593          	addi	a1,a1,617 # 200023d7 <kExpectedUsbRecved+0x7f>
20001176:	c119                	beqz	a0,2000117c <base_log_internal_core+0x64>
20001178:	00150493          	addi	s1,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
2000117c:	effff417          	auipc	s0,0xeffff
20001180:	ee840413          	addi	s0,s0,-280 # 10000064 <base_log_internal_core.global_log_counter>
20001184:	00045603          	lhu	a2,0(s0)
20001188:	00892703          	lw	a4,8(s2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:62
  base_printf("%s%5d %s:%d] ", stringify_severity(log.severity),
2000118c:	00001517          	auipc	a0,0x1
20001190:	23550513          	addi	a0,a0,565 # 200023c1 <kExpectedUsbRecved+0x69>
20001194:	86a6                	mv	a3,s1
20001196:	28d1                	jal	2000126a <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:64
  ++global_log_counter;
20001198:	00041503          	lh	a0,0(s0)
2000119c:	0505                	addi	a0,a0,1
2000119e:	00a41023          	sh	a0,0(s0)
200011a2:	104c                	addi	a1,sp,36
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
200011a4:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
200011a6:	01092503          	lw	a0,16(s2)
200011aa:	28c5                	jal	2000129a <base_vprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
200011ac:	00001517          	auipc	a0,0x1
200011b0:	1a950513          	addi	a0,a0,425 # 20002355 <__clz_tab+0x3b5>
200011b4:	285d                	jal	2000126a <base_printf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:72
}
200011b6:	4942                	lw	s2,16(sp)
200011b8:	44d2                	lw	s1,20(sp)
200011ba:	4462                	lw	s0,24(sp)
200011bc:	40f2                	lw	ra,28(sp)
200011be:	6121                	addi	sp,sp,64
200011c0:	8082                	ret

200011c2 <base_log_internal_dv>:
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
200011c2:	1101                	addi	sp,sp,-32
200011c4:	ce46                	sw	a7,28(sp)
200011c6:	cc42                	sw	a6,24(sp)
200011c8:	ca3e                	sw	a5,20(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
200011ca:	00001797          	auipc	a5,0x1
200011ce:	d1e78793          	addi	a5,a5,-738 # 20001ee8 <kDeviceLogBypassUartAddress>
200011d2:	439c                	lw	a5,0(a5)
200011d4:	c83a                	sw	a4,16(sp)
200011d6:	c636                	sw	a3,12(sp)
200011d8:	c432                	sw	a2,8(sp)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200011da:	c388                	sw	a0,0(a5)
200011dc:	0028                	addi	a0,sp,8
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
200011de:	c22a                	sw	a0,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
200011e0:	c989                	beqz	a1,200011f2 <base_log_internal_dv+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
200011e2:	4512                	lw	a0,4(sp)
200011e4:	00450613          	addi	a2,a0,4
200011e8:	c232                	sw	a2,4(sp)
200011ea:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
200011ec:	15fd                	addi	a1,a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200011ee:	c388                	sw	a0,0(a5)
base_log_internal_dv():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:90
200011f0:	f9ed                	bnez	a1,200011e2 <base_log_internal_dv+0x20>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
200011f2:	6105                	addi	sp,sp,32
200011f4:	8082                	ret
	...

200011f8 <base_set_stdout>:
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:56
static buffer_sink_t base_stdout = {
    .data = NULL, .sink = &base_dev_null,
};

void base_set_stdout(buffer_sink_t out) {
  if (out.sink == NULL) {
200011f8:	e589                	bnez	a1,20001202 <base_set_stdout+0xa>
200011fa:	00000597          	auipc	a1,0x0
200011fe:	01658593          	addi	a1,a1,22 # 20001210 <base_dev_null>
20001202:	effff617          	auipc	a2,0xeffff
20001206:	dfe60613          	addi	a2,a2,-514 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
    out.sink = &base_dev_null;
  }
  base_stdout = out;
2000120a:	c208                	sw	a0,0(a2)
2000120c:	c24c                	sw	a1,4(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:60
}
2000120e:	8082                	ret

20001210 <base_dev_null>:
base_dev_null():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:48
static size_t base_dev_null(void *data, const char *buf, size_t len) {
20001210:	8532                	mv	a0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:49
  return len;
20001212:	8082                	ret

20001214 <base_uart_stdout>:
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:72
    }
  }
  return len;
}

void base_uart_stdout(const dif_uart_t *uart) {
20001214:	effff597          	auipc	a1,0xeffff
20001218:	dec58593          	addi	a1,a1,-532 # 10000000 <_data_start>
base_set_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:59
  base_stdout = out;
2000121c:	c188                	sw	a0,0(a1)
2000121e:	00000517          	auipc	a0,0x0
20001222:	00c50513          	addi	a0,a0,12 # 2000122a <base_dev_uart>
20001226:	c1c8                	sw	a0,4(a1)
base_uart_stdout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:75
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}
20001228:	8082                	ret

2000122a <base_dev_uart>:
base_dev_uart():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:62
static size_t base_dev_uart(void *data, const char *buf, size_t len) {
2000122a:	1101                	addi	sp,sp,-32
2000122c:	ce06                	sw	ra,28(sp)
2000122e:	cc22                	sw	s0,24(sp)
20001230:	ca26                	sw	s1,20(sp)
20001232:	c84a                	sw	s2,16(sp)
20001234:	c64e                	sw	s3,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
20001236:	c20d                	beqz	a2,20001258 <base_dev_uart+0x2e>
20001238:	8432                	mv	s0,a2
2000123a:	892e                	mv	s2,a1
2000123c:	89aa                	mv	s3,a0
2000123e:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:65
    if (dif_uart_byte_send_polled(uart, (uint8_t)buf[i]) != kDifUartOk) {
20001240:	00990533          	add	a0,s2,s1
20001244:	00054583          	lbu	a1,0(a0)
20001248:	854e                	mv	a0,s3
2000124a:	2f11                	jal	2000195e <dif_uart_byte_send_polled>
2000124c:	e519                	bnez	a0,2000125a <base_dev_uart+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:64
  for (size_t i = 0; i < len; ++i) {
2000124e:	0485                	addi	s1,s1,1
20001250:	fe9418e3          	bne	s0,s1,20001240 <base_dev_uart+0x16>
20001254:	84a2                	mv	s1,s0
20001256:	a011                	j	2000125a <base_dev_uart+0x30>
20001258:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:70
}
2000125a:	8526                	mv	a0,s1
2000125c:	49b2                	lw	s3,12(sp)
2000125e:	4942                	lw	s2,16(sp)
20001260:	44d2                	lw	s1,20(sp)
20001262:	4462                	lw	s0,24(sp)
20001264:	40f2                	lw	ra,28(sp)
20001266:	6105                	addi	sp,sp,32
20001268:	8082                	ret

2000126a <base_printf>:
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:77

size_t base_printf(const char *format, ...) {
2000126a:	7179                	addi	sp,sp,-48
2000126c:	c606                	sw	ra,12(sp)
2000126e:	d646                	sw	a7,44(sp)
20001270:	d442                	sw	a6,40(sp)
20001272:	d23e                	sw	a5,36(sp)
20001274:	d03a                	sw	a4,32(sp)
20001276:	ce36                	sw	a3,28(sp)
20001278:	cc32                	sw	a2,24(sp)
2000127a:	ca2e                	sw	a1,20(sp)
2000127c:	effff597          	auipc	a1,0xeffff
20001280:	d8458593          	addi	a1,a1,-636 # 10000000 <_data_start>
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
20001284:	4190                	lw	a2,0(a1)
20001286:	41cc                	lw	a1,4(a1)
20001288:	872a                	mv	a4,a0
2000128a:	0854                	addi	a3,sp,20
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:79
  va_start(args, format);
2000128c:	c436                	sw	a3,8(sp)
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
2000128e:	8532                	mv	a0,a2
20001290:	863a                	mv	a2,a4
20001292:	200d                	jal	200012b4 <base_vfprintf>
base_printf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:82
  return bytes_left;
20001294:	40b2                	lw	ra,12(sp)
20001296:	6145                	addi	sp,sp,48
20001298:	8082                	ret

2000129a <base_vprintf>:
base_vprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:85
size_t base_vprintf(const char *format, va_list args) {
2000129a:	effff697          	auipc	a3,0xeffff
2000129e:	d6668693          	addi	a3,a3,-666 # 10000000 <_data_start>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:86
  return base_vfprintf(base_stdout, format, args);
200012a2:	4290                	lw	a2,0(a3)
200012a4:	42d4                	lw	a3,4(a3)
200012a6:	872e                	mv	a4,a1
200012a8:	87aa                	mv	a5,a0
200012aa:	8532                	mv	a0,a2
200012ac:	85b6                	mv	a1,a3
200012ae:	863e                	mv	a2,a5
200012b0:	86ba                	mv	a3,a4
200012b2:	a009                	j	200012b4 <base_vfprintf>

200012b4 <base_vfprintf>:
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:344
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
200012b4:	7139                	addi	sp,sp,-64
200012b6:	de06                	sw	ra,60(sp)
200012b8:	dc22                	sw	s0,56(sp)
200012ba:	da26                	sw	s1,52(sp)
200012bc:	d84a                	sw	s2,48(sp)
200012be:	d64e                	sw	s3,44(sp)
200012c0:	d452                	sw	s4,40(sp)
200012c2:	d256                	sw	s5,36(sp)
200012c4:	d05a                	sw	s6,32(sp)
200012c6:	ce5e                	sw	s7,28(sp)
200012c8:	cc62                	sw	s8,24(sp)
200012ca:	ca66                	sw	s9,20(sp)
200012cc:	c86a                	sw	s10,16(sp)
200012ce:	c66e                	sw	s11,12(sp)
200012d0:	8bb2                	mv	s7,a2
200012d2:	892a                	mv	s2,a0
200012d4:	c236                	sw	a3,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:345
  if (out.sink == NULL) {
200012d6:	c199                	beqz	a1,200012dc <base_vfprintf+0x28>
200012d8:	89ae                	mv	s3,a1
200012da:	a029                	j	200012e4 <base_vfprintf+0x30>
200012dc:	00000997          	auipc	s3,0x0
200012e0:	f3498993          	addi	s3,s3,-204 # 20001210 <base_dev_null>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:354
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
200012e4:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357

  size_t bytes_written = 0;
  while (format[0] != '\0') {
200012e6:	000bc503          	lbu	a0,0(s7)
200012ea:	28050f63          	beqz	a0,20001588 <base_vfprintf+0x2d4>
200012ee:	4b01                	li	s6,0
200012f0:	02500c13          	li	s8,37
200012f4:	4ca5                	li	s9,9
200012f6:	02000d13          	li	s10,32
200012fa:	06800d93          	li	s11,104
200012fe:	00001a17          	auipc	s4,0x1
20001302:	0dba0a13          	addi	s4,s4,219 # 200023d9 <kExpectedUsbRecved+0x81>
20001306:	4aa9                	li	s5,10
consume_until_percent():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:143
  size_t text_len = 0;
20001308:	4481                	li	s1,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:146
    if (c == '\0' || c == kPercent) {
2000130a:	0ff57413          	andi	s0,a0,255
2000130e:	01840963          	beq	s0,s8,20001320 <base_vfprintf+0x6c>
20001312:	c419                	beqz	s0,20001320 <base_vfprintf+0x6c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:145
    char c = (*format)[text_len];
20001314:	009b8533          	add	a0,s7,s1
20001318:	00154503          	lbu	a0,1(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:153
    ++text_len;
2000131c:	0485                	addi	s1,s1,1
2000131e:	b7f5                	j	2000130a <base_vfprintf+0x56>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:147
      if (text_len > 0) {
20001320:	c491                	beqz	s1,2000132c <base_vfprintf+0x78>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:148
        *bytes_written += out.sink(out.data, *format, text_len);
20001322:	854a                	mv	a0,s2
20001324:	85de                	mv	a1,s7
20001326:	8626                	mv	a2,s1
20001328:	9982                	jalr	s3
2000132a:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:358
    if (!consume_until_percent(out, &format, &bytes_written)) {
2000132c:	24040f63          	beqz	s0,2000158a <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
20001330:	009b8633          	add	a2,s7,s1
20001334:	00164503          	lbu	a0,1(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20001338:	22050f63          	beqz	a0,20001576 <base_vfprintf+0x2c2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
2000133c:	fd050593          	addi	a1,a0,-48
20001340:	0ff5f593          	andi	a1,a1,255
20001344:	00bcf863          	bgeu	s9,a1,20001354 <base_vfprintf+0xa0>
20001348:	4401                	li	s0,0
2000134a:	4581                	li	a1,0
2000134c:	4605                	li	a2,1
2000134e:	028d7f63          	bgeu	s10,s0,2000138c <base_vfprintf+0xd8>
20001352:	aca1                	j	200015aa <base_vfprintf+0x2f6>
20001354:	4581                	li	a1,0
20001356:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20001358:	0609                	addi	a2,a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:188
    char c = (*format)[spec_len];
2000135a:	00b606b3          	add	a3,a2,a1
2000135e:	0006c683          	lbu	a3,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:189
    if (c == '\0') {
20001362:	20068a63          	beqz	a3,20001576 <base_vfprintf+0x2c2>
20001366:	0ff57513          	andi	a0,a0,255
2000136a:	03540733          	mul	a4,s0,s5
2000136e:	953a                	add	a0,a0,a4
20001370:	fd050413          	addi	s0,a0,-48
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:193
    if (c < '0' || c > '9') {
20001374:	fd068513          	addi	a0,a3,-48
20001378:	0ff57713          	andi	a4,a0,255
2000137c:	0585                	addi	a1,a1,1
2000137e:	8536                	mv	a0,a3
20001380:	fcecfde3          	bgeu	s9,a4,2000135a <base_vfprintf+0xa6>
20001384:	4601                	li	a2,0
20001386:	8536                	mv	a0,a3
20001388:	228d6163          	bltu	s10,s0,200015aa <base_vfprintf+0x2f6>
2000138c:	008036b3          	snez	a3,s0
20001390:	8e55                	or	a2,a2,a3
20001392:	20060c63          	beqz	a2,200015aa <base_vfprintf+0x2f6>
process_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20001396:	95de                	add	a1,a1,s7
20001398:	95a6                	add	a1,a1,s1
2000139a:	00258b93          	addi	s7,a1,2
2000139e:	02adce63          	blt	s11,a0,200013da <base_vfprintf+0x126>
200013a2:	06100593          	li	a1,97
200013a6:	06a5d563          	bge	a1,a0,20001410 <base_vfprintf+0x15c>
200013aa:	06300593          	li	a1,99
200013ae:	0ca5cb63          	blt	a1,a0,20001484 <base_vfprintf+0x1d0>
200013b2:	06200593          	li	a1,98
200013b6:	14b50a63          	beq	a0,a1,2000150a <base_vfprintf+0x256>
200013ba:	06300593          	li	a1,99
200013be:	18b51f63          	bne	a0,a1,2000155c <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:269
      char value = (char)va_arg(*args, uint32_t);
200013c2:	4502                	lw	a0,0(sp)
200013c4:	00450593          	addi	a1,a0,4
200013c8:	c02e                	sw	a1,0(sp)
200013ca:	4108                	lw	a0,0(a0)
200013cc:	00a105a3          	sb	a0,11(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:270
      *bytes_written += out.sink(out.data, &value, 1);
200013d0:	4605                	li	a2,1
200013d2:	854a                	mv	a0,s2
200013d4:	00b10593          	addi	a1,sp,11
200013d8:	aa41                	j	20001568 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
200013da:	07200593          	li	a1,114
200013de:	04a5dd63          	bge	a1,a0,20001438 <base_vfprintf+0x184>
200013e2:	07700593          	li	a1,119
200013e6:	0aa5c663          	blt	a1,a0,20001492 <base_vfprintf+0x1de>
200013ea:	07300593          	li	a1,115
200013ee:	12b50963          	beq	a0,a1,20001520 <base_vfprintf+0x26c>
200013f2:	07500593          	li	a1,117
200013f6:	16b51363          	bne	a0,a1,2000155c <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:329
      uint32_t value = va_arg(*args, uint32_t);
200013fa:	4502                	lw	a0,0(sp)
200013fc:	00450593          	addi	a1,a0,4
20001400:	c02e                	sw	a1,0(sp)
20001402:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:330
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
20001404:	00001797          	auipc	a5,0x1
20001408:	b6978793          	addi	a5,a5,-1175 # 20001f6d <kDigitsLow>
2000140c:	4729                	li	a4,10
2000140e:	a8cd                	j	20001500 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20001410:	13850763          	beq	a0,s8,2000153e <base_vfprintf+0x28a>
20001414:	04800593          	li	a1,72
20001418:	00b50663          	beq	a0,a1,20001424 <base_vfprintf+0x170>
2000141c:	05800593          	li	a1,88
20001420:	12b51e63          	bne	a0,a1,2000155c <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:324
      uint32_t value = va_arg(*args, uint32_t);
20001424:	4502                	lw	a0,0(sp)
20001426:	00450593          	addi	a1,a0,4
2000142a:	c02e                	sw	a1,0(sp)
2000142c:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:325
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsHigh);
2000142e:	00001797          	auipc	a5,0x1
20001432:	b4f78793          	addi	a5,a5,-1201 # 20001f7d <kDigitsHigh>
20001436:	a0e1                	j	200014fe <base_vfprintf+0x24a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20001438:	06900593          	li	a1,105
2000143c:	06b50d63          	beq	a0,a1,200014b6 <base_vfprintf+0x202>
20001440:	06f00593          	li	a1,111
20001444:	10b50163          	beq	a0,a1,20001546 <base_vfprintf+0x292>
20001448:	07000593          	li	a1,112
2000144c:	10b51863          	bne	a0,a1,2000155c <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20001450:	00001597          	auipc	a1,0x1
20001454:	f8d58593          	addi	a1,a1,-115 # 200023dd <kExpectedUsbRecved+0x85>
20001458:	4609                	li	a2,2
2000145a:	854a                	mv	a0,s2
2000145c:	9982                	jalr	s3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:311
      uintptr_t value = va_arg(*args, uintptr_t);
2000145e:	4582                	lw	a1,0(sp)
20001460:	00458613          	addi	a2,a1,4
20001464:	c032                	sw	a2,0(sp)
20001466:	4190                	lw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:310
      *bytes_written += out.sink(out.data, "0x", 2);
20001468:	01650433          	add	s0,a0,s6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:313
          write_digits(out, value, sizeof(uintptr_t) * 2, 16, kDigitsLow);
2000146c:	00001797          	auipc	a5,0x1
20001470:	b0178793          	addi	a5,a5,-1279 # 20001f6d <kDigitsLow>
20001474:	46a1                	li	a3,8
20001476:	4741                	li	a4,16
20001478:	854a                	mv	a0,s2
2000147a:	85ce                	mv	a1,s3
2000147c:	2a5d                	jal	20001632 <write_digits>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:312
      *bytes_written +=
2000147e:	00a40b33          	add	s6,s0,a0
20001482:	a0ed                	j	2000156c <base_vfprintf+0x2b8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:263
  switch (spec.type) {
20001484:	06400593          	li	a1,100
20001488:	02b50763          	beq	a0,a1,200014b6 <base_vfprintf+0x202>
2000148c:	07b50063          	beq	a0,s11,200014ec <base_vfprintf+0x238>
20001490:	a0f1                	j	2000155c <base_vfprintf+0x2a8>
20001492:	07800593          	li	a1,120
20001496:	04b50b63          	beq	a0,a1,200014ec <base_vfprintf+0x238>
2000149a:	07a00593          	li	a1,122
2000149e:	0ab51f63          	bne	a0,a1,2000155c <base_vfprintf+0x2a8>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:283
      size_t len = va_arg(*args, size_t);
200014a2:	4502                	lw	a0,0(sp)
200014a4:	00450593          	addi	a1,a0,4
200014a8:	c02e                	sw	a1,0(sp)
200014aa:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:284
      char *value = va_arg(*args, char *);
200014ac:	00850593          	addi	a1,a0,8
200014b0:	c02e                	sw	a1,0(sp)
200014b2:	414c                	lw	a1,4(a0)
200014b4:	a84d                	j	20001566 <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:290
      uint32_t value = va_arg(*args, uint32_t);
200014b6:	4502                	lw	a0,0(sp)
200014b8:	00450593          	addi	a1,a0,4
200014bc:	c02e                	sw	a1,0(sp)
200014be:	4104                	lw	s1,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:291
      if (((int32_t)value) < 0) {
200014c0:	557d                	li	a0,-1
200014c2:	00954c63          	blt	a0,s1,200014da <base_vfprintf+0x226>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:292
        *bytes_written += out.sink(out.data, "-", 1);
200014c6:	00001597          	auipc	a1,0x1
200014ca:	f1558593          	addi	a1,a1,-235 # 200023db <kExpectedUsbRecved+0x83>
200014ce:	4605                	li	a2,1
200014d0:	854a                	mv	a0,s2
200014d2:	9982                	jalr	s3
200014d4:	9b2a                	add	s6,s6,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:293
        value = -value;
200014d6:	409004b3          	neg	s1,s1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:295
      *bytes_written += write_digits(out, value, spec.width, 10, kDigitsLow);
200014da:	00001797          	auipc	a5,0x1
200014de:	a9378793          	addi	a5,a5,-1389 # 20001f6d <kDigitsLow>
200014e2:	4729                	li	a4,10
200014e4:	854a                	mv	a0,s2
200014e6:	85ce                	mv	a1,s3
200014e8:	8626                	mv	a2,s1
200014ea:	a829                	j	20001504 <base_vfprintf+0x250>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:318
      uint32_t value = va_arg(*args, uint32_t);
200014ec:	4502                	lw	a0,0(sp)
200014ee:	00450593          	addi	a1,a0,4
200014f2:	c02e                	sw	a1,0(sp)
200014f4:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:319
      *bytes_written += write_digits(out, value, spec.width, 16, kDigitsLow);
200014f6:	00001797          	auipc	a5,0x1
200014fa:	a7778793          	addi	a5,a5,-1417 # 20001f6d <kDigitsLow>
200014fe:	4741                	li	a4,16
20001500:	854a                	mv	a0,s2
20001502:	85ce                	mv	a1,s3
20001504:	86a2                	mv	a3,s0
20001506:	2235                	jal	20001632 <write_digits>
20001508:	a08d                	j	2000156a <base_vfprintf+0x2b6>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:334
      uint32_t value = va_arg(*args, uint32_t);
2000150a:	4502                	lw	a0,0(sp)
2000150c:	00450593          	addi	a1,a0,4
20001510:	c02e                	sw	a1,0(sp)
20001512:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:335
      *bytes_written += write_digits(out, value, spec.width, 2, kDigitsLow);
20001514:	00001797          	auipc	a5,0x1
20001518:	a5978793          	addi	a5,a5,-1447 # 20001f6d <kDigitsLow>
2000151c:	4709                	li	a4,2
2000151e:	b7cd                	j	20001500 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:274
      char *value = va_arg(*args, char *);
20001520:	4502                	lw	a0,0(sp)
20001522:	00450593          	addi	a1,a0,4
20001526:	c02e                	sw	a1,0(sp)
20001528:	410c                	lw	a1,0(a0)
2000152a:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
2000152c:	00a58633          	add	a2,a1,a0
20001530:	00064603          	lbu	a2,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:277
        ++len;
20001534:	0505                	addi	a0,a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:276
      while (value[len] != '\0') {
20001536:	fa7d                	bnez	a2,2000152c <base_vfprintf+0x278>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:279
      *bytes_written += out.sink(out.data, value, len);
20001538:	fff50613          	addi	a2,a0,-1
2000153c:	a02d                	j	20001566 <base_vfprintf+0x2b2>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:265
      *bytes_written += out.sink(out.data, "%", 1);
2000153e:	4605                	li	a2,1
20001540:	854a                	mv	a0,s2
20001542:	85d2                	mv	a1,s4
20001544:	a015                	j	20001568 <base_vfprintf+0x2b4>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:299
      uint32_t value = va_arg(*args, uint32_t);
20001546:	4502                	lw	a0,0(sp)
20001548:	00450593          	addi	a1,a0,4
2000154c:	c02e                	sw	a1,0(sp)
2000154e:	4110                	lw	a2,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:300
      *bytes_written += write_digits(out, value, spec.width, 8, kDigitsLow);
20001550:	00001797          	auipc	a5,0x1
20001554:	a1d78793          	addi	a5,a5,-1507 # 20001f6d <kDigitsLow>
20001558:	4721                	li	a4,8
2000155a:	b75d                	j	20001500 <base_vfprintf+0x24c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:339
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
2000155c:	00001597          	auipc	a1,0x1
20001560:	a3158593          	addi	a1,a1,-1487 # 20001f8d <kUnknownSpec>
20001564:	463d                	li	a2,15
20001566:	854a                	mv	a0,s2
20001568:	9982                	jalr	s3
2000156a:	9b2a                	add	s6,s6,a0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:357
  while (format[0] != '\0') {
2000156c:	000bc503          	lbu	a0,0(s7)
20001570:	d8051ce3          	bnez	a0,20001308 <base_vfprintf+0x54>
20001574:	a819                	j	2000158a <base_vfprintf+0x2d6>
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:190
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
20001576:	00001597          	auipc	a1,0x1
2000157a:	9da58593          	addi	a1,a1,-1574 # 20001f50 <kErrorNul>
2000157e:	4645                	li	a2,17
20001580:	854a                	mv	a0,s2
20001582:	9982                	jalr	s3
20001584:	9b2a                	add	s6,s6,a0
20001586:	a011                	j	2000158a <base_vfprintf+0x2d6>
20001588:	4b01                	li	s6,0
base_vfprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:370

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
2000158a:	855a                	mv	a0,s6
2000158c:	4db2                	lw	s11,12(sp)
2000158e:	4d42                	lw	s10,16(sp)
20001590:	4cd2                	lw	s9,20(sp)
20001592:	4c62                	lw	s8,24(sp)
20001594:	4bf2                	lw	s7,28(sp)
20001596:	5b02                	lw	s6,32(sp)
20001598:	5a92                	lw	s5,36(sp)
2000159a:	5a22                	lw	s4,40(sp)
2000159c:	59b2                	lw	s3,44(sp)
2000159e:	5942                	lw	s2,48(sp)
200015a0:	54d2                	lw	s1,52(sp)
200015a2:	5462                	lw	s0,56(sp)
200015a4:	50f2                	lw	ra,60(sp)
200015a6:	6121                	addi	sp,sp,64
200015a8:	8082                	ret
consume_format_specifier():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:203
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
200015aa:	00001597          	auipc	a1,0x1
200015ae:	9b758593          	addi	a1,a1,-1609 # 20001f61 <kErrorTooWide>
200015b2:	4631                	li	a2,12
200015b4:	b7f1                	j	20001580 <base_vfprintf+0x2cc>

200015b6 <base_snprintf>:
base_snprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:109
size_t base_snprintf(char *buf, size_t len, const char *format, ...) {
200015b6:	7179                	addi	sp,sp,-48
200015b8:	ca06                	sw	ra,20(sp)
200015ba:	d646                	sw	a7,44(sp)
200015bc:	d442                	sw	a6,40(sp)
200015be:	d23e                	sw	a5,36(sp)
200015c0:	d03a                	sw	a4,32(sp)
200015c2:	ce36                	sw	a3,28(sp)
200015c4:	0874                	addi	a3,sp,28
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:111
  va_start(args, format);
200015c6:	c836                	sw	a3,16(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:113
  snprintf_captures_t data = {
200015c8:	c42a                	sw	a0,8(sp)
200015ca:	c62e                	sw	a1,12(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:119
  size_t bytes_left = base_vfprintf(out, format, args);
200015cc:	00000597          	auipc	a1,0x0
200015d0:	01258593          	addi	a1,a1,18 # 200015de <snprintf_sink>
200015d4:	0028                	addi	a0,sp,8
200015d6:	39f9                	jal	200012b4 <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:121
  return bytes_left;
200015d8:	40d2                	lw	ra,20(sp)
200015da:	6145                	addi	sp,sp,48
200015dc:	8082                	ret

200015de <snprintf_sink>:
snprintf_sink():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:94
static size_t snprintf_sink(void *data, const char *buf, size_t len) {
200015de:	1141                	addi	sp,sp,-16
200015e0:	c606                	sw	ra,12(sp)
200015e2:	c422                	sw	s0,8(sp)
200015e4:	c226                	sw	s1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:96
  if (captures->bytes_left == 0) {
200015e6:	4140                	lw	s0,4(a0)
200015e8:	c00d                	beqz	s0,2000160a <snprintf_sink+0x2c>
200015ea:	84aa                	mv	s1,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:100
  if (len > captures->bytes_left) {
200015ec:	00c46363          	bltu	s0,a2,200015f2 <snprintf_sink+0x14>
200015f0:	8432                	mv	s0,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:103
  memcpy(captures->buf, buf, len);
200015f2:	4088                	lw	a0,0(s1)
200015f4:	8622                	mv	a2,s0
200015f6:	8aeff0ef          	jal	ra,200006a4 <memcpy>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
200015fa:	4088                	lw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
200015fc:	40cc                	lw	a1,4(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:104
  captures->buf += len;
200015fe:	9522                	add	a0,a0,s0
20001600:	c088                	sw	a0,0(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:105
  captures->bytes_left -= len;
20001602:	40858533          	sub	a0,a1,s0
20001606:	c0c8                	sw	a0,4(s1)
20001608:	a011                	j	2000160c <snprintf_sink+0x2e>
2000160a:	4401                	li	s0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:107
}
2000160c:	8522                	mv	a0,s0
2000160e:	4492                	lw	s1,4(sp)
20001610:	4422                	lw	s0,8(sp)
20001612:	40b2                	lw	ra,12(sp)
20001614:	0141                	addi	sp,sp,16
20001616:	8082                	ret

20001618 <base_fprintf>:
base_fprintf():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:124
size_t base_fprintf(buffer_sink_t out, const char *format, ...) {
20001618:	1101                	addi	sp,sp,-32
2000161a:	c206                	sw	ra,4(sp)
2000161c:	ce46                	sw	a7,28(sp)
2000161e:	cc42                	sw	a6,24(sp)
20001620:	ca3e                	sw	a5,20(sp)
20001622:	c83a                	sw	a4,16(sp)
20001624:	c636                	sw	a3,12(sp)
20001626:	0074                	addi	a3,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:126
  va_start(args, format);
20001628:	c036                	sw	a3,0(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:127
  size_t bytes_left = base_vfprintf(out, format, args);
2000162a:	3169                	jal	200012b4 <base_vfprintf>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:129
  return bytes_left;
2000162c:	4092                	lw	ra,4(sp)
2000162e:	6105                	addi	sp,sp,32
20001630:	8082                	ret

20001632 <write_digits>:
write_digits():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:225
                           uint32_t base, const char *glyphs) {
20001632:	7139                	addi	sp,sp,-64
20001634:	de06                	sw	ra,60(sp)
20001636:	dc22                	sw	s0,56(sp)
20001638:	da26                	sw	s1,52(sp)
2000163a:	d84a                	sw	s2,48(sp)
2000163c:	d64e                	sw	s3,44(sp)
2000163e:	892e                	mv	s2,a1
20001640:	89aa                	mv	s3,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20001642:	ca05                	beqz	a2,20001672 <write_digits+0x40>
20001644:	4501                	li	a0,0
20001646:	02b10813          	addi	a6,sp,43
2000164a:	84b2                	mv	s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:234
    value /= base;
2000164c:	02e65633          	divu	a2,a2,a4
20001650:	02e60433          	mul	s0,a2,a4
20001654:	40848433          	sub	s0,s1,s0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:235
    buffer[kWordBits - 1 - len] = glyphs[digit];
20001658:	943e                	add	s0,s0,a5
2000165a:	00040403          	lb	s0,0(s0)
2000165e:	00a805b3          	add	a1,a6,a0
20001662:	00858023          	sb	s0,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:232
  while (value > 0) {
20001666:	157d                	addi	a0,a0,-1
20001668:	fee4f1e3          	bgeu	s1,a4,2000164a <write_digits+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:238
  width = width == 0 ? 1 : width;
2000166c:	40a00633          	neg	a2,a0
20001670:	a011                	j	20001674 <write_digits+0x42>
20001672:	4601                	li	a2,0
20001674:	4485                	li	s1,1
20001676:	c291                	beqz	a3,2000167a <write_digits+0x48>
20001678:	84b6                	mv	s1,a3
2000167a:	02000513          	li	a0,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:239
  width = width > kWordBits ? kWordBits : width;
2000167e:	00a4e463          	bltu	s1,a0,20001686 <write_digits+0x54>
20001682:	02000493          	li	s1,32
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
20001686:	02967063          	bgeu	a2,s1,200016a6 <write_digits+0x74>
2000168a:	0068                	addi	a0,sp,12
2000168c:	8d05                	sub	a0,a0,s1
2000168e:	02050513          	addi	a0,a0,32
20001692:	40c48433          	sub	s0,s1,a2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:241
    buffer[kWordBits - len - 1] = '0';
20001696:	03000593          	li	a1,48
2000169a:	8622                	mv	a2,s0
2000169c:	81eff0ef          	jal	ra,200006ba <memset>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:240
  while (len < width) {
200016a0:	147d                	addi	s0,s0,-1
200016a2:	fc7d                	bnez	s0,200016a0 <write_digits+0x6e>
200016a4:	8626                	mv	a2,s1
200016a6:	0068                	addi	a0,sp,12
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:244
  return out.sink(out.data, buffer + (kWordBits - len), len);
200016a8:	8d11                	sub	a0,a0,a2
200016aa:	02050593          	addi	a1,a0,32
200016ae:	854e                	mv	a0,s3
200016b0:	9902                	jalr	s2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/runtime/print.c:245
}
200016b2:	59b2                	lw	s3,44(sp)
200016b4:	5942                	lw	s2,48(sp)
200016b6:	54d2                	lw	s1,52(sp)
200016b8:	5462                	lw	s0,56(sp)
200016ba:	50f2                	lw	ra,60(sp)
200016bc:	6121                	addi	sp,sp,64
200016be:	8082                	ret

200016c0 <dif_uart_init>:
dif_uart_init():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:136

  return bytes_read;
}

dif_uart_result_t dif_uart_init(dif_uart_params_t params, dif_uart_t *uart) {
  if (uart == NULL) {
200016c0:	c581                	beqz	a1,200016c8 <dif_uart_init+0x8>
200016c2:	4601                	li	a2,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:140
    return kDifUartBadArg;
  }

  uart->params = params;
200016c4:	c188                	sw	a0,0(a1)
200016c6:	a011                	j	200016ca <dif_uart_init+0xa>
200016c8:	4609                	li	a2,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:142
  return kDifUartOk;
}
200016ca:	8532                	mv	a0,a2
200016cc:	8082                	ret

200016ce <dif_uart_configure>:
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:145

dif_uart_config_result_t dif_uart_configure(const dif_uart_t *uart,
                                            dif_uart_config_t config) {
200016ce:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:146
  if (uart == NULL) {
200016d0:	c606                	sw	ra,12(sp)
200016d2:	c422                	sw	s0,8(sp)
200016d4:	c226                	sw	s1,4(sp)
200016d6:	c92d                	beqz	a0,20001748 <dif_uart_configure+0x7a>
200016d8:	84ae                	mv	s1,a1
200016da:	842a                	mv	s0,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:150
    return kDifUartConfigBadArg;
  }

  if (config.baudrate == 0 || config.clk_freq_hz == 0) {
200016dc:	418c                	lw	a1,0(a1)
200016de:	450d                	li	a0,3
200016e0:	c5ad                	beqz	a1,2000174a <dif_uart_configure+0x7c>
200016e2:	40d0                	lw	a2,4(s1)
200016e4:	c23d                	beqz	a2,2000174a <dif_uart_configure+0x7c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:169
                "NCO bit width exceeds 28 bits.");

  // NCO creates 16x of baudrate. So, in addition to the nco_width,
  // 2^4 should be multiplied.
  uint64_t nco =
      ((uint64_t)config.baudrate << (nco_width + 4)) / config.clk_freq_hz;
200016e6:	01459513          	slli	a0,a1,0x14
200016ea:	81b1                	srli	a1,a1,0xc
200016ec:	4681                	li	a3,0
200016ee:	2e61                	jal	20001a86 <__udivdi3>
200016f0:	6641                	lui	a2,0x10
200016f2:	167d                	addi	a2,a2,-1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:170
  uint32_t nco_masked = nco & UART_CTRL_NCO_MASK;
200016f4:	8e69                	and	a2,a2,a0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:173

  // Requested baudrate is too high for the given clock frequency.
  if (nco != nco_masked) {
200016f6:	8d31                	xor	a0,a0,a2
200016f8:	8dc9                	or	a1,a1,a0
200016fa:	4511                	li	a0,4
200016fc:	e5b9                	bnez	a1,2000174a <dif_uart_configure+0x7c>
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:92
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, 0u);
200016fe:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001700:	00052623          	sw	zero,12(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:98
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);
20001704:	4008                	lw	a0,0(s0)
20001706:	458d                	li	a1,3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001708:	cd4c                	sw	a1,28(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:100
  mmio_region_write32(uart->params.base_addr, UART_OVRD_REG_OFFSET, 0u);
2000170a:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000170c:	02052223          	sw	zero,36(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:101
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET, 0u);
20001710:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001712:	02052623          	sw	zero,44(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:102
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
20001716:	4008                	lw	a0,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001718:	00052223          	sw	zero,4(a0)
uart_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:103
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET,
2000171c:	4008                	lw	a0,0(s0)
2000171e:	55fd                	li	a1,-1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001720:	c10c                	sw	a1,0(a0)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  // Set baudrate, enable RX and TX, configure parity.
  uint32_t reg = 0;
  reg = bitfield_field32_write(reg, UART_CTRL_NCO_FIELD, nco_masked);
  reg = bitfield_bit32_write(reg, UART_CTRL_TX_BIT, true);
  reg = bitfield_bit32_write(reg, UART_CTRL_RX_BIT, true);
  if (config.parity_enable == kDifUartToggleEnabled) {
20001722:	4494                	lw	a3,8(s1)
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
BITFIELD_WARN_UNUSED_RESULT
inline uint32_t bitfield_field32_write(uint32_t bitfield,
                                       bitfield_field32_t field,
                                       uint32_t value) {
  bitfield &= ~(field.mask << field.index);
  bitfield |= (value & field.mask) << field.index;
20001724:	01061513          	slli	a0,a2,0x10
20001728:	04300593          	li	a1,67
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
2000172c:	c291                	beqz	a3,20001730 <dif_uart_configure+0x62>
2000172e:	458d                	li	a1,3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_EN_BIT, true);
  }
  if (config.parity == kDifUartParityOdd) {
20001730:	44d0                	lw	a2,12(s1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:185
  if (config.parity_enable == kDifUartToggleEnabled) {
20001732:	8d4d                	or	a0,a0,a1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:188
  if (config.parity == kDifUartParityOdd) {
20001734:	e219                	bnez	a2,2000173a <dif_uart_configure+0x6c>
20001736:	08056513          	ori	a0,a0,128
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:191
    reg = bitfield_bit32_write(reg, UART_CTRL_PARITY_ODD_BIT, true);
  }
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);
2000173a:	400c                	lw	a1,0(s0)
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
2000173c:	c5c8                	sw	a0,12(a1)
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:194

  // Disable interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
2000173e:	400c                	lw	a1,0(s0)
20001740:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001742:	0005a223          	sw	zero,4(a1)
20001746:	a011                	j	2000174a <dif_uart_configure+0x7c>
20001748:	4509                	li	a0,2
dif_uart_configure():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:197

  return kDifUartConfigOk;
}
2000174a:	4492                	lw	s1,4(sp)
2000174c:	4422                	lw	s0,8(sp)
2000174e:	40b2                	lw	ra,12(sp)
20001750:	0141                	addi	sp,sp,16
20001752:	8082                	ret

20001754 <dif_uart_irq_is_pending>:
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:201

dif_uart_result_t dif_uart_irq_is_pending(const dif_uart_t *uart,
                                          dif_uart_irq_t irq,
                                          bool *is_pending) {
20001754:	1141                	addi	sp,sp,-16
20001756:	c606                	sw	ra,12(sp)
20001758:	c422                	sw	s0,8(sp)
2000175a:	c226                	sw	s1,4(sp)
2000175c:	84aa                	mv	s1,a0
2000175e:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:202
  if (uart == NULL || is_pending == NULL) {
20001760:	c09d                	beqz	s1,20001786 <dif_uart_irq_is_pending+0x32>
20001762:	8432                	mv	s0,a2
20001764:	c20d                	beqz	a2,20001786 <dif_uart_irq_is_pending+0x32>
20001766:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:207
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20001768:	852e                	mv	a0,a1
2000176a:	85b2                	mv	a1,a2
2000176c:	2015                	jal	20001790 <uart_irq_offset_get>
2000176e:	85aa                	mv	a1,a0
20001770:	4505                	li	a0,1
20001772:	c991                	beqz	a1,20001786 <dif_uart_irq_is_pending+0x32>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:212
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET);
20001774:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001776:	410c                	lw	a1,0(a0)
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
  *is_pending = bitfield_bit32_read(reg, offset);
20001778:	4602                	lw	a2,0(sp)
2000177a:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
 */
BITFIELD_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
2000177c:	00c5d5b3          	srl	a1,a1,a2
20001780:	8985                	andi	a1,a1,1
dif_uart_irq_is_pending():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:213
20001782:	00b40023          	sb	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:216

  return kDifUartOk;
}
20001786:	4492                	lw	s1,4(sp)
20001788:	4422                	lw	s0,8(sp)
2000178a:	40b2                	lw	ra,12(sp)
2000178c:	0141                	addi	sp,sp,16
2000178e:	8082                	ret

20001790 <uart_irq_offset_get>:
uart_irq_offset_get():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:55
                                ptrdiff_t *offset_out) {
20001790:	461d                	li	a2,7
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:57
  switch (irq_type) {
20001792:	00a66563          	bltu	a2,a0,2000179c <uart_irq_offset_get+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:86
  *offset_out = offset;
20001796:	c188                	sw	a0,0(a1)
20001798:	4505                	li	a0,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:89
}
2000179a:	8082                	ret
2000179c:	4501                	li	a0,0
2000179e:	8082                	ret

200017a0 <dif_uart_irq_acknowledge>:
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:219

dif_uart_result_t dif_uart_irq_acknowledge(const dif_uart_t *uart,
                                           dif_uart_irq_t irq) {
200017a0:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:220
  if (uart == NULL) {
200017a2:	c606                	sw	ra,12(sp)
200017a4:	c422                	sw	s0,8(sp)
200017a6:	c10d                	beqz	a0,200017c8 <dif_uart_irq_acknowledge+0x28>
200017a8:	842a                	mv	s0,a0
200017aa:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:225
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
200017ac:	852e                	mv	a0,a1
200017ae:	85b2                	mv	a1,a2
200017b0:	37c5                	jal	20001790 <uart_irq_offset_get>
200017b2:	85aa                	mv	a1,a0
200017b4:	4505                	li	a0,1
200017b6:	c991                	beqz	a1,200017ca <dif_uart_irq_acknowledge+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:230
    return kDifUartError;
  }

  // Writing to the register clears the corresponding bits (Write-one clear).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
200017b8:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:231
  mmio_region_write32(uart->params.base_addr, UART_INTR_STATE_REG_OFFSET, reg);
200017ba:	4010                	lw	a2,0(s0)
200017bc:	4501                	li	a0,0
200017be:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200017c0:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200017c4:	c20c                	sw	a1,0(a2)
200017c6:	a011                	j	200017ca <dif_uart_irq_acknowledge+0x2a>
200017c8:	4509                	li	a0,2
dif_uart_irq_acknowledge():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:234

  return kDifUartOk;
}
200017ca:	4422                	lw	s0,8(sp)
200017cc:	40b2                	lw	ra,12(sp)
200017ce:	0141                	addi	sp,sp,16
200017d0:	8082                	ret

200017d2 <dif_uart_irq_disable_all>:
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:238

dif_uart_result_t dif_uart_irq_disable_all(const dif_uart_t *uart,
                                           dif_uart_irq_snapshot_t *snapshot) {
  if (uart == NULL) {
200017d2:	c911                	beqz	a0,200017e6 <dif_uart_irq_disable_all+0x14>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:243
    return kDifUartBadArg;
  }

  // Pass the current interrupt state to the caller.
  if (snapshot != NULL) {
200017d4:	c581                	beqz	a1,200017dc <dif_uart_irq_disable_all+0xa>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:245
    *snapshot =
        mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
200017d6:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200017d8:	4250                	lw	a2,4(a2)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:244
    *snapshot =
200017da:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:249
  }

  // Disable all UART interrupts.
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, 0u);
200017dc:	410c                	lw	a1,0(a0)
200017de:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200017e0:	0005a223          	sw	zero,4(a1)
dif_uart_irq_disable_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:252

  return kDifUartOk;
}
200017e4:	8082                	ret
200017e6:	4509                	li	a0,2
200017e8:	8082                	ret

200017ea <dif_uart_irq_restore_all>:
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:255

dif_uart_result_t dif_uart_irq_restore_all(
    const dif_uart_t *uart, const dif_uart_irq_snapshot_t *snapshot) {
200017ea:	862a                	mv	a2,a0
200017ec:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:256
  if (uart == NULL || snapshot == NULL) {
200017ee:	c611                	beqz	a2,200017fa <dif_uart_irq_restore_all+0x10>
200017f0:	c589                	beqz	a1,200017fa <dif_uart_irq_restore_all+0x10>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:261
    return kDifUartBadArg;
  }

  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
                      *snapshot);
200017f2:	418c                	lw	a1,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:260
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET,
200017f4:	4210                	lw	a2,0(a2)
200017f6:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200017f8:	c24c                	sw	a1,4(a2)
dif_uart_irq_restore_all():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:264

  return kDifUartOk;
}
200017fa:	8082                	ret

200017fc <dif_uart_irq_get_enabled>:
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:268

dif_uart_result_t dif_uart_irq_get_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t *state) {
200017fc:	1141                	addi	sp,sp,-16
200017fe:	c606                	sw	ra,12(sp)
20001800:	c422                	sw	s0,8(sp)
20001802:	c226                	sw	s1,4(sp)
20001804:	84aa                	mv	s1,a0
20001806:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:269
  if (uart == NULL || state == NULL) {
20001808:	c485                	beqz	s1,20001830 <dif_uart_irq_get_enabled+0x34>
2000180a:	8432                	mv	s0,a2
2000180c:	c215                	beqz	a2,20001830 <dif_uart_irq_get_enabled+0x34>
2000180e:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:274
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20001810:	852e                	mv	a0,a1
20001812:	85b2                	mv	a1,a2
20001814:	3fb5                	jal	20001790 <uart_irq_offset_get>
20001816:	85aa                	mv	a1,a0
20001818:	4505                	li	a0,1
2000181a:	c999                	beqz	a1,20001830 <dif_uart_irq_get_enabled+0x34>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:279
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
2000181c:	4088                	lw	a0,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
2000181e:	414c                	lw	a1,4(a0)
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:281

  bool is_enabled = bitfield_bit32_read(reg, offset);
20001820:	4602                	lw	a2,0(sp)
20001822:	4501                	li	a0,0
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
20001824:	00c5d5b3          	srl	a1,a1,a2
20001828:	8985                	andi	a1,a1,1
2000182a:	0015b593          	seqz	a1,a1
dif_uart_irq_get_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:282
  *state = is_enabled ? kDifUartToggleEnabled : kDifUartToggleDisabled;
2000182e:	c00c                	sw	a1,0(s0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:285

  return kDifUartOk;
}
20001830:	4492                	lw	s1,4(sp)
20001832:	4422                	lw	s0,8(sp)
20001834:	40b2                	lw	ra,12(sp)
20001836:	0141                	addi	sp,sp,16
20001838:	8082                	ret

2000183a <dif_uart_irq_set_enabled>:
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:289

dif_uart_result_t dif_uart_irq_set_enabled(const dif_uart_t *uart,
                                           dif_uart_irq_t irq,
                                           dif_uart_toggle_t state) {
2000183a:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:290
  if (uart == NULL) {
2000183c:	c606                	sw	ra,12(sp)
2000183e:	c422                	sw	s0,8(sp)
20001840:	c226                	sw	s1,4(sp)
20001842:	c91d                	beqz	a0,20001878 <dif_uart_irq_set_enabled+0x3e>
20001844:	8432                	mv	s0,a2
20001846:	84aa                	mv	s1,a0
20001848:	860a                	mv	a2,sp
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:295
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
2000184a:	852e                	mv	a0,a1
2000184c:	85b2                	mv	a1,a2
2000184e:	3789                	jal	20001790 <uart_irq_offset_get>
20001850:	85aa                	mv	a1,a0
20001852:	4505                	li	a0,1
20001854:	c19d                	beqz	a1,2000187a <dif_uart_irq_set_enabled+0x40>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:300
    return kDifUartError;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET);
20001856:	408c                	lw	a1,0(s1)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001858:	41d0                	lw	a2,4(a1)
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:302
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
  reg = bitfield_bit32_write(reg, offset, bit);
2000185a:	4682                	lw	a3,0(sp)
2000185c:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:301
  bool bit = (state == kDifUartToggleEnabled) ? true : false;
2000185e:	00143713          	seqz	a4,s0
20001862:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20001864:	00d797b3          	sll	a5,a5,a3
20001868:	fff7c793          	not	a5,a5
2000186c:	8e7d                	and	a2,a2,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
2000186e:	00d716b3          	sll	a3,a4,a3
20001872:	8e55                	or	a2,a2,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001874:	c1d0                	sw	a2,4(a1)
20001876:	a011                	j	2000187a <dif_uart_irq_set_enabled+0x40>
20001878:	4509                	li	a0,2
dif_uart_irq_set_enabled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:306
  mmio_region_write32(uart->params.base_addr, UART_INTR_ENABLE_REG_OFFSET, reg);

  return kDifUartOk;
}
2000187a:	4492                	lw	s1,4(sp)
2000187c:	4422                	lw	s0,8(sp)
2000187e:	40b2                	lw	ra,12(sp)
20001880:	0141                	addi	sp,sp,16
20001882:	8082                	ret

20001884 <dif_uart_irq_force>:
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:309

dif_uart_result_t dif_uart_irq_force(const dif_uart_t *uart,
                                     dif_uart_irq_t irq) {
20001884:	1141                	addi	sp,sp,-16
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:310
  if (uart == NULL) {
20001886:	c606                	sw	ra,12(sp)
20001888:	c422                	sw	s0,8(sp)
2000188a:	c10d                	beqz	a0,200018ac <dif_uart_irq_force+0x28>
2000188c:	842a                	mv	s0,a0
2000188e:	0050                	addi	a2,sp,4
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:315
    return kDifUartBadArg;
  }

  ptrdiff_t offset;
  if (!uart_irq_offset_get(irq, &offset)) {
20001890:	852e                	mv	a0,a1
20001892:	85b2                	mv	a1,a2
20001894:	3df5                	jal	20001790 <uart_irq_offset_get>
20001896:	85aa                	mv	a1,a0
20001898:	4505                	li	a0,1
2000189a:	c991                	beqz	a1,200018ae <dif_uart_irq_force+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:320
    return kDifUartError;
  }

  // Force the requested interrupt (write-only).
  uint32_t reg = bitfield_bit32_write(0, offset, true);
2000189c:	4592                	lw	a1,4(sp)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:321
  mmio_region_write32(uart->params.base_addr, UART_INTR_TEST_REG_OFFSET, reg);
2000189e:	4010                	lw	a2,0(s0)
200018a0:	4501                	li	a0,0
200018a2:	4685                	li	a3,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200018a4:	00b695b3          	sll	a1,a3,a1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
200018a8:	c60c                	sw	a1,8(a2)
200018aa:	a011                	j	200018ae <dif_uart_irq_force+0x2a>
200018ac:	4509                	li	a0,2
dif_uart_irq_force():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:324

  return kDifUartOk;
}
200018ae:	4422                	lw	s0,8(sp)
200018b0:	40b2                	lw	ra,12(sp)
200018b2:	0141                	addi	sp,sp,16
200018b4:	8082                	ret

200018b6 <dif_uart_watermark_rx_set>:
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:328

dif_uart_result_t dif_uart_watermark_rx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
200018b6:	cd09                	beqz	a0,200018d0 <dif_uart_watermark_rx_set+0x1a>
200018b8:	4691                	li	a3,4
200018ba:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
200018bc:	00b6eb63          	bltu	a3,a1,200018d2 <dif_uart_watermark_rx_set+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:357
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
200018c0:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200018c2:	4d54                	lw	a3,28(a0)
200018c4:	4601                	li	a2,0
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:335
  switch (watermark) {
200018c6:	058a                	slli	a1,a1,0x2
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
200018c8:	9a8d                	andi	a3,a3,-29
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
200018ca:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200018cc:	cd4c                	sw	a1,28(a0)
200018ce:	a011                	j	200018d2 <dif_uart_watermark_rx_set+0x1c>
200018d0:	4609                	li	a2,2
dif_uart_watermark_rx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:362
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_RXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
200018d2:	8532                	mv	a0,a2
200018d4:	8082                	ret

200018d6 <dif_uart_watermark_tx_set>:
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:366

dif_uart_result_t dif_uart_watermark_tx_set(const dif_uart_t *uart,
                                            dif_uart_watermark_t watermark) {
  if (uart == NULL) {
200018d6:	cd11                	beqz	a0,200018f2 <dif_uart_watermark_tx_set+0x1c>
200018d8:	468d                	li	a3,3
200018da:	4605                	li	a2,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  }

  // Check if the requested watermark is valid, and get a corresponding
  // register definition to be written.
  uint32_t value;
  switch (watermark) {
200018dc:	00b6ec63          	bltu	a3,a1,200018f4 <dif_uart_watermark_tx_set+0x1e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:393
      return kDifUartError;
  }

  // Set watermark level.
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
200018e0:	4108                	lw	a0,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
200018e2:	4d54                	lw	a3,28(a0)
200018e4:	4601                	li	a2,0
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:373
  switch (watermark) {
200018e6:	0596                	slli	a1,a1,0x5
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
200018e8:	f9f6f693          	andi	a3,a3,-97
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
200018ec:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200018ee:	cd4c                	sw	a1,28(a0)
200018f0:	a011                	j	200018f4 <dif_uart_watermark_tx_set+0x1e>
200018f2:	4609                	li	a2,2
dif_uart_watermark_tx_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:398
  reg = bitfield_field32_write(reg, UART_FIFO_CTRL_TXILVL_FIELD, value);
  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
200018f4:	8532                	mv	a0,a2
200018f6:	8082                	ret

200018f8 <dif_uart_bytes_send>:
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:403

dif_uart_result_t dif_uart_bytes_send(const dif_uart_t *uart,
                                      const uint8_t *data,
                                      size_t bytes_requested,
                                      size_t *bytes_written) {
200018f8:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:404
  if (uart == NULL || data == NULL) {
200018fa:	c51d                	beqz	a0,20001928 <dif_uart_bytes_send+0x30>
200018fc:	c595                	beqz	a1,20001928 <dif_uart_bytes_send+0x30>
200018fe:	4781                	li	a5,0
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
20001900:	c20d                	beqz	a2,20001922 <dif_uart_bytes_send+0x2a>
uart_tx_full():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:21
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
20001902:	00052803          	lw	a6,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001906:	01082703          	lw	a4,16(a6)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
2000190a:	8b05                	andi	a4,a4,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
2000190c:	eb19                	bnez	a4,20001922 <dif_uart_bytes_send+0x2a>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:114
    uart_tx_fifo_write(uart, data[bytes_written]);
2000190e:	00f58733          	add	a4,a1,a5
20001912:	00074703          	lbu	a4,0(a4)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:115
    ++bytes_written;
20001916:	0785                	addi	a5,a5,1
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001918:	00e82c23          	sw	a4,24(a6)
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
2000191c:	fef613e3          	bne	a2,a5,20001902 <dif_uart_bytes_send+0xa>
20001920:	87b2                	mv	a5,a2
20001922:	4701                	li	a4,0
dif_uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:410
    return kDifUartBadArg;
  }

  // `bytes_written` is an optional parameter.
  size_t res = uart_bytes_send(uart, data, bytes_requested);
  if (bytes_written != NULL) {
20001924:	c291                	beqz	a3,20001928 <dif_uart_bytes_send+0x30>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:411
    *bytes_written = res;
20001926:	c29c                	sw	a5,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:415
  }

  return kDifUartOk;
}
20001928:	853a                	mv	a0,a4
2000192a:	8082                	ret

2000192c <dif_uart_bytes_receive>:
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:419

dif_uart_result_t dif_uart_bytes_receive(const dif_uart_t *uart,
                                         size_t bytes_requested, uint8_t *data,
                                         size_t *bytes_read) {
2000192c:	4709                	li	a4,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:420
  if (uart == NULL || data == NULL) {
2000192e:	c515                	beqz	a0,2000195a <dif_uart_bytes_receive+0x2e>
20001930:	c60d                	beqz	a2,2000195a <dif_uart_bytes_receive+0x2e>
20001932:	4801                	li	a6,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
20001934:	cd99                	beqz	a1,20001952 <dif_uart_bytes_receive+0x26>
uart_rx_empty():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:33
      mmio_region_read32(uart->params.base_addr, UART_STATUS_REG_OFFSET);
20001936:	4118                	lw	a4,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001938:	4b1c                	lw	a5,16(a4)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000193a:	0207f793          	andi	a5,a5,32
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
2000193e:	eb91                	bnez	a5,20001952 <dif_uart_bytes_receive+0x26>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001940:	4b58                	lw	a4,20(a4)
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
20001942:	010607b3          	add	a5,a2,a6
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:129
    ++bytes_read;
20001946:	0805                	addi	a6,a6,1
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
20001948:	00e78023          	sb	a4,0(a5)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
2000194c:	ff0595e3          	bne	a1,a6,20001936 <dif_uart_bytes_receive+0xa>
20001950:	882e                	mv	a6,a1
20001952:	4701                	li	a4,0
dif_uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:426
    return kDifUartBadArg;
  }

  // `bytes_read` is an optional parameter.
  size_t res = uart_bytes_receive(uart, bytes_requested, data);
  if (bytes_read != NULL) {
20001954:	c299                	beqz	a3,2000195a <dif_uart_bytes_receive+0x2e>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:427
    *bytes_read = res;
20001956:	0106a023          	sw	a6,0(a3)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:431
  }

  return kDifUartOk;
}
2000195a:	853a                	mv	a0,a4
2000195c:	8082                	ret

2000195e <dif_uart_byte_send_polled>:
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:435

dif_uart_result_t dif_uart_byte_send_polled(const dif_uart_t *uart,
                                            uint8_t byte) {
  if (uart == NULL) {
2000195e:	cd19                	beqz	a0,2000197c <dif_uart_byte_send_polled+0x1e>
20001960:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001962:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20001964:	8a85                	andi	a3,a3,1
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:440
    return kDifUartBadArg;
  }

  // Busy wait for the TX FIFO to free up.
  while (uart_tx_full(uart)) {
20001966:	fef5                	bnez	a3,20001962 <dif_uart_byte_send_polled+0x4>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001968:	4a14                	lw	a3,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000196a:	8a85                	andi	a3,a3,1
uart_bytes_send():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:113
  while ((bytes_written < bytes_requested) && !uart_tx_full(uart)) {
2000196c:	e299                	bnez	a3,20001972 <dif_uart_byte_send_polled+0x14>
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
2000196e:	ce0c                	sw	a1,24(a2)
20001970:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001972:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20001974:	8921                	andi	a0,a0,8
dif_uart_byte_send_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:447

  (void)uart_bytes_send(uart, &byte, 1);

  // Busy wait for the TX FIFO to be drained and for HW to finish processing
  // the last byte.
  while (!uart_tx_idle(uart)) {
20001976:	dd75                	beqz	a0,20001972 <dif_uart_byte_send_polled+0x14>
20001978:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:451
  }

  return kDifUartOk;
}
2000197a:	8082                	ret
2000197c:	4509                	li	a0,2
2000197e:	8082                	ret

20001980 <dif_uart_byte_receive_polled>:
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:454

dif_uart_result_t dif_uart_byte_receive_polled(const dif_uart_t *uart,
                                               uint8_t *byte) {
20001980:	862a                	mv	a2,a0
20001982:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:455
  if (uart == NULL || byte == NULL) {
20001984:	c205                	beqz	a2,200019a4 <dif_uart_byte_receive_polled+0x24>
20001986:	cd99                	beqz	a1,200019a4 <dif_uart_byte_receive_polled+0x24>
20001988:	4210                	lw	a2,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000198a:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
2000198c:	02057513          	andi	a0,a0,32
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:460
    return kDifUartBadArg;
  }

  // Busy wait for the RX message in the FIFO.
  while (uart_rx_empty(uart)) {
20001990:	fd6d                	bnez	a0,2000198a <dif_uart_byte_receive_polled+0xa>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
20001992:	4a08                	lw	a0,16(a2)
bitfield_bit32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:125
20001994:	02057693          	andi	a3,a0,32
20001998:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:127
  while ((bytes_read < bytes_requested) && !uart_rx_empty(uart)) {
2000199a:	e689                	bnez	a3,200019a4 <dif_uart_byte_receive_polled+0x24>
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
2000199c:	4a50                	lw	a2,20(a2)
2000199e:	4501                	li	a0,0
uart_bytes_receive():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:128
    data[bytes_read] = uart_rx_fifo_read(uart);
200019a0:	00c58023          	sb	a2,0(a1)
dif_uart_byte_receive_polled():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:466
  }

  (void)uart_bytes_receive(uart, 1, byte);

  return kDifUartOk;
}
200019a4:	8082                	ret

200019a6 <dif_uart_rx_bytes_available>:
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:469

dif_uart_result_t dif_uart_rx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200019a6:	862a                	mv	a2,a0
200019a8:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:470
  if (uart == NULL || num_bytes == NULL) {
200019aa:	ca09                	beqz	a2,200019bc <dif_uart_rx_bytes_available+0x16>
200019ac:	c981                	beqz	a1,200019bc <dif_uart_rx_bytes_available+0x16>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:476
    return kDifUartBadArg;
  }

  // RX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200019ae:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200019b0:	5110                	lw	a2,32(a0)
200019b2:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
200019b4:	8241                	srli	a2,a2,0x10
200019b6:	03f67613          	andi	a2,a2,63
dif_uart_rx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:477
  *num_bytes = (size_t)bitfield_field32_read(reg, UART_FIFO_STATUS_RXLVL_FIELD);
200019ba:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:480

  return kDifUartOk;
}
200019bc:	8082                	ret

200019be <dif_uart_tx_bytes_available>:
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:483

dif_uart_result_t dif_uart_tx_bytes_available(const dif_uart_t *uart,
                                              size_t *num_bytes) {
200019be:	862a                	mv	a2,a0
200019c0:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:484
  if (uart == NULL || num_bytes == NULL) {
200019c2:	ce01                	beqz	a2,200019da <dif_uart_tx_bytes_available+0x1c>
200019c4:	c999                	beqz	a1,200019da <dif_uart_tx_bytes_available+0x1c>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:490
    return kDifUartBadArg;
  }

  // TX FIFO fill level (in bytes).
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_STATUS_REG_OFFSET);
200019c6:	4208                	lw	a0,0(a2)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200019c8:	5110                	lw	a2,32(a0)
200019ca:	4501                	li	a0,0
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
200019cc:	03f67613          	andi	a2,a2,63
200019d0:	02000693          	li	a3,32
dif_uart_tx_bytes_available():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:493
  uint32_t fill_bytes =
      bitfield_field32_read(reg, UART_FIFO_STATUS_TXLVL_FIELD);
  *num_bytes = kDifUartFifoSizeBytes - fill_bytes;
200019d4:	40c68633          	sub	a2,a3,a2
200019d8:	c190                	sw	a2,0(a1)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:496

  return kDifUartOk;
}
200019da:	8082                	ret

200019dc <dif_uart_fifo_reset>:
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:500

dif_uart_result_t dif_uart_fifo_reset(const dif_uart_t *uart,
                                      dif_uart_fifo_reset_t reset) {
  if (uart == NULL) {
200019dc:	c11d                	beqz	a0,20001a02 <dif_uart_fifo_reset+0x26>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:505
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET);
200019de:	4110                	lw	a2,0(a0)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
200019e0:	4e48                	lw	a0,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507

  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
200019e2:	ffd5f693          	andi	a3,a1,-3
200019e6:	0016b693          	seqz	a3,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
    reg = bitfield_bit32_write(reg, UART_FIFO_CTRL_RXRST_BIT, true);
  }

  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
200019ea:	fff58713          	addi	a4,a1,-1
200019ee:	4789                	li	a5,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:507
  if (reset == kDifUartFifoResetRx || reset == kDifUartFifoResetAll) {
200019f0:	00d565b3          	or	a1,a0,a3
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:511
  if (reset == kDifUartFifoResetTx || reset == kDifUartFifoResetAll) {
200019f4:	00f77463          	bgeu	a4,a5,200019fc <dif_uart_fifo_reset+0x20>
200019f8:	0025e593          	ori	a1,a1,2
200019fc:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
200019fe:	ce4c                	sw	a1,28(a2)
dif_uart_fifo_reset():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:518
  }

  mmio_region_write32(uart->params.base_addr, UART_FIFO_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
20001a00:	8082                	ret
20001a02:	4509                	li	a0,2
20001a04:	8082                	ret

20001a06 <dif_uart_loopback_set>:
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:523

dif_uart_result_t dif_uart_loopback_set(const dif_uart_t *uart,
                                        dif_uart_loopback_t loopback,
                                        dif_uart_toggle_t enable) {
  if (uart == NULL) {
20001a06:	c515                	beqz	a0,20001a32 <dif_uart_loopback_set+0x2c>
20001a08:	4681                	li	a3,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:529
    return kDifUartBadArg;
  }

  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_CTRL_REG_OFFSET);
20001a0a:	4108                	lw	a0,0(a0)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:527
  uint32_t index = loopback ? UART_CTRL_LLPBK_BIT : UART_CTRL_SLPBK_BIT;
20001a0c:	0015b593          	seqz	a1,a1
20001a10:	4715                	li	a4,5
20001a12:	40b705b3          	sub	a1,a4,a1
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001a16:	4558                	lw	a4,12(a0)
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:530
  reg = bitfield_bit32_write(reg, index, enable == kDifUartToggleEnabled);
20001a18:	00163613          	seqz	a2,a2
20001a1c:	4785                	li	a5,1
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:79
  bitfield &= ~(field.mask << field.index);
20001a1e:	00b797b3          	sll	a5,a5,a1
20001a22:	fff7c793          	not	a5,a5
20001a26:	8f7d                	and	a4,a4,a5
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
  bitfield |= (value & field.mask) << field.index;
20001a28:	00b615b3          	sll	a1,a2,a1
20001a2c:	8dd9                	or	a1,a1,a4
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
20001a2e:	c54c                	sw	a1,12(a0)
20001a30:	a011                	j	20001a34 <dif_uart_loopback_set+0x2e>
20001a32:	4689                	li	a3,2
dif_uart_loopback_set():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:534
  mmio_region_write32(uart->params.base_addr, UART_CTRL_REG_OFFSET, reg);

  return kDifUartOk;
}
20001a34:	8536                	mv	a0,a3
20001a36:	8082                	ret

20001a38 <dif_uart_enable_rx_timeout>:
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:537

dif_uart_result_t dif_uart_enable_rx_timeout(const dif_uart_t *uart,
                                             uint32_t duration_ticks) {
20001a38:	862a                	mv	a2,a0
20001a3a:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:538
  if (uart == NULL || (duration_ticks & ~UART_TIMEOUT_CTRL_VAL_MASK) != 0) {
20001a3c:	ca11                	beqz	a2,20001a50 <dif_uart_enable_rx_timeout+0x18>
20001a3e:	0185d693          	srli	a3,a1,0x18
20001a42:	e699                	bnez	a3,20001a50 <dif_uart_enable_rx_timeout+0x18>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:545
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, true);
  reg =
      bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, duration_ticks);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
20001a44:	4210                	lw	a2,0(a2)
20001a46:	4501                	li	a0,0
20001a48:	800006b7          	lui	a3,0x80000
bitfield_field32_write():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:80
20001a4c:	8dd5                	or	a1,a1,a3
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001a4e:	d64c                	sw	a1,44(a2)
dif_uart_enable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:549
                      reg);

  return kDifUartOk;
}
20001a50:	8082                	ret

20001a52 <dif_uart_disable_rx_timeout>:
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:552

dif_uart_result_t dif_uart_disable_rx_timeout(const dif_uart_t *uart) {
  if (uart == NULL) {
20001a52:	c511                	beqz	a0,20001a5e <dif_uart_disable_rx_timeout+0xc>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:558
    return kDifUartBadArg;
  }

  uint32_t reg = bitfield_bit32_write(0, UART_TIMEOUT_CTRL_EN_BIT, false);
  reg = bitfield_field32_write(reg, UART_TIMEOUT_CTRL_VAL_FIELD, 0);
  mmio_region_write32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET,
20001a54:	410c                	lw	a1,0(a0)
20001a56:	4501                	li	a0,0
mmio_region_write32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:133
20001a58:	0205a623          	sw	zero,44(a1)
dif_uart_disable_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:562
                      reg);

  return kDifUartOk;
}
20001a5c:	8082                	ret
20001a5e:	4509                	li	a0,2
20001a60:	8082                	ret

20001a62 <dif_uart_get_rx_timeout>:
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:566

dif_uart_result_t dif_uart_get_rx_timeout(const dif_uart_t *uart,
                                          dif_uart_toggle_t *status,
                                          uint32_t *duration_ticks) {
20001a62:	86aa                	mv	a3,a0
20001a64:	4509                	li	a0,2
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:567
  if (uart == NULL || status == NULL) {
20001a66:	ce99                	beqz	a3,20001a84 <dif_uart_get_rx_timeout+0x22>
20001a68:	cd91                	beqz	a1,20001a84 <dif_uart_get_rx_timeout+0x22>
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:572
    return kDifUartBadArg;
  }

  uint32_t reg =
      mmio_region_read32(uart->params.base_addr, UART_TIMEOUT_CTRL_REG_OFFSET);
20001a6a:	4288                	lw	a0,0(a3)
mmio_region_read32():
/home/gl/work/opentitan/repo/sw/device/lib/base/mmio.h:101
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
20001a6c:	5554                	lw	a3,44(a0)
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:573
  *status = bitfield_bit32_read(reg, UART_TIMEOUT_CTRL_EN_BIT)
20001a6e:	fff6c513          	not	a0,a3
20001a72:	817d                	srli	a0,a0,0x1f
20001a74:	c188                	sw	a0,0(a1)
20001a76:	4501                	li	a0,0
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:577
                ? kDifUartToggleEnabled
                : kDifUartToggleDisabled;

  if (duration_ticks != NULL) {
20001a78:	c611                	beqz	a2,20001a84 <dif_uart_get_rx_timeout+0x22>
20001a7a:	010005b7          	lui	a1,0x1000
20001a7e:	15fd                	addi	a1,a1,-1
bitfield_field32_read():
/home/gl/work/opentitan/repo/sw/device/lib/base/bitfield.h:60
  return (bitfield >> field.index) & field.mask;
20001a80:	8df5                	and	a1,a1,a3
dif_uart_get_rx_timeout():
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:578
    *duration_ticks = bitfield_field32_read(reg, UART_TIMEOUT_CTRL_VAL_FIELD);
20001a82:	c20c                	sw	a1,0(a2)
/home/gl/work/opentitan/repo/build-out/../sw/device/lib/dif/dif_uart.c:582
  }

  return kDifUartOk;
}
20001a84:	8082                	ret

20001a86 <__udivdi3>:
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1319
20001a86:	88aa                	mv	a7,a0
20001a88:	87ae                	mv	a5,a1
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1024
20001a8a:	8832                	mv	a6,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1025
20001a8c:	8536                	mv	a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1026
20001a8e:	8346                	mv	t1,a7
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1064
20001a90:	20069963          	bnez	a3,20001ca2 <__udivdi3+0x21c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1066
20001a94:	200026b7          	lui	a3,0x20002
20001a98:	fa068693          	addi	a3,a3,-96 # 20001fa0 <__clz_tab>
20001a9c:	0cc5f063          	bgeu	a1,a2,20001b5c <__udivdi3+0xd6>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
20001aa0:	6741                	lui	a4,0x10
20001aa2:	0ae67663          	bgeu	a2,a4,20001b4e <__udivdi3+0xc8>
20001aa6:	0ff00713          	li	a4,255
20001aaa:	00c73733          	sltu	a4,a4,a2
20001aae:	070e                	slli	a4,a4,0x3
20001ab0:	00e65533          	srl	a0,a2,a4
20001ab4:	96aa                	add	a3,a3,a0
20001ab6:	0006c683          	lbu	a3,0(a3)
20001aba:	02000513          	li	a0,32
20001abe:	9736                	add	a4,a4,a3
20001ac0:	40e506b3          	sub	a3,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1072
20001ac4:	00e50c63          	beq	a0,a4,20001adc <__udivdi3+0x56>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
20001ac8:	00d797b3          	sll	a5,a5,a3
20001acc:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1077
20001ad0:	00d61833          	sll	a6,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1078
20001ad4:	00f765b3          	or	a1,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1079
20001ad8:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1082
20001adc:	01085893          	srli	a7,a6,0x10
20001ae0:	0315d7b3          	divu	a5,a1,a7
20001ae4:	01081613          	slli	a2,a6,0x10
20001ae8:	8241                	srli	a2,a2,0x10
20001aea:	01035713          	srli	a4,t1,0x10
20001aee:	0315f6b3          	remu	a3,a1,a7
20001af2:	853e                	mv	a0,a5
20001af4:	02f605b3          	mul	a1,a2,a5
20001af8:	06c2                	slli	a3,a3,0x10
20001afa:	8f55                	or	a4,a4,a3
20001afc:	00b77c63          	bgeu	a4,a1,20001b14 <__udivdi3+0x8e>
20001b00:	9742                	add	a4,a4,a6
20001b02:	fff78513          	addi	a0,a5,-1
20001b06:	01076763          	bltu	a4,a6,20001b14 <__udivdi3+0x8e>
20001b0a:	00b77563          	bgeu	a4,a1,20001b14 <__udivdi3+0x8e>
20001b0e:	ffe78513          	addi	a0,a5,-2
20001b12:	9742                	add	a4,a4,a6
20001b14:	8f0d                	sub	a4,a4,a1
20001b16:	031777b3          	remu	a5,a4,a7
20001b1a:	0342                	slli	t1,t1,0x10
20001b1c:	01035313          	srli	t1,t1,0x10
20001b20:	03175733          	divu	a4,a4,a7
20001b24:	07c2                	slli	a5,a5,0x10
20001b26:	0067e333          	or	t1,a5,t1
20001b2a:	02e606b3          	mul	a3,a2,a4
20001b2e:	863a                	mv	a2,a4
20001b30:	00d37b63          	bgeu	t1,a3,20001b46 <__udivdi3+0xc0>
20001b34:	9342                	add	t1,t1,a6
20001b36:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
20001b3a:	01036663          	bltu	t1,a6,20001b46 <__udivdi3+0xc0>
20001b3e:	00d37463          	bgeu	t1,a3,20001b46 <__udivdi3+0xc0>
20001b42:	ffe70613          	addi	a2,a4,-2
20001b46:	0542                	slli	a0,a0,0x10
20001b48:	8d51                	or	a0,a0,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
20001b4a:	4581                	li	a1,0
20001b4c:	a85d                	j	20001c02 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1070
20001b4e:	01000537          	lui	a0,0x1000
20001b52:	4741                	li	a4,16
20001b54:	f4a66ee3          	bltu	a2,a0,20001ab0 <__udivdi3+0x2a>
20001b58:	4761                	li	a4,24
20001b5a:	bf99                	j	20001ab0 <__udivdi3+0x2a>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1091
20001b5c:	e601                	bnez	a2,20001b64 <__udivdi3+0xde>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1092
20001b5e:	4705                	li	a4,1
20001b60:	02c75833          	divu	a6,a4,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
20001b64:	6741                	lui	a4,0x10
20001b66:	08e87f63          	bgeu	a6,a4,20001c04 <__udivdi3+0x17e>
20001b6a:	0ff00713          	li	a4,255
20001b6e:	01077363          	bgeu	a4,a6,20001b74 <__udivdi3+0xee>
20001b72:	4521                	li	a0,8
20001b74:	00a85733          	srl	a4,a6,a0
20001b78:	96ba                	add	a3,a3,a4
20001b7a:	0006c703          	lbu	a4,0(a3)
20001b7e:	02000613          	li	a2,32
20001b82:	972a                	add	a4,a4,a0
20001b84:	40e606b3          	sub	a3,a2,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1096
20001b88:	08e61563          	bne	a2,a4,20001c12 <__udivdi3+0x18c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1105
20001b8c:	410787b3          	sub	a5,a5,a6
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1106
20001b90:	4585                	li	a1,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1124
20001b92:	01085893          	srli	a7,a6,0x10
20001b96:	01081613          	slli	a2,a6,0x10
20001b9a:	8241                	srli	a2,a2,0x10
20001b9c:	01035713          	srli	a4,t1,0x10
20001ba0:	0317f6b3          	remu	a3,a5,a7
20001ba4:	0317d7b3          	divu	a5,a5,a7
20001ba8:	06c2                	slli	a3,a3,0x10
20001baa:	8f55                	or	a4,a4,a3
20001bac:	02f60e33          	mul	t3,a2,a5
20001bb0:	853e                	mv	a0,a5
20001bb2:	01c77c63          	bgeu	a4,t3,20001bca <__udivdi3+0x144>
20001bb6:	9742                	add	a4,a4,a6
20001bb8:	fff78513          	addi	a0,a5,-1
20001bbc:	01076763          	bltu	a4,a6,20001bca <__udivdi3+0x144>
20001bc0:	01c77563          	bgeu	a4,t3,20001bca <__udivdi3+0x144>
20001bc4:	ffe78513          	addi	a0,a5,-2
20001bc8:	9742                	add	a4,a4,a6
20001bca:	41c70733          	sub	a4,a4,t3
20001bce:	031777b3          	remu	a5,a4,a7
20001bd2:	0342                	slli	t1,t1,0x10
20001bd4:	01035313          	srli	t1,t1,0x10
20001bd8:	03175733          	divu	a4,a4,a7
20001bdc:	07c2                	slli	a5,a5,0x10
20001bde:	0067e333          	or	t1,a5,t1
20001be2:	02e606b3          	mul	a3,a2,a4
20001be6:	863a                	mv	a2,a4
20001be8:	00d37b63          	bgeu	t1,a3,20001bfe <__udivdi3+0x178>
20001bec:	9342                	add	t1,t1,a6
20001bee:	fff70613          	addi	a2,a4,-1 # ffff <_stack_size+0xdfff>
20001bf2:	01036663          	bltu	t1,a6,20001bfe <__udivdi3+0x178>
20001bf6:	00d37463          	bgeu	t1,a3,20001bfe <__udivdi3+0x178>
20001bfa:	ffe70613          	addi	a2,a4,-2
20001bfe:	0542                	slli	a0,a0,0x10
20001c00:	8d51                	or	a0,a0,a2
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1321
20001c02:	8082                	ret
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1094
20001c04:	01000737          	lui	a4,0x1000
20001c08:	4541                	li	a0,16
20001c0a:	f6e865e3          	bltu	a6,a4,20001b74 <__udivdi3+0xee>
20001c0e:	4561                	li	a0,24
20001c10:	b795                	j	20001b74 <__udivdi3+0xee>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1114
20001c12:	00d81833          	sll	a6,a6,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1115
20001c16:	00e7d5b3          	srl	a1,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1117
20001c1a:	00d89333          	sll	t1,a7,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
20001c1e:	00d797b3          	sll	a5,a5,a3
20001c22:	00e8d733          	srl	a4,a7,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
20001c26:	01085893          	srli	a7,a6,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1116
20001c2a:	00f76633          	or	a2,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1119
20001c2e:	0315f733          	remu	a4,a1,a7
20001c32:	01081793          	slli	a5,a6,0x10
20001c36:	83c1                	srli	a5,a5,0x10
20001c38:	01065513          	srli	a0,a2,0x10
20001c3c:	0315d5b3          	divu	a1,a1,a7
20001c40:	0742                	slli	a4,a4,0x10
20001c42:	8f49                	or	a4,a4,a0
20001c44:	02b786b3          	mul	a3,a5,a1
20001c48:	852e                	mv	a0,a1
20001c4a:	00d77c63          	bgeu	a4,a3,20001c62 <__udivdi3+0x1dc>
20001c4e:	9742                	add	a4,a4,a6
20001c50:	fff58513          	addi	a0,a1,-1 # ffffff <test_main.kLogFields.9+0xfefefb>
20001c54:	01076763          	bltu	a4,a6,20001c62 <__udivdi3+0x1dc>
20001c58:	00d77563          	bgeu	a4,a3,20001c62 <__udivdi3+0x1dc>
20001c5c:	ffe58513          	addi	a0,a1,-2
20001c60:	9742                	add	a4,a4,a6
20001c62:	40d706b3          	sub	a3,a4,a3
20001c66:	0316f733          	remu	a4,a3,a7
20001c6a:	0642                	slli	a2,a2,0x10
20001c6c:	8241                	srli	a2,a2,0x10
20001c6e:	0316d6b3          	divu	a3,a3,a7
20001c72:	0742                	slli	a4,a4,0x10
20001c74:	02d788b3          	mul	a7,a5,a3
20001c78:	00c767b3          	or	a5,a4,a2
20001c7c:	8736                	mv	a4,a3
20001c7e:	0117fc63          	bgeu	a5,a7,20001c96 <__udivdi3+0x210>
20001c82:	97c2                	add	a5,a5,a6
20001c84:	fff68713          	addi	a4,a3,-1
20001c88:	0107e763          	bltu	a5,a6,20001c96 <__udivdi3+0x210>
20001c8c:	0117f563          	bgeu	a5,a7,20001c96 <__udivdi3+0x210>
20001c90:	ffe68713          	addi	a4,a3,-2
20001c94:	97c2                	add	a5,a5,a6
20001c96:	01051593          	slli	a1,a0,0x10
20001c9a:	411787b3          	sub	a5,a5,a7
20001c9e:	8dd9                	or	a1,a1,a4
20001ca0:	bdcd                	j	20001b92 <__udivdi3+0x10c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1140
20001ca2:	14d5e263          	bltu	a1,a3,20001de6 <__udivdi3+0x360>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20001ca6:	6741                	lui	a4,0x10
20001ca8:	02e6ff63          	bgeu	a3,a4,20001ce6 <__udivdi3+0x260>
20001cac:	0ff00713          	li	a4,255
20001cb0:	00d735b3          	sltu	a1,a4,a3
20001cb4:	058e                	slli	a1,a1,0x3
20001cb6:	20002737          	lui	a4,0x20002
20001cba:	00b6d533          	srl	a0,a3,a1
20001cbe:	fa070713          	addi	a4,a4,-96 # 20001fa0 <__clz_tab>
20001cc2:	972a                	add	a4,a4,a0
20001cc4:	00074703          	lbu	a4,0(a4)
20001cc8:	02000513          	li	a0,32
20001ccc:	972e                	add	a4,a4,a1
20001cce:	40e505b3          	sub	a1,a0,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1160
20001cd2:	02e51163          	bne	a0,a4,20001cf4 <__udivdi3+0x26e>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1172
20001cd6:	4505                	li	a0,1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1170
20001cd8:	f2f6e5e3          	bltu	a3,a5,20001c02 <__udivdi3+0x17c>
20001cdc:	00c8b533          	sltu	a0,a7,a2
20001ce0:	00154513          	xori	a0,a0,1
20001ce4:	bf39                	j	20001c02 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1159
20001ce6:	01000737          	lui	a4,0x1000
20001cea:	45c1                	li	a1,16
20001cec:	fce6e5e3          	bltu	a3,a4,20001cb6 <__udivdi3+0x230>
20001cf0:	45e1                	li	a1,24
20001cf2:	b7d1                	j	20001cb6 <__udivdi3+0x230>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1194
20001cf4:	00e65333          	srl	t1,a2,a4
20001cf8:	00b696b3          	sll	a3,a3,a1
20001cfc:	00d36333          	or	t1,t1,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001d00:	01035513          	srli	a0,t1,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1195
20001d04:	00b61eb3          	sll	t4,a2,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1196
20001d08:	00e7d633          	srl	a2,a5,a4
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001d0c:	02a676b3          	remu	a3,a2,a0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1197
20001d10:	00b797b3          	sll	a5,a5,a1
20001d14:	00e8d733          	srl	a4,a7,a4
20001d18:	00f76833          	or	a6,a4,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001d1c:	01031793          	slli	a5,t1,0x10
20001d20:	83c1                	srli	a5,a5,0x10
20001d22:	01085713          	srli	a4,a6,0x10
20001d26:	02a65633          	divu	a2,a2,a0
20001d2a:	06c2                	slli	a3,a3,0x10
20001d2c:	8f55                	or	a4,a4,a3
20001d2e:	02c78f33          	mul	t5,a5,a2
20001d32:	8e32                	mv	t3,a2
20001d34:	01e77c63          	bgeu	a4,t5,20001d4c <__udivdi3+0x2c6>
20001d38:	971a                	add	a4,a4,t1
20001d3a:	fff60e13          	addi	t3,a2,-1 # ffff <_stack_size+0xdfff>
20001d3e:	00676763          	bltu	a4,t1,20001d4c <__udivdi3+0x2c6>
20001d42:	01e77563          	bgeu	a4,t5,20001d4c <__udivdi3+0x2c6>
20001d46:	ffe60e13          	addi	t3,a2,-2
20001d4a:	971a                	add	a4,a4,t1
20001d4c:	41e70733          	sub	a4,a4,t5
20001d50:	02a776b3          	remu	a3,a4,a0
20001d54:	02a75733          	divu	a4,a4,a0
20001d58:	06c2                	slli	a3,a3,0x10
20001d5a:	02e78633          	mul	a2,a5,a4
20001d5e:	01081793          	slli	a5,a6,0x10
20001d62:	83c1                	srli	a5,a5,0x10
20001d64:	8fd5                	or	a5,a5,a3
20001d66:	86ba                	mv	a3,a4
20001d68:	00c7fc63          	bgeu	a5,a2,20001d80 <__udivdi3+0x2fa>
20001d6c:	979a                	add	a5,a5,t1
20001d6e:	fff70693          	addi	a3,a4,-1 # ffffff <test_main.kLogFields.9+0xfefefb>
20001d72:	0067e763          	bltu	a5,t1,20001d80 <__udivdi3+0x2fa>
20001d76:	00c7f563          	bgeu	a5,a2,20001d80 <__udivdi3+0x2fa>
20001d7a:	ffe70693          	addi	a3,a4,-2
20001d7e:	979a                	add	a5,a5,t1
20001d80:	010e1513          	slli	a0,t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001d84:	6e41                	lui	t3,0x10
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001d86:	8d55                	or	a0,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001d88:	fffe0693          	addi	a3,t3,-1 # ffff <_stack_size+0xdfff>
20001d8c:	00d57833          	and	a6,a0,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1200
20001d90:	8f91                	sub	a5,a5,a2
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001d92:	00def6b3          	and	a3,t4,a3
20001d96:	01055613          	srli	a2,a0,0x10
20001d9a:	010ede93          	srli	t4,t4,0x10
20001d9e:	02d80333          	mul	t1,a6,a3
20001da2:	02d606b3          	mul	a3,a2,a3
20001da6:	01035713          	srli	a4,t1,0x10
20001daa:	03d80833          	mul	a6,a6,t4
20001dae:	9836                	add	a6,a6,a3
20001db0:	9742                	add	a4,a4,a6
20001db2:	03d60633          	mul	a2,a2,t4
20001db6:	00d77363          	bgeu	a4,a3,20001dbc <__udivdi3+0x336>
20001dba:	9672                	add	a2,a2,t3
20001dbc:	01075693          	srli	a3,a4,0x10
20001dc0:	9636                	add	a2,a2,a3
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
20001dc2:	02c7e063          	bltu	a5,a2,20001de2 <__udivdi3+0x35c>
20001dc6:	d8c792e3          	bne	a5,a2,20001b4a <__udivdi3+0xc4>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001dca:	67c1                	lui	a5,0x10
20001dcc:	17fd                	addi	a5,a5,-1
20001dce:	8f7d                	and	a4,a4,a5
20001dd0:	0742                	slli	a4,a4,0x10
20001dd2:	00f37333          	and	t1,t1,a5
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1198
20001dd6:	00b898b3          	sll	a7,a7,a1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1201
20001dda:	971a                	add	a4,a4,t1
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1209
20001ddc:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1203
20001dde:	e2e8f2e3          	bgeu	a7,a4,20001c02 <__udivdi3+0x17c>
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1205
20001de2:	157d                	addi	a0,a0,-1
__udivdi3():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1206
20001de4:	b39d                	j	20001b4a <__udivdi3+0xc4>
__udivmoddi4():
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1145
20001de6:	4581                	li	a1,0
/__w/1/s/build/gcc/.build/riscv32-unknown-elf/src/gcc/libgcc/libgcc2.c:1144
20001de8:	4501                	li	a0,0
20001dea:	bd21                	j	20001c02 <__udivdi3+0x17c>
